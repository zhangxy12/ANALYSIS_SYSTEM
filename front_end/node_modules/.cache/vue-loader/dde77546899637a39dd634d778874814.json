{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\mainscreen\\allPost.vue?vue&type=style&index=0&id=09de268f&prod&scoped=true&lang=css","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\mainscreen\\allPost.vue","mtime":1741852484339},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\css-loader\\dist\\cjs.js","mtime":1733210773580},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1733210773701},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\postcss-loader\\src\\index.js","mtime":1733210773504},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpoMiB7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgIGZvbnQtc2l6ZTogMThweDsNCiAgICBjb2xvcjogI2YyZjJmMjsNCiAgICBtYXJnaW4tYm90dG9tOiAxcHg7DQp9DQoNCi8qIOacqumAieS4reaXtueahOagt+W8jyAqLw0KaW5wdXRbdHlwZT0icmFkaW8iXSB7DQogIGFjY2VudC1jb2xvcjogcmdiKDIwNSwgMjM3LCAyNDgpOyAvKiDmnKrpgInkuK3ml7bnmoTpopzoibIgKi8NCiAgYm94LXNoYWRvdzogMCAwIDVweCByZ2JhKDAsIDAsIDAsIDAuMik7IC8qIOacqumAieS4reaXtueahOmYtOW9sSAqLw0KfQ0KDQovKiDpgInkuK3ml7bnmoTmoLflvI8gKi8NCmlucHV0W3R5cGU9InJhZGlvIl06Y2hlY2tlZCB7DQogIGFjY2VudC1jb2xvcjogcmdiYSgxMiwgMjQzLCAyMjcsIDAuODY3KTsgLyog6YCJ5Lit5pe255qE6aKc6ImyICovDQogIGJveC1zaGFkb3c6IDAgMCA1cHggcmdiYSgxMiwgMjQzLCAyMjgsIDAuMzg5KTsgLyog5pyq6YCJ5Lit5pe255qE6Zi05b2xICovDQp9DQoNCi5vcHRpb24tY29udGFpbmVyIHsNCiAgICBtYXJnaW4tdG9wOiAwcHg7DQogICAgbWFyZ2luLWJvdHRvbTogMHB4Ow0KICAgIG1hcmdpbi1sZWZ0OiA1NTBweDsNCn0NCg=="},{"version":3,"sources":["allPost.vue"],"names":[],"mappings":";AAqKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"allPost.vue","sourceRoot":"src/components/mainscreen","sourcesContent":["<template>\r\n    <div>\r\n        <h2><svg t=\"1741848222918\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"16922\" width=\"200\" height=\"200\"><path d=\"M170.667 739.556c34.133 0 56.889 22.755 56.889 56.888v113.778c0 34.134-22.756 56.89-56.89 56.89s-56.888-22.756-56.888-56.89V796.444c0-34.133 22.755-56.888 56.889-56.888z m682.666-341.334c34.134 0 56.89 22.756 56.89 56.89v455.11c0 34.134-22.756 56.89-56.89 56.89s-56.889-22.756-56.889-56.89v-455.11c0-34.134 22.756-56.89 56.89-56.89z m-455.11 284.445c34.133 0 56.888 22.755 56.888 56.889v170.666c0 34.134-22.755 56.89-56.889 56.89s-56.889-22.756-56.889-56.89V739.556c0-34.134 22.756-56.89 56.89-56.89z m227.555-113.778c34.133 0 56.889 22.755 56.889 56.889v284.444c0 34.134-22.756 56.89-56.89 56.89s-56.888-22.756-56.888-56.89V625.778c0-34.134 22.755-56.89 56.889-56.89zM790.756 301.51c-5.69-130.844-11.378-204.8-17.067-227.555C768 51.2 750.933 39.822 722.489 45.51l-227.556 96.711c-17.066 17.067-11.377 28.445 5.69 34.134 11.377 5.688 34.133 22.755 79.644 45.51-108.09 164.978-238.934 267.378-455.111 312.89-34.134 5.688-34.134 34.133-5.69 34.133C347.023 557.51 534.757 460.8 671.29 278.756c28.444 17.066 51.2 34.133 85.333 51.2 28.445 11.377 39.822 5.688 34.134-28.445z\" fill=\"#ffffff\" p-id=\"16923\"></path></svg>     舆情趋势</h2>\r\n        <!-- 使用原生 radio 按钮实现时间范围选择 -->\r\n        <div class=\"option-container\" style=\"height: 20px;\">\r\n            <input type=\"radio\" id=\"oneWeek\" name=\"timeRange\" value=\"oneWeek\" v-model=\"timeRange\" @change=\"fetchData\">\r\n            <label for=\"oneWeek\">一周</label>\r\n            <input type=\"radio\" id=\"oneMonth\" name=\"timeRange\" value=\"oneMonth\" v-model=\"timeRange\" @change=\"fetchData\">\r\n            <label for=\"oneMonth\">一个月</label>\r\n        </div>\r\n        <div ref=\"chart\" style=\"width: 100%; height: 190px; margin-top: 0%;\"> </div>\r\n        <div v-if=\"errorMessage\" style=\"color: red;\">{{ errorMessage }}</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            chart: null,\r\n            errorMessage: '',\r\n            timeRange: 'oneWeek',\r\n            data: [] // 修改为数组\r\n        };\r\n    },\r\n    mounted() {\r\n        this.fetchData();\r\n    },\r\n    methods: {\r\n        async fetchData() {\r\n            try {\r\n                const response = await axios.get('/main/all_post');\r\n                console.log(response);\r\n                if (response.data.code === 0) {\r\n                    this.data = response.data.data || []; // 确保 this.data 是一个数组\r\n                    console.log(this.data);\r\n                    this.drawChart();\r\n                } else {\r\n                    this.errorMessage = response.data.message;\r\n                }\r\n            } catch (error) {\r\n                this.errorMessage = '请求数据时出现错误，请稍后重试。';\r\n                console.error(error);\r\n            }\r\n        },\r\n\r\n        drawChart() {\r\n            const appNames = ['微信', '微博', '人民网', '贴吧'];\r\n            const appKeys = ['wechat', 'weibo', 'renmin', 'tieba'];\r\n            const timePeriod = this.getTimePeriod();\r\n\r\n            // 提取数据\r\n            const filteredData = this.data\r\n                .flatMap(item => item.data) // 将嵌套的 data 数组扁平化\r\n                .filter(item => timePeriod.includes(item.date)) // 过滤出符合时间范围的数据\r\n                .sort((a, b) => new Date(a.date) - new Date(b.date)); // 按日期排序\r\n\r\n            // 提取日期\r\n            const dates = filteredData.map(item => item.date);\r\n\r\n            // 提取每个平台的数据\r\n            const seriesData = appKeys.map(key => {\r\n                return filteredData.map(item => item.source_count[key] || 0);\r\n            });\r\n\r\n            // 打印调试信息\r\n            console.log('Filtered Data:', filteredData);\r\n            console.log('Dates:', dates);\r\n            console.log('Series Data:', seriesData);\r\n\r\n            this.chart = echarts.init(this.$refs.chart);\r\n\r\n            const option = {\r\n                // title: {\r\n                //     text: '舆情趋势',\r\n                //     left: 'center',\r\n                //     textStyle: {\r\n                //         color: '#fff',\r\n                //         fontSize: 18,\r\n                //         fontWeight: 'bold'\r\n                //     }\r\n                // },\r\n                top:'0',\r\n                bottom:'20',\r\n                tooltip: {\r\n                    trigger: 'axis'\r\n                },\r\n                grid: {\r\n                    top:'0.1%',\r\n                    show: false // 不显示网格\r\n                },\r\n                xAxis: {\r\n                    type: 'category',\r\n                    data: dates,\r\n                    axisLabel: {\r\n                        color: '#fff'\r\n                    },\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: '#fff'\r\n                        }\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    type: 'value',\r\n                    axisLabel: {\r\n                        color: '#fff'\r\n                    },\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: '#fff'\r\n                        }\r\n                    }\r\n                },\r\n                series: appNames.map((name, index) => {\r\n                    return {\r\n                        name: name,\r\n                        type: 'line',\r\n                        data: seriesData[index],\r\n                        areaStyle: {\r\n                            opacity: 0.3 // 曲线阴影透明度\r\n                        },\r\n                        itemStyle: {\r\n                            color: this.getColor(index)\r\n                        },\r\n                        lineStyle: {\r\n                            color: this.getColor(index)\r\n                        },\r\n                        smooth: true // 添加 smooth 属性，将折线变为平滑曲线\r\n                    };\r\n                })\r\n            };\r\n\r\n            this.chart.setOption(option);\r\n        },\r\n        getTimePeriod() {\r\n            const now = new Date();\r\n            const timePeriod = [];\r\n            if (this.timeRange === 'oneWeek') {\r\n                for (let i = 6; i >= 0; i--) {\r\n                    const date = new Date(now);\r\n                    date.setDate(now.getDate() - i);\r\n                    timePeriod.push(date.toISOString().split('T')[0]);\r\n                }\r\n            } else if (this.timeRange === 'oneMonth') {\r\n                for (let i = 29; i >= 0; i--) {\r\n                    const date = new Date(now);\r\n                    date.setDate(now.getDate() - i);\r\n                    timePeriod.push(date.toISOString().split('T')[0]);\r\n                }\r\n            }\r\n            return timePeriod;\r\n        },\r\n        getColor(index) {\r\n            const colors = ['#1f78b4', '#6baed6', '#9ecae1', '#c6dbef'];\r\n            return colors[index % colors.length];\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh2 {\r\n    text-align: center;\r\n    font-size: 18px;\r\n    color: #f2f2f2;\r\n    margin-bottom: 1px;\r\n}\r\n\r\n/* 未选中时的样式 */\r\ninput[type=\"radio\"] {\r\n  accent-color: rgb(205, 237, 248); /* 未选中时的颜色 */\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2); /* 未选中时的阴影 */\r\n}\r\n\r\n/* 选中时的样式 */\r\ninput[type=\"radio\"]:checked {\r\n  accent-color: rgba(12, 243, 227, 0.867); /* 选中时的颜色 */\r\n  box-shadow: 0 0 5px rgba(12, 243, 228, 0.389); /* 未选中时的阴影 */\r\n}\r\n\r\n.option-container {\r\n    margin-top: 0px;\r\n    margin-bottom: 0px;\r\n    margin-left: 550px;\r\n}\r\n</style>"]}]}