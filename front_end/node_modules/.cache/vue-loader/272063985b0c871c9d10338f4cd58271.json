{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\mainscreen\\allPost.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\mainscreen\\allPost.vue","mtime":1741852484339},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":1733210776030},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOw0KaW1wb3J0ICogYXMgZWNoYXJ0cyBmcm9tICdlY2hhcnRzJzsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICAgIGRhdGEoKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgICBjaGFydDogbnVsbCwNCiAgICAgICAgICAgIGVycm9yTWVzc2FnZTogJycsDQogICAgICAgICAgICB0aW1lUmFuZ2U6ICdvbmVXZWVrJywNCiAgICAgICAgICAgIGRhdGE6IFtdIC8vIOS/ruaUueS4uuaVsOe7hA0KICAgICAgICB9Ow0KICAgIH0sDQogICAgbW91bnRlZCgpIHsNCiAgICAgICAgdGhpcy5mZXRjaERhdGEoKTsNCiAgICB9LA0KICAgIG1ldGhvZHM6IHsNCiAgICAgICAgYXN5bmMgZmV0Y2hEYXRhKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgnL21haW4vYWxsX3Bvc3QnKTsNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7DQogICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuY29kZSA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmRhdGEgPSByZXNwb25zZS5kYXRhLmRhdGEgfHwgW107IC8vIOehruS/nSB0aGlzLmRhdGEg5piv5LiA5Liq5pWw57uEDQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuZGF0YSk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuZHJhd0NoYXJ0KCk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5lcnJvck1lc3NhZ2UgPSByZXNwb25zZS5kYXRhLm1lc3NhZ2U7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICB0aGlzLmVycm9yTWVzc2FnZSA9ICfor7fmsYLmlbDmja7ml7blh7rnjrDplJnor6/vvIzor7fnqI3lkI7ph43or5XjgIInOw0KICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIGRyYXdDaGFydCgpIHsNCiAgICAgICAgICAgIGNvbnN0IGFwcE5hbWVzID0gWyflvq7kv6EnLCAn5b6u5Y2aJywgJ+S6uuawkee9kScsICfotLTlkKcnXTsNCiAgICAgICAgICAgIGNvbnN0IGFwcEtleXMgPSBbJ3dlY2hhdCcsICd3ZWlibycsICdyZW5taW4nLCAndGllYmEnXTsNCiAgICAgICAgICAgIGNvbnN0IHRpbWVQZXJpb2QgPSB0aGlzLmdldFRpbWVQZXJpb2QoKTsNCg0KICAgICAgICAgICAgLy8g5o+Q5Y+W5pWw5o2uDQogICAgICAgICAgICBjb25zdCBmaWx0ZXJlZERhdGEgPSB0aGlzLmRhdGENCiAgICAgICAgICAgICAgICAuZmxhdE1hcChpdGVtID0+IGl0ZW0uZGF0YSkgLy8g5bCG5bWM5aWX55qEIGRhdGEg5pWw57uE5omB5bmz5YyWDQogICAgICAgICAgICAgICAgLmZpbHRlcihpdGVtID0+IHRpbWVQZXJpb2QuaW5jbHVkZXMoaXRlbS5kYXRlKSkgLy8g6L+H5ruk5Ye656ym5ZCI5pe26Ze06IyD5Zu055qE5pWw5o2uDQogICAgICAgICAgICAgICAgLnNvcnQoKGEsIGIpID0+IG5ldyBEYXRlKGEuZGF0ZSkgLSBuZXcgRGF0ZShiLmRhdGUpKTsgLy8g5oyJ5pel5pyf5o6S5bqPDQoNCiAgICAgICAgICAgIC8vIOaPkOWPluaXpeacnw0KICAgICAgICAgICAgY29uc3QgZGF0ZXMgPSBmaWx0ZXJlZERhdGEubWFwKGl0ZW0gPT4gaXRlbS5kYXRlKTsNCg0KICAgICAgICAgICAgLy8g5o+Q5Y+W5q+P5Liq5bmz5Y+w55qE5pWw5o2uDQogICAgICAgICAgICBjb25zdCBzZXJpZXNEYXRhID0gYXBwS2V5cy5tYXAoa2V5ID0+IHsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmlsdGVyZWREYXRhLm1hcChpdGVtID0+IGl0ZW0uc291cmNlX2NvdW50W2tleV0gfHwgMCk7DQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgLy8g5omT5Y2w6LCD6K+V5L+h5oGvDQogICAgICAgICAgICBjb25zb2xlLmxvZygnRmlsdGVyZWQgRGF0YTonLCBmaWx0ZXJlZERhdGEpOw0KICAgICAgICAgICAgY29uc29sZS5sb2coJ0RhdGVzOicsIGRhdGVzKTsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTZXJpZXMgRGF0YTonLCBzZXJpZXNEYXRhKTsNCg0KICAgICAgICAgICAgdGhpcy5jaGFydCA9IGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLmNoYXJ0KTsNCg0KICAgICAgICAgICAgY29uc3Qgb3B0aW9uID0gew0KICAgICAgICAgICAgICAgIC8vIHRpdGxlOiB7DQogICAgICAgICAgICAgICAgLy8gICAgIHRleHQ6ICfoiIbmg4Xotovlir8nLA0KICAgICAgICAgICAgICAgIC8vICAgICBsZWZ0OiAnY2VudGVyJywNCiAgICAgICAgICAgICAgICAvLyAgICAgdGV4dFN0eWxlOiB7DQogICAgICAgICAgICAgICAgLy8gICAgICAgICBjb2xvcjogJyNmZmYnLA0KICAgICAgICAgICAgICAgIC8vICAgICAgICAgZm9udFNpemU6IDE4LA0KICAgICAgICAgICAgICAgIC8vICAgICAgICAgZm9udFdlaWdodDogJ2JvbGQnDQogICAgICAgICAgICAgICAgLy8gICAgIH0NCiAgICAgICAgICAgICAgICAvLyB9LA0KICAgICAgICAgICAgICAgIHRvcDonMCcsDQogICAgICAgICAgICAgICAgYm90dG9tOicyMCcsDQogICAgICAgICAgICAgICAgdG9vbHRpcDogew0KICAgICAgICAgICAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIGdyaWQ6IHsNCiAgICAgICAgICAgICAgICAgICAgdG9wOicwLjElJywNCiAgICAgICAgICAgICAgICAgICAgc2hvdzogZmFsc2UgLy8g5LiN5pi+56S6572R5qC8DQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICB4QXhpczogew0KICAgICAgICAgICAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLA0KICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRlcywNCiAgICAgICAgICAgICAgICAgICAgYXhpc0xhYmVsOiB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyNmZmYnDQogICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgIGF4aXNMaW5lOiB7DQogICAgICAgICAgICAgICAgICAgICAgICBsaW5lU3R5bGU6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyNmZmYnDQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIHlBeGlzOiB7DQogICAgICAgICAgICAgICAgICAgIHR5cGU6ICd2YWx1ZScsDQogICAgICAgICAgICAgICAgICAgIGF4aXNMYWJlbDogew0KICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjZmZmJw0KICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICBheGlzTGluZTogew0KICAgICAgICAgICAgICAgICAgICAgICAgbGluZVN0eWxlOiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjZmZmJw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICBzZXJpZXM6IGFwcE5hbWVzLm1hcCgobmFtZSwgaW5kZXgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnbGluZScsDQogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBzZXJpZXNEYXRhW2luZGV4XSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGFyZWFTdHlsZTogew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuMyAvLyDmm7Lnur/pmLTlvbHpgI/mmI7luqYNCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICBpdGVtU3R5bGU6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogdGhpcy5nZXRDb2xvcihpbmRleCkNCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICBsaW5lU3R5bGU6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogdGhpcy5nZXRDb2xvcihpbmRleCkNCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICBzbW9vdGg6IHRydWUgLy8g5re75YqgIHNtb290aCDlsZ7mgKfvvIzlsIbmipjnur/lj5jkuLrlubPmu5Hmm7Lnur8NCiAgICAgICAgICAgICAgICAgICAgfTsNCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgdGhpcy5jaGFydC5zZXRPcHRpb24ob3B0aW9uKTsNCiAgICAgICAgfSwNCiAgICAgICAgZ2V0VGltZVBlcmlvZCgpIHsNCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7DQogICAgICAgICAgICBjb25zdCB0aW1lUGVyaW9kID0gW107DQogICAgICAgICAgICBpZiAodGhpcy50aW1lUmFuZ2UgPT09ICdvbmVXZWVrJykgew0KICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSA2OyBpID49IDA7IGktLSkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUobm93KTsNCiAgICAgICAgICAgICAgICAgICAgZGF0ZS5zZXREYXRlKG5vdy5nZXREYXRlKCkgLSBpKTsNCiAgICAgICAgICAgICAgICAgICAgdGltZVBlcmlvZC5wdXNoKGRhdGUudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMudGltZVJhbmdlID09PSAnb25lTW9udGgnKSB7DQogICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDI5OyBpID49IDA7IGktLSkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUobm93KTsNCiAgICAgICAgICAgICAgICAgICAgZGF0ZS5zZXREYXRlKG5vdy5nZXREYXRlKCkgLSBpKTsNCiAgICAgICAgICAgICAgICAgICAgdGltZVBlcmlvZC5wdXNoKGRhdGUudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICByZXR1cm4gdGltZVBlcmlvZDsNCiAgICAgICAgfSwNCiAgICAgICAgZ2V0Q29sb3IoaW5kZXgpIHsNCiAgICAgICAgICAgIGNvbnN0IGNvbG9ycyA9IFsnIzFmNzhiNCcsICcjNmJhZWQ2JywgJyM5ZWNhZTEnLCAnI2M2ZGJlZiddOw0KICAgICAgICAgICAgcmV0dXJuIGNvbG9yc1tpbmRleCAlIGNvbG9ycy5sZW5ndGhdOw0KICAgICAgICB9DQogICAgfQ0KfTsNCg=="},{"version":3,"sources":["allPost.vue"],"names":[],"mappings":";AAgfile":"allPost.vue","sourceRoot":"src/components/mainscreen","sourcesContent":["<template>\r\n    <div>\r\n        <h2><svg t=\"1741848222918\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"16922\" width=\"200\" height=\"200\"><path d=\"M170.667 739.556c34.133 0 56.889 22.755 56.889 56.888v113.778c0 34.134-22.756 56.89-56.89 56.89s-56.888-22.756-56.888-56.89V796.444c0-34.133 22.755-56.888 56.889-56.888z m682.666-341.334c34.134 0 56.89 22.756 56.89 56.89v455.11c0 34.134-22.756 56.89-56.89 56.89s-56.889-22.756-56.889-56.89v-455.11c0-34.134 22.756-56.89 56.89-56.89z m-455.11 284.445c34.133 0 56.888 22.755 56.888 56.889v170.666c0 34.134-22.755 56.89-56.889 56.89s-56.889-22.756-56.889-56.89V739.556c0-34.134 22.756-56.89 56.89-56.89z m227.555-113.778c34.133 0 56.889 22.755 56.889 56.889v284.444c0 34.134-22.756 56.89-56.89 56.89s-56.888-22.756-56.888-56.89V625.778c0-34.134 22.755-56.89 56.889-56.89zM790.756 301.51c-5.69-130.844-11.378-204.8-17.067-227.555C768 51.2 750.933 39.822 722.489 45.51l-227.556 96.711c-17.066 17.067-11.377 28.445 5.69 34.134 11.377 5.688 34.133 22.755 79.644 45.51-108.09 164.978-238.934 267.378-455.111 312.89-34.134 5.688-34.134 34.133-5.69 34.133C347.023 557.51 534.757 460.8 671.29 278.756c28.444 17.066 51.2 34.133 85.333 51.2 28.445 11.377 39.822 5.688 34.134-28.445z\" fill=\"#ffffff\" p-id=\"16923\"></path></svg>     舆情趋势</h2>\r\n        <!-- 使用原生 radio 按钮实现时间范围选择 -->\r\n        <div class=\"option-container\" style=\"height: 20px;\">\r\n            <input type=\"radio\" id=\"oneWeek\" name=\"timeRange\" value=\"oneWeek\" v-model=\"timeRange\" @change=\"fetchData\">\r\n            <label for=\"oneWeek\">一周</label>\r\n            <input type=\"radio\" id=\"oneMonth\" name=\"timeRange\" value=\"oneMonth\" v-model=\"timeRange\" @change=\"fetchData\">\r\n            <label for=\"oneMonth\">一个月</label>\r\n        </div>\r\n        <div ref=\"chart\" style=\"width: 100%; height: 190px; margin-top: 0%;\"> </div>\r\n        <div v-if=\"errorMessage\" style=\"color: red;\">{{ errorMessage }}</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            chart: null,\r\n            errorMessage: '',\r\n            timeRange: 'oneWeek',\r\n            data: [] // 修改为数组\r\n        };\r\n    },\r\n    mounted() {\r\n        this.fetchData();\r\n    },\r\n    methods: {\r\n        async fetchData() {\r\n            try {\r\n                const response = await axios.get('/main/all_post');\r\n                console.log(response);\r\n                if (response.data.code === 0) {\r\n                    this.data = response.data.data || []; // 确保 this.data 是一个数组\r\n                    console.log(this.data);\r\n                    this.drawChart();\r\n                } else {\r\n                    this.errorMessage = response.data.message;\r\n                }\r\n            } catch (error) {\r\n                this.errorMessage = '请求数据时出现错误，请稍后重试。';\r\n                console.error(error);\r\n            }\r\n        },\r\n\r\n        drawChart() {\r\n            const appNames = ['微信', '微博', '人民网', '贴吧'];\r\n            const appKeys = ['wechat', 'weibo', 'renmin', 'tieba'];\r\n            const timePeriod = this.getTimePeriod();\r\n\r\n            // 提取数据\r\n            const filteredData = this.data\r\n                .flatMap(item => item.data) // 将嵌套的 data 数组扁平化\r\n                .filter(item => timePeriod.includes(item.date)) // 过滤出符合时间范围的数据\r\n                .sort((a, b) => new Date(a.date) - new Date(b.date)); // 按日期排序\r\n\r\n            // 提取日期\r\n            const dates = filteredData.map(item => item.date);\r\n\r\n            // 提取每个平台的数据\r\n            const seriesData = appKeys.map(key => {\r\n                return filteredData.map(item => item.source_count[key] || 0);\r\n            });\r\n\r\n            // 打印调试信息\r\n            console.log('Filtered Data:', filteredData);\r\n            console.log('Dates:', dates);\r\n            console.log('Series Data:', seriesData);\r\n\r\n            this.chart = echarts.init(this.$refs.chart);\r\n\r\n            const option = {\r\n                // title: {\r\n                //     text: '舆情趋势',\r\n                //     left: 'center',\r\n                //     textStyle: {\r\n                //         color: '#fff',\r\n                //         fontSize: 18,\r\n                //         fontWeight: 'bold'\r\n                //     }\r\n                // },\r\n                top:'0',\r\n                bottom:'20',\r\n                tooltip: {\r\n                    trigger: 'axis'\r\n                },\r\n                grid: {\r\n                    top:'0.1%',\r\n                    show: false // 不显示网格\r\n                },\r\n                xAxis: {\r\n                    type: 'category',\r\n                    data: dates,\r\n                    axisLabel: {\r\n                        color: '#fff'\r\n                    },\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: '#fff'\r\n                        }\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    type: 'value',\r\n                    axisLabel: {\r\n                        color: '#fff'\r\n                    },\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: '#fff'\r\n                        }\r\n                    }\r\n                },\r\n                series: appNames.map((name, index) => {\r\n                    return {\r\n                        name: name,\r\n                        type: 'line',\r\n                        data: seriesData[index],\r\n                        areaStyle: {\r\n                            opacity: 0.3 // 曲线阴影透明度\r\n                        },\r\n                        itemStyle: {\r\n                            color: this.getColor(index)\r\n                        },\r\n                        lineStyle: {\r\n                            color: this.getColor(index)\r\n                        },\r\n                        smooth: true // 添加 smooth 属性，将折线变为平滑曲线\r\n                    };\r\n                })\r\n            };\r\n\r\n            this.chart.setOption(option);\r\n        },\r\n        getTimePeriod() {\r\n            const now = new Date();\r\n            const timePeriod = [];\r\n            if (this.timeRange === 'oneWeek') {\r\n                for (let i = 6; i >= 0; i--) {\r\n                    const date = new Date(now);\r\n                    date.setDate(now.getDate() - i);\r\n                    timePeriod.push(date.toISOString().split('T')[0]);\r\n                }\r\n            } else if (this.timeRange === 'oneMonth') {\r\n                for (let i = 29; i >= 0; i--) {\r\n                    const date = new Date(now);\r\n                    date.setDate(now.getDate() - i);\r\n                    timePeriod.push(date.toISOString().split('T')[0]);\r\n                }\r\n            }\r\n            return timePeriod;\r\n        },\r\n        getColor(index) {\r\n            const colors = ['#1f78b4', '#6baed6', '#9ecae1', '#c6dbef'];\r\n            return colors[index % colors.length];\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh2 {\r\n    text-align: center;\r\n    font-size: 18px;\r\n    color: #f2f2f2;\r\n    margin-bottom: 1px;\r\n}\r\n\r\n/* 未选中时的样式 */\r\ninput[type=\"radio\"] {\r\n  accent-color: rgb(205, 237, 248); /* 未选中时的颜色 */\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2); /* 未选中时的阴影 */\r\n}\r\n\r\n/* 选中时的样式 */\r\ninput[type=\"radio\"]:checked {\r\n  accent-color: rgba(12, 243, 227, 0.867); /* 选中时的颜色 */\r\n  box-shadow: 0 0 5px rgba(12, 243, 228, 0.389); /* 未选中时的阴影 */\r\n}\r\n\r\n.option-container {\r\n    margin-top: 0px;\r\n    margin-bottom: 0px;\r\n    margin-left: 550px;\r\n}\r\n</style>"]}]}