{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\pages\\all_view.vue?vue&type=style&index=0&id=dcd2bcf2&scoped=true&lang=css","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\pages\\all_view.vue","mtime":1741770715104},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\css-loader\\dist\\cjs.js","mtime":1733210773580},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1733210773701},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\postcss-loader\\src\\index.js","mtime":1733210773504},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["all_view.vue"],"names":[],"mappings":";AA8hfile":"all_view.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div class=\"all_view\">\r\n      <div class=\"side\">\r\n        <SideBorder />\r\n      </div>\r\n  \r\n      <div class=\"main-content\">\r\n      <!-- 顶部搜索区域 -->\r\n      <div class=\"search-area\">\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"input\">\r\n            <input type=\"text\" v-model=\"key_word\" class=\"key\" placeholder=\"搜索话题\" />\r\n          </div>\r\n          <div class=\"action-buttons\">\r\n            <button @click=\"search\" class=\"tech-button\">搜索</button>\r\n          </div>\r\n\r\n          <!-- 历史搜索框 -->\r\n        <div class=\"history-panel\" >\r\n          <div class=\"history-header\">\r\n            <span>搜索历史</span>\r\n          </div>\r\n          <div class=\"history-list\">\r\n            <div class=\"history-item\" v-for=\"(topic, index) in historySearchTopics\" :key=\"index\">\r\n              <span @click=\"searchHistory(topic)\">{{ topic }}</span>\r\n              <i class=\"el-icon-close\" @click.stop=\"deleteHistory(topic)\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n      \r\n\r\n        <div class=\"filter-bar\">\r\n        <!-- 时间筛选 -->\r\n        <div class=\"filter-group\">\r\n          <span class=\"filter-label\">时间：</span>\r\n          <button \r\n            v-for=\"time in timeFilters\" \r\n            :key=\"time.value\"\r\n            @click=\"toggleFilter('time', time.value)\"\r\n            :class=\"{active: selectedTime === time.value}\"\r\n          >\r\n            {{ time.label }}\r\n          </button>\r\n        </div>\r\n\r\n        <!-- 情感筛选 -->\r\n        <div class=\"filter-group\">\r\n          <span class=\"filter-label\">情感：</span>\r\n          <button \r\n            v-for=\"sentiment in sentimentFilters\" \r\n            :key=\"sentiment.value\"\r\n            @click=\"toggleFilter('sentiment', sentiment.value)\"\r\n            :class=\"{active: selectedSentiment === sentiment.value}\"\r\n          >\r\n            {{ sentiment.label }}\r\n          </button>\r\n        </div>\r\n\r\n        <!-- 来源筛选 -->\r\n        <div class=\"filter-group\">\r\n          <span class=\"filter-label\">来源：</span>\r\n          <button\r\n            v-for=\"source in sourceFilters\"\r\n            :key=\"source.value\"\r\n            @click=\"toggleFilter('source', source.value)\"\r\n            :class=\"{active: selectedSources.includes(source.value)}\"\r\n          >\r\n            {{ source.label }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n         <!-- 加载动画 -->\r\n         <div v-if=\"loading\" class=\"loading-overlay\">\r\n          <div class=\"wavy\">\r\n            <span style=\"--i:1;\">l</span>\r\n            <span style=\"--i:2;\">o</span>\r\n            <span style=\"--i:3;\">a</span>\r\n            <span style=\"--i:4;\">d</span>\r\n            <span style=\"--i:5;\">i</span>\r\n            <span style=\"--i:6;\">n</span>\r\n            <span style=\"--i:7;\">g</span>\r\n            <span style=\"--i:8;\">.</span>\r\n            <span style=\"--i:9;\">.</span>\r\n            <span style=\"--i:10;\">.</span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 搜索结果 -->\r\n        <div class=\"searchResult\" v-show=\"searchResult\">\r\n          <div class=\"title\">\r\n            有关{{ key_word }}的话题\r\n            <button @click=\"renderCharts\" class=\"tech-button\">去分析</button>\r\n            <button @click=\"goToDetailPage\" class=\"tech-button\">查看详情</button>\r\n            <div class=\"close\" @click=\"searchResult = false\">\r\n              <i class=\"el-icon-close\"></i>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- 人民网搜索结果 -->\r\n          <div v-if=\"results.renmin\" class=\"renmin_results\">\r\n            <div class=\"result\" v-for=\"(item, index) in filterItems(results.renmin, 'renmin')\" :key=\"index\">\r\n              <!-- <div class=\"result\" v-for=\"(item, index) in results.renmin\" :key=\"index\"> -->\r\n                <div class=\"item-container\">\r\n                  <div class=\"item-title\">\r\n                    <a :href=\"item.url\" target=\"_blank\">{{ item.title }}</a>\r\n                  </div>\r\n                  <div class=\"item-sentiment\" :class=\"getSentimentClass(item.sentiment)\">\r\n                    {{ getSentimentLabel(item.sentiment) }}\r\n                  </div>\r\n                  <div class=\"item-source\">来源: 人民网</div>\r\n                  <div class=\"item-time\">{{ item.displayTime }}</div>\r\n                </div>\r\n              <!-- </div> -->\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- 贴吧搜索结果 -->\r\n          <div v-if=\"results.tieba\" class=\"tieba_results\">\r\n            <div class=\"result\" v-for=\"(item, index) in filterItems(results.tieba, 'tieba')\" :key=\"index\">\r\n              <!-- <div class=\"result\" v-for=\"(item, index) in results.tieba\" :key=\"index\"> -->\r\n                <div class=\"item-container\">\r\n                  <div class=\"item-title\">\r\n                    <a :href=\"item.url\" target=\"_blank\">{{ item.title }}</a>\r\n                  </div>\r\n                  <div class=\"item-sentiment\" :class=\"getSentimentClass(item.sentiment)\">\r\n                    {{ getSentimentLabel(item.sentiment) }}\r\n                  </div>\r\n                  <div class=\"item-source\">来源: 贴吧</div>\r\n                  <div class=\"item-time\">{{ item.time }}</div>\r\n                </div>\r\n              <!-- </div> -->\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 微信搜索结果 -->\r\n          <div v-if=\"results.wechat\" class=\"wechat_results\">\r\n            <div class=\"result\" v-for=\"(item, index) in filterItems(results.wechat, 'wechat')\" :key=\"index\">\r\n              <!-- <div class=\"result\" v-for=\"(item, index) in results.wechat\" :key=\"index\"> -->\r\n                <div class=\"item-container\">\r\n                  <div class=\"item-title\">\r\n                      <a :href=\"`https://weixin.sogou.com${item.url}`\"  target=\"_blank\">{{ item.title }}</a>\r\n                  </div>\r\n                  <div class=\"item-sentiment\" :class=\"getSentimentClass(item.sentiment)\">\r\n                    {{ getSentimentLabel(item.sentiment) }}\r\n                  </div>\r\n                  <div class=\"item-source\">\r\n                      来源: 微信 {{ item.source }}\r\n                  </div>\r\n                  <div class=\"item-time\">{{ item.time }}</div>\r\n                </div>\r\n              <!-- </div> -->\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- 微博搜索结果 -->\r\n          <div v-if=\"results.weibo\" class=\"weibo_results\">\r\n            <div class=\"result\" v-for=\"(item, index) in filterItems(results.weibo, 'weibo')\" :key=\"index\">\r\n              <!-- <div class=\"result\" v-for=\"(item, index) in results.weibo\" :key=\"index\"> -->\r\n                <div class=\"item-container\">\r\n                  <div class=\"item-title\">\r\n                    {{ item.text.slice(0, 20) + \"...\" | snippet }}\r\n                  </div>\r\n                  <div class=\"item-sentiment\" :class=\"getSentimentClass(item.sentiment)\">\r\n                    {{ getSentimentLabel(item.sentiment) }}\r\n                  </div>\r\n                  <div class=\"item-source\">来源: 微博</div>\r\n                  <div class=\"item-time\">{{ item.created_at }}</div>\r\n                </div>\r\n              <!-- </div> -->\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <!-- 分析图表 -->\r\n      <div class=\"analysis-charts\" v-if=\"showAnalysis\">\r\n        <div class=\"close-charts\" @click=\"closeAnalysis\">\r\n          <i class=\"el-icon-circle-close\"></i>\r\n        </div>\r\n        <!-- 信息来源占比图（饼状图） -->\r\n        <div class=\"chart-container\">\r\n          <div ref=\"sourceChart\" style=\"width: 100%; height: 260px;\"></div>\r\n        </div>\r\n\r\n        <!-- 发布时间折线图 -->\r\n        <div class=\"chart-container\">\r\n          <div ref=\"timeLineChart\" style=\"width: 100%; height: 260px;\"></div>\r\n        </div>\r\n\r\n        <!-- 情感分析占比图 -->\r\n        <div class=\"chart-container\">\r\n          <div ref=\"sentimentChart\" style=\"width: 100%; height: 260px;\"></div>\r\n        </div>\r\n\r\n        <!-- 情感分析随时间变化折线图 -->\r\n        <div class=\"chart-container\">\r\n          <div ref=\"sentimentTimeChart\" style=\"width: 100%; height: 260px;\"></div>\r\n        </div>\r\n    </div>\r\n    </div>  \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import SideBorder from \"../components/Side_border\";\r\n  import * as echarts from 'echarts';\r\n  import axios from \"axios\";\r\n\r\n  export default {\r\n    name: \"search\",\r\n    \r\n    data() {\r\n      return {\r\n        key_word: \"\",\r\n        loading: false, // 控制加载状态\r\n        searchResult: true,\r\n        results: {},\r\n        showAnalysis: false, // 用来控制图表的显示\r\n        timeFilters: [\r\n          { label: '一周内', value: 'week' },\r\n          { label: '一个月内', value: 'month' },\r\n          { label: '一年内', value: 'year' }\r\n        ],\r\n        sentimentFilters: [\r\n          { label: '积极', value: 'positive' },\r\n          { label: '中性', value: 'neutral' },\r\n          { label: '消极', value: 'negative' }\r\n        ],\r\n        sourceFilters: [\r\n          { label: '微博', value: 'weibo' },\r\n          { label: '人民网', value: 'renmin' },\r\n          { label: '微信', value: 'wechat' },\r\n          { label: '贴吧', value: 'tieba' }\r\n        ],\r\n        selectedTime: null,\r\n        selectedSentiment: null,\r\n        selectedSources: [],\r\n        //historySearchList: [], // 历史搜索列表\r\n        historySearchTopics: [], // 新的历史搜索主题列表\r\n        currentKeyWord: \"\"\r\n      };\r\n    },\r\n    components: {\r\n      SideBorder,\r\n    },\r\n    // 组件挂载后调用 getHistorySearch 方法\r\n    mounted() {\r\n    this.$nextTick(() => {\r\n        this.getHistorySearch();\r\n    });\r\n    },\r\n    \r\n\r\n    filters: {\r\n      snippet(value) {\r\n        if (value.length > 200) return value.slice(0, 200) + \"...\";\r\n        return value;\r\n      }\r\n    },\r\n    \r\n    methods: {\r\n      goToDetailPage() {\r\n      // 使用 this.$router.push 进行路由跳转并传递话题参数\r\n      this.$router.push({\r\n        path: '/all_detail',\r\n        query: {\r\n          key: this.key_word\r\n        }\r\n      });\r\n    },\r\n    \r\n      // 获取情感标签\r\n      getSentimentLabel(sentiment) {\r\n        if (sentiment > 0.7) return '积极';\r\n        if (sentiment < 0.3) return '消极';\r\n        return '中性';\r\n      },\r\n  \r\n      // 获取情感标签的CSS类\r\n      getSentimentClass(sentiment) {\r\n        if (sentiment > 0.7) return 'positive';\r\n        if (sentiment < 0.3) return 'negative';\r\n        return 'neutral';\r\n      },\r\n  \r\n      async search() {\r\n        this.loading = true; // 开始加载，显示加载动画\r\n        if (!this.key_word) {\r\n          this.$message.error(\"请输入搜索关键词！\");\r\n          return;\r\n        }\r\n  \r\n        // 如果当前关键词和之前的不同，进行搜索\r\n        if (this.key_word !== this.currentKeyWord) {\r\n          this.searchResult = true;\r\n          this.results = {}; // 清空旧结果\r\n          this.currentKeyWord = this.key_word; // 更新当前搜索关键词\r\n          // 添加历史搜索记录\r\n          await this.saveHistorySearch(this.key_word);\r\n          await this.getHistorySearch();\r\n        }\r\n  \r\n        const results = { renmin: [], weibo: [], tieba: [], wechat: [] };\r\n        let cursor = 1; // 从第一页开始\r\n        let hasMoreData = true; // 标记是否还有更多数据\r\n  \r\n        try {\r\n          while (hasMoreData && cursor <= 1) { // 只爬取指定页数\r\n            const response = await this.$axios.get(\r\n              `multi_search?tag=${this.key_word}&cursor=${cursor}`\r\n            );\r\n            const pageData = response.data.data;\r\n            console.log(pageData)\r\n  \r\n            if (!pageData.renmin && !pageData.weibo && !pageData.tieba && !pageData.wechat) {\r\n              this.$message.warning(`第 ${cursor} 页没有更多结果`);\r\n              break;\r\n            }\r\n  \r\n            // 合并数据并添加情感标签\r\n            if (pageData.renmin) {\r\n              pageData.renmin.forEach(item => {\r\n                item.sentiment = item.sentiment || 0; // 获取后端返回的情感得分\r\n              });\r\n              results.renmin.push(...pageData.renmin);\r\n            }\r\n  \r\n            if (pageData.tieba) {\r\n              pageData.tieba.forEach(item => {\r\n                item.sentiment = item.sentiment || 0; // 获取后端返回的情感得分\r\n              });\r\n              results.tieba.push(...pageData.tieba);\r\n            }\r\n\r\n            if (pageData.wechat) {\r\n              pageData.wechat.forEach(item => {\r\n                item.sentiment = item.sentiment || 0; // 获取后端返回的情感得分\r\n              });\r\n              results.wechat.push(...pageData.wechat);\r\n            }\r\n\r\n            if (pageData.weibo?.result) {\r\n              pageData.weibo.result.forEach(item => {\r\n                item.sentiment = item.sentiment || 0; // 获取后端返回的情感得分\r\n              });\r\n              results.weibo.push(...pageData.weibo.result);\r\n            }\r\n  \r\n            // 判断是否继续爬取\r\n            hasMoreData = pageData.renmin?.length > 0 || pageData.weibo?.result?.length > 0 || pageData.tieba?.length > 0 || pageData.wechat?.length > 0;\r\n            cursor++; // 下一页\r\n          }\r\n  \r\n          this.results = results;\r\n          \r\n          if (results.renmin.length === 0 && results.weibo.length === 0 && results.tieba.length === 0 && results.wechat.length === 0) {\r\n            this.$message.error(\"没有找到相关结果\");\r\n          }\r\n         \r\n        } catch (error) {\r\n          console.error(\"搜索失败\", error);\r\n          this.$message.error(\"搜索失败，请稍后再试！\");\r\n        }finally {\r\n        this.loading = false; // 加载完成，隐藏加载动画\r\n      }\r\n      },\r\n       // 获取历史搜索内容\r\n       async getHistorySearch() {\r\n            try {\r\n                const response = await axios.get('/history_topic');\r\n                console.log('response.data.code 的类型：', typeof response.data.code);\r\n                if (response.data.code === 200) {\r\n                  console.log(response.data);\r\n                    // 将获取到的 topic 追加到历史搜索主题列表后面\r\n                    const newTopics = this.historySearchTopics.concat(response.data.data.topic);\r\n                    this.historySearchTopics = [...newTopics];\r\n                    console.log('更新后的 historySearchTopics：', this.historySearchTopics);\r\n                }\r\n            } catch (error) {\r\n                console.error('获取历史搜索内容失败', error);\r\n            }\r\n        },\r\n\r\n    // 保存历史搜索记录到后端\r\n    async saveHistorySearch(tag) {\r\n      try {\r\n        const response = await axios.post('/save_history_search', {\r\n          tag: tag\r\n        });\r\n        if (response.data.message === \"保存成功\") {\r\n          console.log(\"历史搜索记录保存成功\");\r\n        } else {\r\n          console.error(\"历史搜索记录保存失败\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"保存历史搜索记录失败\", error);\r\n      }\r\n    },\r\n\r\n   // 点击展示历史搜索内容\r\n    async searchHistory(tag) {\r\n      this.key_word = tag;\r\n      try {\r\n        const response = await axios.get('/history_search', {\r\n          params: {\r\n            tag: this.key_word\r\n          }\r\n        });\r\n        console.log(response);\r\n        if (response.data.code === 200) {\r\n          // 获取后端返回的数据\r\n          let data = response.data.data;\r\n          // 检查 data 中的 weibo 字段是否为数组，如果不是则将其设为空数组\r\n          if (!Array.isArray(data.weibo)) {\r\n            data.weibo = [];\r\n          }\r\n          this.results = data;\r\n          console.log(this.results);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"获取历史搜索失败\", error);\r\n      }\r\n    },\r\n\r\n    // 删除历史搜索内容\r\n    async deleteHistory(tag) {\r\n      try {\r\n        const response = await axios.get('/history_del', {\r\n          params: {\r\n            tag: tag\r\n          }\r\n        });\r\n        console.log(response);\r\n        if (response.data.code === 200) {\r\n          this.historySearchTopics = this.historySearchTopics.filter(item => item !== tag);\r\n        } else {\r\n          this.$message.error(\"删除历史记录失败\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"删除历史搜索失败\", error);\r\n        this.$message.error(\"删除历史记录失败\");\r\n      }\r\n    },\r\n\r\n      // 筛选切换逻辑\r\n  toggleFilter(type, value) {\r\n    switch(type) {\r\n      case 'time':\r\n        this.selectedTime = this.selectedTime === value ? null : value\r\n        break\r\n      case 'sentiment':\r\n        this.selectedSentiment = this.selectedSentiment === value ? null : value\r\n        break\r\n      case 'source':\r\n        if (this.selectedSources.includes(value)) {\r\n          this.selectedSources = this.selectedSources.filter(s => s !== value)\r\n        } else {\r\n          this.selectedSources = [...this.selectedSources, value]\r\n        }\r\n        break\r\n    }\r\n  },\r\n\r\n  // 过滤逻辑\r\n  filterItems(items, sourceType) {\r\n    const now = new Date()\r\n    return items.filter(item => {\r\n      // 时间过滤\r\n      if (this.selectedTime) {\r\n        const itemDate = new Date(\r\n          sourceType === 'weibo' ? item.created_at : \r\n          sourceType === 'renmin' ? item.displayTime : \r\n          item.time\r\n        )\r\n        const timeDiff = now - itemDate\r\n        \r\n        const ranges = {\r\n          week: 7 * 24 * 60 * 60 * 1000,\r\n          month: 30 * 24 * 60 * 60 * 1000,\r\n          year: 365 * 24 * 60 * 60 * 1000\r\n        }\r\n        if (timeDiff > ranges[this.selectedTime]) return false\r\n      }\r\n\r\n      // 情感过滤\r\n      if (this.selectedSentiment) {\r\n        const sentimentValue = item.sentiment || 0\r\n        const sentimentMap = {\r\n          positive: sentimentValue > 0.7,\r\n          neutral: sentimentValue >= 0.3 && sentimentValue <= 0.7,\r\n          negative: sentimentValue < 0.3\r\n        }\r\n        if (!sentimentMap[this.selectedSentiment]) return false\r\n      }\r\n\r\n      // 来源过滤\r\n      if (this.selectedSources.length > 0 && \r\n          !this.selectedSources.includes(sourceType)) {\r\n        return false\r\n      }\r\n\r\n      return true\r\n    })\r\n  },\r\n\r\n      renderCharts() {\r\n      this.showAnalysis = true; // 显示图表\r\n\r\n      this.$nextTick(() => {\r\n    // 在这里初始化 ECharts 图表\r\n    const renminCount = this.results.renmin? this.results.renmin.length : 0;\r\n    const weiboCount = this.results.weibo? this.results.weibo.length : 0;\r\n    const tiebaCount = this.results.tieba? this.results.tieba.length : 0;\r\n    const wechatCount = this.results.wechat? this.results.wechat.length : 0;\r\n\r\n    const total = renminCount + weiboCount + tiebaCount + wechatCount;\r\n    console.log(this.$refs.sourceChart);\r\n    if (this.$refs.sourceChart) {\r\n      const sourceChart = this.$echarts.init(this.$refs.sourceChart);\r\n      const sourceOption = {\r\n        title: {\r\n          text: '信息来源占比',\r\n          left: 'center',\r\n          top: 'center',\r\n          textStyle: {\r\n            fontSize: 16,\r\n            fontWeight: 'normal',\r\n            color: '#fff'\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n        },\r\n        series: [\r\n          {\r\n            name: '信息来源',\r\n            type: 'pie',\r\n            radius: '50%',\r\n            data: [\r\n              { value: renminCount, name: '人民网' },\r\n              { value: weiboCount, name: '微博' },\r\n              { value: tiebaCount, name: '贴吧' },\r\n              { value: wechatCount, name: '微信' },\r\n            ],\r\n            color: ['#a4e2c6', '#48c0a3', '#549688', '#1685a9'],\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      };\r\n      sourceChart.setOption(sourceOption);\r\n    } else {\r\n      console.error('sourceChart element not found');\r\n    }\r\n\r\n    const timeData = this.calculateTimeData();\r\n    const timeLineChart = this.$echarts.init(this.$refs.timeLineChart);\r\n    const timeLineOption = {\r\n        title: {\r\n            text: '发布时间趋势',\r\n            left: 'center',\r\n            top: 'top',\r\n            textStyle: {\r\n                color: '#fff'\r\n            }\r\n        },\r\n        tooltip: {\r\n            trigger: 'axis'\r\n        },\r\n        legend: {\r\n            data: ['人民网', '微博', '贴吧', '微信'],\r\n            top: '10%',\r\n            textStyle: {\r\n                color: '#fff'\r\n            }\r\n        },\r\n        xAxis: {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: timeData.labels,\r\n            axisLabel: {\r\n                color: '#fff'\r\n            }\r\n        },\r\n        yAxis: {\r\n            type: 'value',\r\n            axisLabel: {\r\n                formatter: '{value} 条',\r\n                color: '#fff'\r\n            },\r\n            axisTick: {\r\n                alignWithLabel: true\r\n            },\r\n            minInterval: 1 // 设置最小刻度间隔为1，确保显示整数\r\n        },\r\n        grid: {\r\n            top: '15%',\r\n            left: '10%',\r\n            right: '8%',\r\n            bottom: '20%'\r\n        },\r\n        series: [\r\n            {\r\n                name: '人民网',\r\n                type: 'line',\r\n                data: timeData.renmin,\r\n                smooth: true,\r\n                color: '#a4e2c6',\r\n                \r\n                areaStyle: {\r\n                    color: {\r\n                        type: 'linear',\r\n                        x: 0,\r\n                        y: 0,\r\n                        x2: 0,\r\n                        y2: 1,\r\n                        colorStops: [\r\n                            {\r\n                                offset: 0,\r\n                                color: 'rgba(164, 226, 198, 0.5)' // 与折线颜色相同，半透明\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: 'rgba(164, 226, 198, 0)' // 完全透明\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                name: '微博',\r\n                type: 'line',\r\n                data: timeData.weibo,\r\n                smooth: true,\r\n                color: '#48c0a3',\r\n                \r\n                areaStyle: {\r\n                    color: {\r\n                        type: 'linear',\r\n                        x: 0,\r\n                        y: 0,\r\n                        x2: 0,\r\n                        y2: 1,\r\n                        colorStops: [\r\n                            {\r\n                                offset: 0,\r\n                                color: 'rgba(72, 192, 163, 0.5)'\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: 'rgba(72, 192, 163, 0)'\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                name: '贴吧',\r\n                type: 'line',\r\n                data: timeData.tieba,\r\n                smooth: true,\r\n                color: '#549688',\r\n                \r\n                areaStyle: {\r\n                    color: {\r\n                        type: 'linear',\r\n                        x: 0,\r\n                        y: 0,\r\n                        x2: 0,\r\n                        y2: 1,\r\n                        colorStops: [\r\n                            {\r\n                                offset: 0,\r\n                                color: 'rgba(84, 150, 136, 0.5)'\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: 'rgba(84, 150, 136, 0)'\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                name: '微信',\r\n                type: 'line',\r\n                data: timeData.wechat,\r\n                smooth: true,\r\n                color: '#1685a9',\r\n                \r\n                areaStyle: {\r\n                    color: {\r\n                        type: 'linear',\r\n                        x: 0,\r\n                        y: 0,\r\n                        x2: 0,\r\n                        y2: 1,\r\n                        colorStops: [\r\n                            {\r\n                                offset: 0,\r\n                                color: 'rgba(22, 133, 169, 0.5)'\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: 'rgba(22, 133, 169, 0)'\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    };\r\n    timeLineChart.setOption(timeLineOption);\r\n\r\n      // 情感分析占比图\r\n    const sentimentData = this.calculateSentimentData();\r\n    const sourceSentimentData = this.calculateSourceSentimentData();\r\n\r\n    const sentimentChart = this.$echarts.init(this.$refs.sentimentChart);\r\n    const sentimentOption = {\r\n        title: {\r\n            text: '情感分析占比',\r\n            left: 'center',\r\n            top: 'center',\r\n            textStyle: {\r\n                fontSize: 16,\r\n                fontWeight: 'normal',\r\n                color: '#fff'\r\n            }\r\n        },\r\n        tooltip: {\r\n            trigger: 'item',\r\n            formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n        },\r\n        series: [\r\n        // 外圈：总的情感占比\r\n        {\r\n            name: '总情感分析',\r\n            type: 'pie',\r\n            radius: ['52%', '65%'],\r\n            data: sentimentData,\r\n            color: ['#56c184', '#32c596', '#42ca7d'],\r\n            emphasis: {\r\n                itemStyle: {\r\n                    shadowBlur: 10,\r\n                    shadowOffsetX: 0,\r\n                    shadowColor: 'rgba(0, 0, 0, 0.5)',\r\n                }\r\n            },\r\n            itemStyle: {\r\n                // 设置边框宽度来实现扇形之间的间隔\r\n                borderWidth: 3, \r\n                // 边框颜色，这里使用白色，可根据背景色调整\r\n                borderColor: '#15bac000', \r\n                // 设置外圈圆环的圆角半径\r\n                borderRadius: 15 \r\n            },\r\n        },\r\n        // 内圈：四个来源的情感占比\r\n        {\r\n            name: '来源情感分析',\r\n            type: 'pie',\r\n            radius: ['42%', '50%'],\r\n            data: sourceSentimentData,\r\n            color: [\r\n                '#a4e2c6', '#48c0a3', '#549688', '#1685a9',\r\n                '#a4e2c6', '#48c0a3', '#549688', '#1685a9',\r\n                '#a4e2c6', '#48c0a3', '#549688', '#1685a9',\r\n            ],\r\n            label: {\r\n                show: false,\r\n                formatter: '{b}',\r\n                position: 'inside',\r\n            },\r\n            emphasis: {\r\n                itemStyle: {\r\n                    shadowBlur: 10,\r\n                    shadowOffsetX: 0,\r\n                    shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                }\r\n            },\r\n        }\r\n    ]\r\n    };\r\n    sentimentChart.setOption(sentimentOption);\r\n        \r\n      // 情感分析随时间变化折线图\r\n      const sentimentTimeData = this.calculateSentimentTimeData();\r\n      const sentimentTimeChart = this.$echarts.init(this.$refs.sentimentTimeChart);\r\n      const sentimentTimeOption = {\r\n          title: {\r\n              text: '情感分析随时间变化',\r\n              left: 'center',\r\n              top: 'top',\r\n              textStyle: {\r\n                  color: '#fff'\r\n              }\r\n          },\r\n          tooltip: {\r\n              trigger: 'axis'\r\n          },\r\n          legend: {\r\n              data: ['积极', '中性', '消极'],\r\n              top: '10%',\r\n              textStyle: {\r\n                  color: '#fff'\r\n              }\r\n          },\r\n          xAxis: {\r\n              type: 'category',\r\n              boundaryGap: false,\r\n              data: sentimentTimeData.labels,\r\n              axisLabel: {\r\n                  color: '#fff'\r\n              }\r\n          },\r\n          yAxis: {\r\n              type: 'value',\r\n              axisLabel: {\r\n                  formatter: '{value} 条',\r\n                  color: '#fff'\r\n              },\r\n              axisTick: {\r\n                  alignWithLabel: true\r\n              },\r\n              minInterval: 1 // 设置最小刻度间隔为1，确保显示整数\r\n          },\r\n          series: [\r\n              {\r\n                  name: '积极',\r\n                  type: 'line',\r\n                  data: sentimentTimeData.positive,\r\n                  smooth: true,\r\n                  color: '#a4e2c6',\r\n                 \r\n                  // 添加阴影色块，使用与折线相同颜色的渐变\r\n                  areaStyle: {\r\n                      color: {\r\n                          type: 'linear',\r\n                          x: 0,\r\n                          y: 0,\r\n                          x2: 0,\r\n                          y2: 1,\r\n                          colorStops: [\r\n                              {\r\n                                  offset: 0,\r\n                                  color: 'rgba(164, 226, 198, 0.5)'\r\n                              },\r\n                              {\r\n                                  offset: 1,\r\n                                  color: 'rgba(164, 226, 198, 0)'\r\n                              }\r\n                          ]\r\n                      }\r\n                  }\r\n              },\r\n              {\r\n                  name: '中性',\r\n                  type: 'line',\r\n                  data: sentimentTimeData.neutral,\r\n                  smooth: true,\r\n                  color: '#48c0a3',\r\n            \r\n                  // 添加阴影色块，使用与折线相同颜色的渐变\r\n                  areaStyle: {\r\n                      color: {\r\n                          type: 'linear',\r\n                          x: 0,\r\n                          y: 0,\r\n                          x2: 0,\r\n                          y2: 1,\r\n                          colorStops: [\r\n                              {\r\n                                  offset: 0,\r\n                                  color: 'rgba(72, 192, 163, 0.5)'\r\n                              },\r\n                              {\r\n                                  offset: 1,\r\n                                  color: 'rgba(72, 192, 163, 0)'\r\n                              }\r\n                          ]\r\n                      }\r\n                  }\r\n              },\r\n              {\r\n                  name: '消极',\r\n                  type: 'line',\r\n                  data: sentimentTimeData.negative,\r\n                  smooth: true,\r\n                  color: '#549688',\r\n                \r\n                  // 添加阴影色块，使用与折线相同颜色的渐变\r\n                  areaStyle: {\r\n                      color: {\r\n                          type: 'linear',\r\n                          x: 0,\r\n                          y: 0,\r\n                          x2: 0,\r\n                          y2: 1,\r\n                          colorStops: [\r\n                              {\r\n                                  offset: 0,\r\n                                  color: 'rgba(84, 150, 136, 0.5)'\r\n                              },\r\n                              {\r\n                                  offset: 1,\r\n                                  color: 'rgba(84, 150, 136, 0)'\r\n                              }\r\n                          ]\r\n                      }\r\n                  }\r\n              }\r\n          ]\r\n      };\r\n      sentimentTimeChart.setOption(sentimentTimeOption);\r\n    });\r\n  },\r\n\r\n    calculateSentimentData() {\r\n      const sentiments = [...this.results.renmin, ...this.results.weibo, ...this.results.tieba, ...this.results.wechat].map(item => item.sentiment);\r\n      const positiveCount = sentiments.filter(sentiment => sentiment > 0.7).length;\r\n      const neutralCount = sentiments.filter(sentiment => sentiment >= 0.3 && sentiment <= 0.7).length;\r\n      const negativeCount = sentiments.filter(sentiment => sentiment < 0.3).length;\r\n\r\n      const totalCount = sentiments.length;\r\n      return [\r\n        { value: positiveCount, name: '积极' },\r\n        { value: neutralCount, name: '中性' },\r\n        { value: negativeCount, name: '消极' }\r\n      ];\r\n    },\r\n\r\n    // 计算四个来源的情感占比\r\n    // 计算四个来源在各情感下的占比\r\n    calculateSourceSentimentData() {\r\n        const sources = ['renmin', 'weibo', 'tieba', 'wechat'];\r\n        const sourceData = [];\r\n\r\n        const allSentiments = {\r\n            positive: [],\r\n            neutral: [],\r\n            negative: []\r\n        };\r\n\r\n        sources.forEach(source => {\r\n            const sentiments = this.results[source].map(item => item.sentiment);\r\n            allSentiments.positive.push(sentiments.filter(sentiment => sentiment > 0.7).length);\r\n            allSentiments.neutral.push(sentiments.filter(sentiment => sentiment >= 0.3 && sentiment <= 0.7).length);\r\n            allSentiments.negative.push(sentiments.filter(sentiment => sentiment < 0.3).length);\r\n        });\r\n\r\n        const addSourceData = (sentimentType, color) => {\r\n            sources.forEach((source, index) => {\r\n                sourceData.push({\r\n                    value: allSentiments[sentimentType][index],\r\n                    name: `${source} - ${sentimentType}`\r\n                });\r\n            });\r\n        };\r\n\r\n        addSourceData('positive', '#a4e2c6');\r\n        addSourceData('neutral', '#48c0a3');\r\n        addSourceData('negative', '#549688');\r\n\r\n        return sourceData;\r\n    },\r\n\r\n    calculateSentimentTimeData() { \r\n    const renminSentimentTimes = this.results.renmin.map(item => ({ time: item.displayTime, sentiment: item.sentiment }));\r\n    console.log(renminSentimentTimes);\r\n    const weiboSentimentTimes = this.results.weibo.map(item => ({ time: item.created_at, sentiment: item.sentiment }));\r\n    const tiebaSentimentTimes = this.results.tieba.map(item => ({ time: item.time, sentiment: item.sentiment }));\r\n    const wechatSentimentTimes = this.results.wechat.map(item => ({ time: item.time, sentiment: item.sentiment }));\r\n\r\n    const allSentiments = [...renminSentimentTimes, ...weiboSentimentTimes, ...tiebaSentimentTimes, ...wechatSentimentTimes];\r\n    \r\n    // 时间格式化为 'YYYY-MM'\r\n    const formatToMonth = (time) => {\r\n        const date = new Date(time);\r\n        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n    };\r\n\r\n    // 格式化所有时间为月份\r\n    const timeLabels = [...new Set(allSentiments.map(item => formatToMonth(item.time)))].sort();\r\n\r\n    const positive = timeLabels.map(label => \r\n        allSentiments.filter(item => formatToMonth(item.time) === label && item.sentiment > 0.7).length\r\n    );\r\n    \r\n    const neutral = timeLabels.map(label => \r\n        allSentiments.filter(item => formatToMonth(item.time) === label && item.sentiment >= 0.3 && item.sentiment <= 0.7).length\r\n    );\r\n    \r\n    const negative = timeLabels.map(label => \r\n        allSentiments.filter(item => formatToMonth(item.time) === label && item.sentiment < 0.3).length\r\n    );\r\n\r\n    return {\r\n        labels: timeLabels,\r\n        positive: positive,\r\n        neutral: neutral,\r\n        negative: negative\r\n    };\r\n    },\r\n\r\n    calculateTimeData() {\r\n    // 将时间转化为月份（'YYYY-MM'）\r\n    const renminTime = this.results.renmin.map(item => item.displayTime);\r\n    console.log(renminTime);\r\n    const weiboTime = this.results.weibo.map(item => item.created_at);\r\n    const tiebaTime = this.results.tieba.map(item => item.time);\r\n    const wechatTime = this.results.wechat.map(item => item.time);\r\n\r\n    // 格式化时间为月份\r\n    const formatToMonth = (time) => {\r\n        const date = new Date(time);\r\n        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n    };\r\n\r\n    // 将所有时间转换为月份\r\n    const timeLabels = [...new Set([...renminTime, ...weiboTime, ...tiebaTime, ...wechatTime].map(formatToMonth))].sort();\r\n\r\n    const renmin = timeLabels.map(label => renminTime.filter(item => formatToMonth(item) === label).length);\r\n    const weibo = timeLabels.map(label => weiboTime.filter(item => formatToMonth(item) === label).length);\r\n    const tieba = timeLabels.map(label => tiebaTime.filter(item => formatToMonth(item) === label).length);\r\n    const wechat = timeLabels.map(label => wechatTime.filter(item => formatToMonth(item) === label).length);\r\n\r\n    return {\r\n        labels: timeLabels,\r\n        renmin: renmin,\r\n        weibo: weibo,\r\n        tieba: tieba,\r\n        wechat: wechat\r\n    };\r\n    },\r\n\r\n    closeAnalysis() {\r\n      this.showAnalysis = false;\r\n    }\r\n  },\r\n  \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.filter-bar {\r\n  height: 5%;\r\n  margin: 15px 0;\r\n  padding: 7px;\r\n  background: #fafafa00;\r\n  border-radius: 4px;\r\n  display: flex; /* 使用 Flexbox 布局 */\r\n  flex-wrap: wrap; /* 允许换行 */\r\n  align-items: center; /* 垂直居中对齐 */\r\n}\r\n\r\n.filter-group {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 10px; /* 调整筛选组之间的间距 */\r\n}\r\n\r\n.filter-label {\r\n  font-weight: 600;\r\n  margin-right: 7px;\r\n  color: #ffffff;\r\n}\r\n\r\nbutton {\r\n  margin: 0 3px;\r\n  padding: 6px 12px;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  background: #ffffffc0;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\nbutton.active {\r\n  background: #4fb17a;\r\n  color: rgb(0, 0, 0);\r\n  border-color: #409eff;\r\n}\r\n\r\nbutton:hover {\r\n  border-color: #c6e2ff;\r\n  background-color: #ecf5ff;\r\n}\r\n\r\n.tech-button {\r\n    \r\n    /* 布局 */\r\n    padding: 12px 20px;\r\n    position: relative;\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    \r\n    /* 文字 */\r\n    font-size: 15px;\r\n    font-weight: 500;\r\n    letter-spacing: 0.5px;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    \r\n    /* 背景与边框 */\r\n    background: linear-gradient(135deg, #15bac0 0%, #2663be 100%);\r\n    border: none;\r\n    border-radius: 8px;\r\n    \r\n    /* 光影效果 */\r\n    box-shadow: \r\n        0 4px 20px rgba(5, 40, 108, 0.3),\r\n        inset 0 2px 4px rgba(255, 255, 255, 0.1);\r\n    \r\n    /* 交互效果 */\r\n    cursor: pointer;\r\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n    overflow: hidden;\r\n}\r\n\r\n/* 悬停状态 */\r\n.tech-button:hover {\r\n    transform: translateY(-1px);\r\n    background: linear-gradient(135deg, #2663be 0%, #15bac0 100%);\r\n    box-shadow: \r\n        0 6px 24px rgba(5, 40, 108, 0.4),\r\n        inset 0 3px 6px rgba(255, 255, 255, 0.15);\r\n}\r\n\r\n/* 点击状态 */\r\n.tech-button:active {\r\n    transform: translateY(1px);\r\n    box-shadow: \r\n        0 2px 12px rgba(5, 40, 108, 0.2),\r\n        inset 0 1px 2px rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n/* 科技感边框高光 (可选) */\r\n.tech-button::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    border-radius: 6px;\r\n    border: 1px solid rgba(255, 255, 255, 0.15);\r\n    pointer-events: none;\r\n}\r\n\r\n/* 动态流光效果 (可选) */\r\n.tech-button::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -50%;\r\n    left: -50%;\r\n    width: 200%;\r\n    height: 200%;\r\n    background: linear-gradient(\r\n        45deg,\r\n        transparent 25%,\r\n        rgba(255, 255, 255, 0.1) 50%,\r\n        transparent 75%\r\n    );\r\n    animation: techFlow 4s infinite linear;\r\n    opacity: 0.3;\r\n}\r\n\r\n@keyframes techFlow {\r\n    0% { transform: translateX(-25%) translateY(-25%); }\r\n    100% { transform: translateX(25%) translateY(25%); }\r\n}\r\n.loading-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.7); /* 半透明黑色背景 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 999; /* 确保在最上层 */\r\n}\r\n\r\n.wavy {\r\n  position: relative;\r\n  -webkit-box-reflect: below -12px linear-gradient(transparent, rgba(0, 0, 0, 0.2));\r\n}\r\n\r\n.wavy span {\r\n  position: relative;\r\n  display: inline-block;\r\n  color: #fff;\r\n  font-size: 50px;\r\n  text-transform: uppercase;\r\n  letter-spacing: 8px;\r\n  animation: wavyAnimate 1s ease-in-out infinite;\r\n  animation-delay: calc(0.1s * var(--i));\r\n}\r\n\r\n@keyframes wavyAnimate {\r\n  0% {\r\n    transform: translateY(0);\r\n  }\r\n  20% {\r\n    transform: translateY(-20px);\r\n  }\r\n  40%,\r\n  100% {\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n/* 去分析按钮样式 */\r\n.analysis-btn {\r\n  padding: 10px 20px; /* 增加左右内边距 */\r\n  background-color: #3498db;\r\n  color: white;\r\n  display: inline-block;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 15px;\r\n  font-size: 16px;\r\n}\r\n\r\n.analysis-btn:hover {\r\n  background-color: #2980b9; /* 鼠标悬浮时的背景色 */\r\n}\r\n/* 分析图表容器样式 */\r\n.analysis-charts {\r\n  left: 0%;\r\n  margin-top: 1%;\r\n  width: 93%;\r\n  height: 75%;\r\n  position: relative; \r\n  background-color: rgba(59, 61, 62, 0.685); /* 背景色稍透明，突出图表 */\r\n  backdrop-filter: blur(10px); /* 添加磨砂玻璃效果 */\r\n  border: 11px outset #17cbd899;\r\n  z-index: 100; /* 确保图表位于搜索结果之上 */\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n}\r\n\r\n/* 每个图表容器 */\r\n.chart-container {\r\n  width: 45%; /* 宽度充满父容器 */\r\n  height: 40%;\r\n  margin-bottom: 10px; /* 每个图表之间的间距 */\r\n}\r\n\r\n/* 设置图表具体的容器 */\r\n.chart-container div {\r\n  width: 100%; /* 宽度占满容器 */\r\n  height: 100%; /* 高度占满容器 */\r\n}\r\n\r\n.close-charts {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  cursor: pointer;\r\n  font-size: 30px;\r\n  color:rgb(24, 245, 204);\r\n}\r\n.close-charts:hover {\r\n  color: rgb(223, 12, 12); /* 改变颜色为红色 */\r\n}\r\n\r\n.main-content {\r\n  margin-left: 150px; /* 留出侧边栏的空间 */\r\n  flex: 1;\r\n  padding: 20px;\r\n  background-color: #fbfbfb00;\r\n}\r\n\r\n.all_view {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100vh; /* 使用 vh 单位确保占满整个视口高度 */\r\n  background: linear-gradient(45deg, #1e5959,  #247b7b, #27aeb0);\r\n  background-size: 400% 400%;\r\n  animation: gradient 8s ease infinite;\r\n}\r\n\r\n@keyframes gradient {\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n}\r\n\r\n/* 搜索区域样式 */\r\n.search-area {\r\n  margin-bottom: 20px;\r\n  position: relative;\r\n}\r\n\r\n/* 历史搜索面板 */\r\n.history-panel {\r\n  width: 400px;\r\n  top: 0px;\r\n  background: rgba(40, 50, 60, 0.612);\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.2);\r\n  backdrop-filter: blur(10px);\r\n  position: absolute;\r\n  right: 140px;\r\n  margin-top: 10px;\r\n  margin-left: 10px;\r\n  /* z-index: 100; */\r\n}\r\n\r\n.history-header {\r\n  padding: 12px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgba(255,255,255,0.1);\r\n  color: #26c6da;\r\n}\r\n\r\n.history-header i {\r\n  cursor: pointer;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.history-header i:hover {\r\n  color: #ff4757;\r\n}\r\n\r\n.history-list {\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n  padding: 8px;\r\n  display: flex; /* 使用 flex 布局 */\r\n  flex-wrap: wrap; /* 允许换行 */\r\n  gap: 8px; /* 元素之间的间距 */\r\n}\r\n\r\n.history-item {\r\n  display: inline-block; /* 改为 inline-block 使元素可以并排显示 */\r\n  padding: 5px 8px;\r\n  border-radius: 4px;\r\n  background: rgba(255,255,255,0.05);\r\n  transition: all 0.3s;\r\n  cursor: pointer;\r\n  white-space: nowrap; /* 防止文本换行 */\r\n}\r\n\r\n.history-item:hover {\r\n  background: rgba(38,198,218,0.15);\r\n  transform: translateY(-2px); /* 稍微上移 */\r\n}\r\n\r\n.history-item span {\r\n  flex: 1;\r\n  color: #f8f9fa;\r\n  font-size: 13px;\r\n}\r\n\r\n.history-item i {\r\n  color: #a4b0be;\r\n  font-size: 12px;\r\n  margin-left: 8px;\r\n  padding: 2px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.history-item i:hover {\r\n  color: #ff4757;\r\n  transform: scale(1.2);\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.input-wrapper {\r\n  display: flex;\r\n  align-items: center; /* 让输入框和按钮水平对齐 */\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.input {\r\n  margin-right: 10px;\r\n  background-color: #ffffff00;\r\n  width: 50%;\r\n  height: 8%;\r\n}\r\n\r\n.key {\r\n  padding: 10px;\r\n  width: 100%;\r\n}\r\n.key::placeholder {\r\n  color: white; /* 设置占位符文本的颜色为白色 */\r\n}\r\n.search_button button {\r\n  padding: 10px 20px;\r\n  background-color: #3498db;\r\n  color: white;\r\n  display: flex;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.searchResult {\r\n  margin-top: 10%;\r\n  margin-right: 0%;\r\n  width: 75%;\r\n  height: 65%;\r\n  overflow-y: auto;\r\n  background-color: #ffffff00;\r\n  background: linear-gradient(to right, #296a7500, #2d66ac00);\r\n  z-index: 99;\r\n  overflow: auto;\r\n  color:white; padding: 1rem;\r\n    box-shadow: 0 0 3rem rgba(100,200,255,.5) inset;\r\n    background: rgba(106, 150, 148, 0.216);\r\n    border-radius: 10px;\r\n}\r\n\r\n.result {\r\n    padding: 2px;\r\n    margin-bottom: 0px;\r\n    /* border: 1px solid #6c6161cf; */\r\n    background-color: #ffffff00;\r\n    height: 40px;\r\n}\r\n\r\n.item-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: row;\r\n}\r\n\r\n.item-title,\r\n.item-source,\r\n.item-time {\r\n    margin-top: 10px;\r\n    margin-left: 20px;\r\n    margin-right: 20px;\r\n    font-size: 16px;\r\n    font-family: Arial, sans-serif;\r\n    color: #fff;\r\n}\r\n\r\n.item-sentiment {\r\n  margin-top: 11px;\r\n  font-size: 12px;\r\n  padding: 2px 8px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.item-sentiment.positive {\r\n  background-color: #268f3f;\r\n  color: #fff;\r\n}\r\n\r\n.item-sentiment.neutral {\r\n  background-color: #3d5162;\r\n  color: #fff;\r\n}\r\n\r\n.item-sentiment.negative {\r\n  background-color: #d15662;\r\n  color: #fff;\r\n}\r\n.item-title {\r\n    flex: 1;\r\n    font-weight: bold;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.item-time {\r\n    margin-left: 10px;\r\n}\r\n\r\n.item-source {\r\n    margin-left: 10px;\r\n}\r\n\r\n.close {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    cursor: pointer;\r\n}\r\na:link {\r\n    color: rgb(253, 248, 249);\r\n    text-decoration: none;\r\n}\r\n\r\na:visited {\r\n    color: rgb(83, 237, 183);\r\n    text-decoration: none;\r\n}\r\n\r\na:hover {\r\n    color: rgb(37, 238, 145);\r\n    text-decoration: none;\r\n}\r\n\r\na:active {\r\n    color: rgb(65, 240, 138);\r\n    text-decoration: none;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n .all_view {\r\n        flex-direction: column;\r\n    }\r\n\r\n .input {\r\n        width: 100%;\r\n    }\r\n\r\n .searchResult{\r\n        width: 100%;\r\n    }\r\n}\r\n@keyframes spin {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>\r\n"]}]}