{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\blog_detail\\location.vue?vue&type=style&index=0&id=9a58ca56&prod&scoped=true&lang=css","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\blog_detail\\location.vue","mtime":1742892893090},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\css-loader\\dist\\cjs.js","mtime":1733210773580},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1733210773701},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\postcss-loader\\src\\index.js","mtime":1733210773504},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubG9jYXRpb24gew0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIHRvcDogMSU7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDY1JTsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjAwOw0KICBjb2xvcjogI2ZmZmY7DQogIGJveC1zaGFkb3c6IDAgNHB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjEpOw0KICAvKiBib3JkZXI6IDJweCBzb2xpZCAjNjY5ZWYzYTU7IOa3seiJsui+ueahhiAqLw0KICBib3JkZXItcmFkaXVzOiAxMHB4Ow0KICBib3gtc2l6aW5nOiBib3JkZXItYm94Ow0KICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoM3B4KTsNCiAgLXdlYmtpdC1iYWNrZHJvcC1maWx0ZXI6IGJsdXIoMTBweCk7DQogIG92ZXJmbG93OiBoaWRkZW47DQp9DQoubG9jYXRpb25fdGl0bGUgew0KICBtYXJnaW4tbGVmdDogMjBweDsNCiAgcGFkZGluZzogNXB4Ow0KICBmb250LXdlaWdodDogNjAwOw0KICBsZXR0ZXItc3BhY2luZzogMXB4Ow0KfQ0KI2xvY2F0aW9uX2dyYXBoIHsNCiAgd2lkdGg6IDQ1MHB4Ow0KICBoZWlnaHQ6IDM0MHB4Ow0KICB0b3A6IDMwcHg7DQogIG1hcmdpbi1sZWZ0OiAxMCU7DQogIG1hcmdpbi1ib3R0b206IDclOw0KfQ0KI21hcENoYXJ0IHsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICB3aWR0aDogMTAwJTsNCiAgaGVpZ2h0OiA4OCU7DQp9DQo="},{"version":3,"sources":["location.vue"],"names":[],"mappings":";AAsMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"location.vue","sourceRoot":"src/components/blog_detail","sourcesContent":["<template>\r\n  <div class=\"location\">\r\n    <div class=\"location_title\">评论地理位置分布</div>\r\n    <!-- <el-button type=\"text\" @click=\"show\" class=\"maxTree\">点击打开地图</el-button> -->\r\n    <div id=\"location_graph\"></div>\r\n    <!-- <el-dialog title=\"地理位置大图\" :visible.sync=\"dialogVisible\" fullscreen=\"true\">\r\n      <div id=\"mapChart\"></div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"dialogVisible = false\">确 定</el-button>\r\n      </span>\r\n    </el-dialog> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      graphData: [],\r\n      dialogVisible: false,\r\n      mapConfig: {\r\n        auditNo: 'GS(2024)0650号',\r\n        source: '国家地理信息公共服务平台'\r\n      },\r\n      // 特殊行政区划映射表（不需要加\"省\"的地区）\r\n      specialRegions: {\r\n        '北京': '北京市',\r\n        '天津': '天津市',\r\n        '上海': '上海市',\r\n        '重庆': '重庆市',\r\n        '内蒙古': '内蒙古自治区',\r\n        '广西': '广西壮族自治区',\r\n        '西藏': '西藏自治区',\r\n        '宁夏': '宁夏回族自治区',\r\n        '新疆': '新疆维吾尔自治区',\r\n        '香港': '香港特别行政区',\r\n        '澳门': '澳门特别行政区',\r\n        '台湾': '台湾省'\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchDataAndDrawMap('location_graph');\r\n  },\r\n  methods: {\r\n    // 规范化地区名称\r\n    normalizeRegionName(name) {\r\n      // 如果已经是完整名称（带省/市/区）则直接返回\r\n      if (name.endsWith('省') || name.endsWith('市') || name.endsWith('自治区') || name.endsWith('特别行政区')) {\r\n        return name;\r\n      }\r\n\r\n      // 检查特殊行政区\r\n      if (this.specialRegions[name]) {\r\n        return this.specialRegions[name];\r\n      }\r\n\r\n      // 普通省份加上\"省\"后缀\r\n      return name + '省';\r\n    },\r\n\r\n    async fetchDataAndDrawMap(containerId) {\r\n      try {\r\n        // 1. 加载 china.geojson 文件\r\n        const geoJsonResponse = await fetch('/geojson/china.geojson');\r\n        if (!geoJsonResponse.ok) throw new Error('地图文件加载失败');\r\n        const chinaGeoJSON = await geoJsonResponse.json();\r\n        this.$echarts.registerMap('china', chinaGeoJSON);\r\n\r\n        // 2. 获取业务数据并规范化地区名称\r\n        let query = this.$route.query;\r\n        const res = await this.$axios.get(`/comment/location?tag_task_id=${query.tag_task_id}&weibo_id=${query.weibo_id}`);\r\n        const locationData = res.data.data.location_data;\r\n\r\n        // 对数据进行聚合（相同地区合并计数）\r\n        const dataMap = {};\r\n        locationData.forEach(item => {\r\n          const normalizedName = this.normalizeRegionName(item.location);\r\n          dataMap[normalizedName] = (dataMap[normalizedName] || 0) + item.count;\r\n        });\r\n\r\n        // 转换为 echarts 需要的格式\r\n        this.graphData = Object.keys(dataMap).map(name => ({\r\n          name,\r\n          value: dataMap[name]\r\n        }));\r\n\r\n        this.drawMap(containerId);\r\n      } catch (error) {\r\n        console.error('初始化失败:', error);\r\n      }\r\n    },\r\n\r\n    drawMap(containerId) {\r\n      const myChart = this.$echarts.init(document.getElementById(containerId));\r\n      const maxCount = Math.max(...this.graphData.map(item => item.value));\r\n\r\n      const option = {\r\n        // title: {\r\n          \r\n        //   left: 'center',\r\n        //   textStyle: {\r\n        //     color: '#ffffff',\r\n        //     fontSize: 18,\r\n        //     fontWeight: 'bold'\r\n        //   }\r\n        // },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{b}: {c} 评论',\r\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n          borderColor: '#40a9ff',\r\n          textStyle: {\r\n            color: '#ffffff',\r\n            fontSize: 12\r\n          }\r\n        },\r\n        visualMap: {\r\n          left: 20,\r\n          bottom: 20,\r\n          min: 0,\r\n          max: maxCount,\r\n          inRange: {\r\n            color: ['#e0f7e0', '#28da7e']\r\n          },\r\n          textStyle: {\r\n            color: '#fff'\r\n          },\r\n          itemWidth: 10,\r\n          itemHeight: 100,\r\n          calculable: true\r\n        },\r\n        graphic: {\r\n          type: 'text',\r\n          left: 50,\r\n          bottom: 0,\r\n          z: 100,\r\n          style: {\r\n            text: `审图号：${this.mapConfig.auditNo} 来源：${this.mapConfig.source}`,\r\n            font: '12px Microsoft YaHei',\r\n            fill: '#fff',\r\n            backgroundColor: 'rgba(0,0,0,0)',\r\n            padding: [6, 10],\r\n            borderRadius: 4\r\n          }\r\n        },\r\n        series: [{\r\n          name: '地理位置分布',\r\n          type: 'map',\r\n          map: 'china',\r\n          roam: true,\r\n          label: {\r\n            show: false, // 不显示省份文字\r\n            color: '#000',\r\n            fontSize: 10\r\n          },\r\n          itemStyle: {\r\n            borderColor: '#40a9ff',\r\n            borderWidth: 1,\r\n            areaColor: '#42ace9c8'\r\n          },\r\n          emphasis: {\r\n            label: {\r\n              color: '#fff',\r\n              fontSize: 12\r\n            },\r\n            itemStyle: {\r\n              areaColor: '#89cd45'\r\n            }\r\n          },\r\n          layoutCenter: ['50%', '50%'],  // 地图居中显示\r\n          layoutSize: '100%',  // 地图适应父组件大小\r\n          data: this.graphData\r\n        }]\r\n      };\r\n\r\n      myChart.setOption(option);\r\n\r\n      const resizeHandler = () => myChart.resize();\r\n      window.addEventListener('resize', resizeHandler);\r\n      this.$once('hook:beforeDestroy', () => {\r\n        window.removeEventListener('resize', resizeHandler);\r\n        myChart.dispose();\r\n      });\r\n    },\r\n\r\n    // 显示地图\r\n    show() {\r\n      this.dialogVisible = true;\r\n      this.$nextTick(() => {\r\n        this.fetchDataAndDrawMap('mapChart');\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.location {\r\n  position: relative;\r\n  top: 1%;\r\n  width: 100%;\r\n  height: 65%;\r\n  background-color: #ffffff00;\r\n  color: #ffff;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  /* border: 2px solid #669ef3a5; 深色边框 */\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n  backdrop-filter: blur(3px);\r\n  -webkit-backdrop-filter: blur(10px);\r\n  overflow: hidden;\r\n}\r\n.location_title {\r\n  margin-left: 20px;\r\n  padding: 5px;\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n}\r\n#location_graph {\r\n  width: 450px;\r\n  height: 340px;\r\n  top: 30px;\r\n  margin-left: 10%;\r\n  margin-bottom: 7%;\r\n}\r\n#mapChart {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 88%;\r\n}\r\n</style>    "]}]}