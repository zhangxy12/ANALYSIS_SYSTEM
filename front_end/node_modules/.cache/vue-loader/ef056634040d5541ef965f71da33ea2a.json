{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\TBAnalyze\\mood.vue?vue&type=style&index=0&id=7ec9a578&scoped=true&lang=css","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\TBAnalyze\\mood.vue","mtime":1740885481216},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\css-loader\\dist\\cjs.js","mtime":1733210773580},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1733210773701},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\postcss-loader\\src\\index.js","mtime":1733210773504},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAvKiDpobXpnaLlrrnlmaggKi8KLmNoYXJ0LWNvbnRhaW5lciB7CiAgd2lkdGg6IDExMCU7CiAgCiAgbWFyZ2luLXRvcDogLTEzMHB4OwogIG1hcmdpbi1sZWZ0OiAtMTJweDsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmOwogIGJhY2tncm91bmQtY29sb3I6ICNmOWY5ZjkwMDsKICBib3JkZXItcmFkaXVzOiA4cHg7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIHBhZGRpbmc6IDEwcHg7IC8qIOS4uuWuueWZqOWinuWKoOWGhei+uei3ne+8jOS7peS+v+abtOWlveWcsOmAguW6lOWtkOWFg+e0oCAqLwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIOehruS/nSBwYWRkaW5nIOS4jeW9seWTjeWuueWZqOWkp+WwjyAqLwogIGNvbG9yOiB3aGl0ZTsgLyog5omA5pyJ5a2X5L2T6aKc6Imy5Li655m96ImyICovCn0KCi8qIOWNleS4quWbvuihqOWPiuagh+mimOeahOWMheijueebkuWtkCAqLwouY2hhcnQtYm94IHsKICAgIAogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDkwJTsKICBib3JkZXI6IDJweCBzb2xpZCAjNGFhYWZhYzM7IC8qIOa3seiJsui+ueahhiAqLwogIGJvcmRlci1yYWRpdXM6IDEwcHg7CiAgYm94LXNoYWRvdzogMCAwIDE1cHggcmdiYSgyMzMsIDIyOSwgMjM4LCAwLjMwNCksIDAgMCAyNXB4IHJnYmEoNjMsIDE1NCwgODcsIDAuNCk7IC8qIOWklumYtOW9sSAqLwogIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0KCi8qIOagh+mimOagt+W8jyAqLwouY2hhcnQtdGl0bGUgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDBweDsKICBsZWZ0OiA1MCU7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpOwogIGZvbnQtc2l6ZTogMTNweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgYmFja2dyb3VuZC1jb2xvcjogIzNlM2UzZTAwOyAKICBwYWRkaW5nOiAwcHg7CiAgY29sb3I6ICNmZmY7IC8qIOeZveiJsuWtl+S9kyAqLwogIHotaW5kZXg6IDE7IC8qIOehruS/neagh+mimOWcqOWbvuihqOWGheWuueS5i+S4iiAqLwp9CgovKiDorr7nva7lm77ooajlrrnlmaggKi8KLmNoYXJ0IHsKICBtYXJnaW4tdG9wOiAyN3B4OwogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMTAwJTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmMDA7CiAgYm9yZGVyLXJhZGl1czogOHB4Owp9CgovKiDmjqfliLblm77ooajlnKjkuI3lkIzlsY/luZXkuIrnmoTpgILphY0gKi8KQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHsKICAuY2hhcnQtY29udGFpbmVyIHsKICAgIHBhZGRpbmc6IDEwcHg7IC8qIOS/neaMgeeItuWuueWZqOWGhei+uei3nSAqLwogIH0KICAKICAuY2hhcnQtYm94IHsKICAgIGhlaWdodDogMzAwcHggIWltcG9ydGFudDsgLyog5bCP5bGP5bmV5pe26K6+572u5Zu65a6a6auY5bqmICovCiAgfQp9CgpAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCkgewogIC5jaGFydC1jb250YWluZXIgewogICAgcGFkZGluZzogMjBweDsgLyog6L6D5aSn5bGP5bmV5pe26YCC5b2T5aKe5Yqg5YaF6L656LedICovCiAgfQoKICAuY2hhcnQtYm94IHsKICAgIGhlaWdodDogNTAlICFpbXBvcnRhbnQ7IC8qIOWkp+Wxj+W5leaXtuS9v+eUqOabtOWkp+eahOmrmOW6puavlOS+iyAqLwogIH0KfQoKICA="},{"version":3,"sources":["mood.vue"],"names":[],"mappings":";AAwQA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"mood.vue","sourceRoot":"src/components/TBAnalyze","sourcesContent":["<template>\r\n    <div class=\"chart-container\" style=\"height: 75%;\">\r\n      <!-- 饼状图 -->\r\n      <div class=\"chart-box\">\r\n        <h3 class=\"chart-title\">情感分布分析</h3>\r\n        <div id=\"mood_pie_chart\" class=\"chart\"></div>\r\n      </div>\r\n  \r\n      <!-- 折线图 -->\r\n      <div class=\"chart-box\">\r\n        <h3 class=\"chart-title\">情感随时间变化趋势</h3>\r\n        <div id=\"mood_line_chart\" class=\"chart\" style=\"height: 190px;\"></div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  \r\n  \r\n  <script>\r\n  export default {\r\n    name: \"MoodAnalysis\",\r\n    data() {\r\n      return {\r\n        moodData: {}, // 存储情感分析数据\r\n        myChartPie: null, // 饼状图实例\r\n        myChartLine: null, // 折线图实例\r\n      };\r\n    },\r\n    methods: {\r\n      // 获取情感分析数据并绘制饼状图和折线图\r\n      getMoodData(tag_task_id) {\r\n        this.$axios.get(`/mood_tb?tag_task_id=${tag_task_id}`).then((res) => {\r\n          const data = res.data.data.data; // 获取情感分析结果\r\n          this.moodData = data;\r\n        console.log(data);\r\n          // 绘制情感分布饼状图\r\n          const sentimentCounts = data.total_sentiment;\r\n          const pieData = [\r\n            { value: sentimentCounts.positive, name: \"积极\" },\r\n            { value: sentimentCounts.neutral, name: \"中性\" },\r\n            { value: sentimentCounts.negative, name: \"消极\" }\r\n          ];\r\n  \r\n          this.drawPieChart(pieData);\r\n  \r\n          // 绘制情感随时间变化折线图\r\n          const sentimentByDate = data.sentiment_by_date;\r\n          const dates = Object.keys(sentimentByDate);\r\n          const positiveCounts = dates.map(date => sentimentByDate[date].positive);\r\n          const neutralCounts = dates.map(date => sentimentByDate[date].neutral);\r\n          const negativeCounts = dates.map(date => sentimentByDate[date].negative);\r\n  \r\n          const lineData = {\r\n            dates,\r\n            positive: positiveCounts,\r\n            neutral: neutralCounts,\r\n            negative: negativeCounts\r\n          };\r\n  \r\n          this.drawLineChart(lineData);\r\n        });\r\n      },\r\n  \r\n      // 绘制饼状图\r\n        drawPieChart(data) {\r\n        if (this.myChartPie) {\r\n            this.myChartPie.dispose();\r\n        }\r\n        this.myChartPie = this.$echarts.init(document.getElementById(\"mood_pie_chart\"));\r\n\r\n        const option = {\r\n            tooltip: {\r\n            trigger: 'item',\r\n            formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n            },\r\n            legend: {\r\n            orient: 'vertical',\r\n            left: 'left',\r\n            data: ['消极', '积极', '中性'],\r\n            textStyle: {\r\n                color: '#fff' // 图例文字为白色\r\n            }\r\n            },\r\n            series: [\r\n            {\r\n                name: '情感分布',\r\n                type: 'pie',\r\n                radius: '50%',\r\n                data: data,\r\n                emphasis: {\r\n                itemStyle: {\r\n                    shadowBlur: 10,\r\n                    shadowOffsetX: 0,\r\n                    shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                }\r\n                },\r\n                label: {\r\n                normal: {\r\n                    show: false,\r\n                    position: 'center',\r\n                    formatter: '{b}\\n{d}%',\r\n                    // textStyle: {\r\n                    // fontSize: 16,\r\n                    // fontWeight: 'bold',\r\n                    // color: '#4a4a4a'\r\n                    // }\r\n                }\r\n                }\r\n            }\r\n            ]\r\n        };\r\n        this.myChartPie.setOption(option);\r\n        },\r\n        \r\n      // 绘制折线图\r\n      drawLineChart(data) {\r\n        if (this.myChartLine) {\r\n          this.myChartLine.dispose();\r\n        }\r\n        this.myChartLine = this.$echarts.init(document.getElementById(\"mood_line_chart\"));\r\n  \r\n        const option = {\r\n          tooltip: {\r\n            trigger: 'axis'\r\n          },\r\n          legend: {\r\n            data: [ '消极','积极', '中性'],\r\n            textStyle: {\r\n                color: '#fff' // 图例文字为白色\r\n            }\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: data.dates,\r\n            axisLabel: {\r\n                color: \"white\", // 设置横坐标的字体颜色为白色\r\n            },\r\n          },\r\n          yAxis: {\r\n            type: 'value',\r\n            axisLabel: {\r\n                color: \"white\", // 设置横坐标的字体颜色为白色\r\n            },\r\n          },\r\n          series: [\r\n            {\r\n              name: '消极',\r\n              type: 'line',\r\n              data: data.negative,\r\n              areaStyle: {}\r\n            },\r\n            {\r\n              name: '积极',\r\n              type: 'line',\r\n              data: data.positive,\r\n              areaStyle: {}\r\n            },\r\n            {\r\n              name: '中性',\r\n              type: 'line',\r\n              data: data.neutral,\r\n              areaStyle: {}\r\n            },\r\n            \r\n          ]\r\n        };\r\n        this.myChartLine.setOption(option);\r\n      }\r\n    },\r\n    mounted() {\r\n    this.$bus.$on(\"send_tag_task_id\", (tag_task_id) => {\r\n      console.log(\"接收到话题任务ID:\", tag_task_id);\r\n      this.getMoodData(tag_task_id); // 获取情感分析数据\r\n    });\r\n    },\r\n    beforeDestroy() {\r\n        this.$bus.$off(\"send_tag_task_id\");\r\n      if (this.myChartPie) {\r\n        this.myChartPie.dispose();\r\n      }\r\n      if (this.myChartLine) {\r\n        this.myChartLine.dispose();\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n /* 页面容器 */\r\n.chart-container {\r\n  width: 110%;\r\n  \r\n  margin-top: -130px;\r\n  margin-left: -12px;\r\n  position: absolute;\r\n  font-family: Arial, sans-serif;\r\n  background-color: #f9f9f900;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px; /* 为容器增加内边距，以便更好地适应子元素 */\r\n  box-sizing: border-box; /* 确保 padding 不影响容器大小 */\r\n  color: white; /* 所有字体颜色为白色 */\r\n}\r\n\r\n/* 单个图表及标题的包裹盒子 */\r\n.chart-box {\r\n    \r\n  position: relative;\r\n  width: 100%;\r\n  height: 90%;\r\n  border: 2px solid #4aaafac3; /* 深色边框 */\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 15px rgba(233, 229, 238, 0.304), 0 0 25px rgba(63, 154, 87, 0.4); /* 外阴影 */\r\n  margin-bottom: 10px;\r\n}\r\n\r\n/* 标题样式 */\r\n.chart-title {\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  font-size: 13px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  background-color: #3e3e3e00; \r\n  padding: 0px;\r\n  color: #fff; /* 白色字体 */\r\n  z-index: 1; /* 确保标题在图表内容之上 */\r\n}\r\n\r\n/* 设置图表容器 */\r\n.chart {\r\n  margin-top: 27px;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #ffffff00;\r\n  border-radius: 8px;\r\n}\r\n\r\n/* 控制图表在不同屏幕上的适配 */\r\n@media screen and (max-width: 768px) {\r\n  .chart-container {\r\n    padding: 10px; /* 保持父容器内边距 */\r\n  }\r\n  \r\n  .chart-box {\r\n    height: 300px !important; /* 小屏幕时设置固定高度 */\r\n  }\r\n}\r\n\r\n@media screen and (min-width: 769px) {\r\n  .chart-container {\r\n    padding: 20px; /* 较大屏幕时适当增加内边距 */\r\n  }\r\n\r\n  .chart-box {\r\n    height: 50% !important; /* 大屏幕时使用更大的高度比例 */\r\n  }\r\n}\r\n\r\n  </style>"]}]}