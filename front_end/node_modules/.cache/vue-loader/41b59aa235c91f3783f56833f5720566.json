{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\pages\\all_view_analysis.vue?vue&type=style&index=0&id=1f75ef44&scoped=true&lang=css","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\pages\\all_view_analysis.vue","mtime":1736755273495},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\css-loader\\dist\\cjs.js","mtime":1733210773580},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1733210773701},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\postcss-loader\\src\\index.js","mtime":1733210773504},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgLmFsbF92aWV3X2FuYWx5c2lzIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogMTAwJTsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmYTA4MDg7CiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2JhY2tncm91bmQvMC5wbmcnKTsKICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7CiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7Cn0KIAogIA=="},{"version":3,"sources":["all_view_analysis.vue"],"names":[],"mappings":";AAqMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all_view_analysis.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div class=\"all_view_analysis\">\r\n        <div class=\"side\">\r\n            <SideBorder />\r\n        </div>\r\n      <!-- 信息来源占比图（饼状图） -->\r\n      <div class=\"chart-container\">\r\n        <div ref=\"sourceChart\" style=\"height: 300px;\"></div>\r\n      </div>\r\n  \r\n      <!-- 发布时间折线图 -->\r\n      <div class=\"chart-container\">\r\n        <div ref=\"timeLineChart\" style=\"height: 300px;\"></div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import echarts from 'echarts';\r\n  import SideBorder from \"../components/Side_border\";\r\n  export default {\r\n    name: \"all_view_analysis\",\r\n    components: {\r\n        SideBorder\r\n  },\r\n    props: {\r\n      results: {\r\n        type: Object,\r\n        required: true\r\n      }\r\n    },\r\n    watch: {\r\n  results(newValue) {\r\n    this.$nextTick(() => {\r\n      this.renderCharts(); // 确保在 DOM 更新后执行渲染\r\n    });\r\n  }\r\n},\r\n    methods: {\r\n      renderCharts() {\r\n        const renminCount = this.results.renmin ? this.results.renmin.length : 0;\r\n        const weiboCount = this.results.weibo ? this.results.weibo.length : 0;\r\n        const tiebaCount = this.results.tieba ? this.results.tieba.length : 0;\r\n        const total = renminCount + weiboCount + tiebaCount;\r\n  \r\n        const sourceChart = this.$echarts.init(this.$refs.sourceChart);\r\n        const sourceOption = {\r\n          title: {\r\n            text: '信息来源占比',\r\n            left: 'center',\r\n            top: 'center',\r\n            textStyle: {\r\n              fontSize: 16,\r\n              fontWeight: 'normal',\r\n              color: '#fff' \r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'item',\r\n            formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n          },\r\n          series: [\r\n            {\r\n              name: '信息来源',\r\n              type: 'pie',\r\n              radius: '50%',\r\n              data: [\r\n                { value: renminCount, name: '人民网' },\r\n                { value: weiboCount, name: '微博' },\r\n                { value: tiebaCount, name: '贴吧' }\r\n              ],\r\n              color: ['#36a2eb', '#ff6384', '#ffcc00'], \r\n              emphasis: {\r\n                itemStyle: {\r\n                  shadowBlur: 10,\r\n                  shadowOffsetX: 0,\r\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        };\r\n        sourceChart.setOption(sourceOption);\r\n  \r\n        const timeData = this.calculateTimeData();\r\n        const timeLineChart = this.$echarts.init(this.$refs.timeLineChart);\r\n        const timeLineOption = {\r\n          title: {\r\n            text: '发布时间趋势',\r\n            left: 'center',\r\n            top: 'top',\r\n            textStyle: {\r\n              color: '#fff' \r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis'\r\n          },\r\n          legend: {\r\n            data: ['人民网', '微博', '贴吧'], \r\n            top: '10%',\r\n            textStyle: {\r\n              color: '#fff' \r\n            }\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: timeData.labels,\r\n            axisLabel: {\r\n              color: '#fff'\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'value',\r\n            axisLabel: {\r\n              formatter: '{value} 条',\r\n              color: '#fff'\r\n            }\r\n          },\r\n          grid: {\r\n            top: '15%',\r\n            left: '10%',\r\n            right: '8%',\r\n            bottom: '20%'\r\n          },\r\n          series: [\r\n            {\r\n              name: '人民网',\r\n              type: 'line',\r\n              data: timeData.renmin,\r\n              smooth: true,\r\n              color: '#36a2eb'\r\n            },\r\n            {\r\n              name: '微博',\r\n              type: 'line',\r\n              data: timeData.weibo,\r\n              smooth: true,\r\n              color: '#ff6384'\r\n            },\r\n            {\r\n              name: '贴吧',\r\n              type: 'line',\r\n              data: timeData.tieba,\r\n              smooth: true,\r\n              color: '#ffcc00' \r\n            }\r\n          ]\r\n        };\r\n        timeLineChart.setOption(timeLineOption);\r\n      },\r\n  \r\n      calculateTimeData() {\r\n        const renminTimes = this.results.renmin ? this.results.renmin.map(item => item.displayTime) : [];\r\n        const weiboTimes = this.results.weibo ? this.results.weibo.map(item => item.created_at) : [];\r\n        const tiebaTimes = this.results.tieba ? this.results.tieba.map(item => item.time) : [];\r\n  \r\n        const formatToMonth = time => {\r\n          const date = new Date(time);\r\n          return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n        };\r\n  \r\n        const renminMonths = renminTimes.map(formatToMonth);\r\n        const weiboMonths = weiboTimes.map(formatToMonth);\r\n        const tiebaMonths = tiebaTimes.map(formatToMonth);\r\n  \r\n        const timeLabels = [...new Set([...renminMonths, ...weiboMonths, ...tiebaMonths])].sort();\r\n  \r\n        const renminData = timeLabels.map(label => renminMonths.filter(month => month === label).length);\r\n        const weiboData = timeLabels.map(label => weiboMonths.filter(month => month === label).length);\r\n        const tiebaData = timeLabels.map(label => tiebaMonths.filter(month => month === label).length);\r\n  \r\n        return {\r\n          labels: timeLabels,\r\n          renmin: renminData,\r\n          weibo: weiboData,\r\n          tieba: tiebaData\r\n        };\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .all_view_analysis {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #fa0808;\r\n    background-image: url('../background/0.png');\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n \r\n  </style>\r\n  "]}]}