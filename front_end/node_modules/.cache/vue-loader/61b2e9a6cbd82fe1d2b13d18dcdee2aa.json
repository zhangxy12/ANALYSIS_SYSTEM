{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\mainscreen\\source.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\mainscreen\\source.vue","mtime":1741751255657},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":1733210776030},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIGltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7DQogIGltcG9ydCAqIGFzIGVjaGFydHMgZnJvbSAnZWNoYXJ0cyc7DQogIA0KICBleHBvcnQgZGVmYXVsdCB7DQogICAgZGF0YSgpIHsNCiAgICAgIHJldHVybiB7DQogICAgICAgIHNvdXJjZURhdGE6IHt9IC8vIOWtmOWCqOS7juWQjuerr+iOt+WPlueahOaVsOaNrg0KICAgICAgfTsNCiAgICB9LA0KICAgIG1vdW50ZWQoKSB7DQogICAgICB0aGlzLmZldGNoRGF0YSgpOw0KICAgIH0sDQogICAgbWV0aG9kczogew0KICAgICAgYXN5bmMgZmV0Y2hEYXRhKCkgew0KICAgICAgICB0cnkgew0KICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KCcvbWFpbi9hbGxfYXBwcycpOw0KICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsNCiAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5jb2RlID09PSAwKSB7DQogICAgICAgICAgICB0aGlzLnNvdXJjZURhdGEgPSByZXNwb25zZS5kYXRhLmRhdGE7DQogICAgICAgICAgICB0aGlzLmluaXRDaGFydCgpOw0KICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICBjb25zb2xlLmVycm9yKCfor7fmsYLlpLHotKU6JywgcmVzcG9uc2UuZGF0YS5tZXNzYWdlKTsNCiAgICAgICAgICB9DQogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgY29uc29sZS5lcnJvcign5Y+R55Sf6ZSZ6K+vOicsIGVycm9yKTsNCiAgICAgICAgfQ0KICAgICAgfSwNCiAgICAgIGluaXRDaGFydCgpIHsNCiAgICAgICAgY29uc3QgY2hhcnQgPSBlY2hhcnRzLmluaXQodGhpcy4kcmVmcy5iYXJDaGFydCk7DQogIA0KICAgICAgICAvLyDlpITnkIbmlbDmja4NCiAgICAgICAgY29uc3QgY2F0ZWdvcmllcyA9IE9iamVjdC5rZXlzKHRoaXMuc291cmNlRGF0YSk7DQogICAgICAgIGNvbnN0IHZhbHVlcyA9IE9iamVjdC52YWx1ZXModGhpcy5zb3VyY2VEYXRhKTsNCiAgDQogICAgICAgIGNvbnN0IG9wdGlvbiA9IHsNCiAgICAgICAgICB0aXRsZTogew0KICAgICAgICAgICAgdGV4dDogJ+WkmuW5s+WPsOadpea6kOe7n+iuoScsDQogICAgICAgICAgICBsZWZ0OiAnY2VudGVyJywNCiAgICAgICAgICAgIHRleHRTdHlsZTogew0KICAgICAgICAgICAgICBjb2xvcjogJyNmZmYnLA0KICAgICAgICAgICAgICBmb250U2l6ZTogMTYsDQogICAgICAgICAgICAgIGZvbnRXZWlnaHQ6ICdib2xkJw0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0sDQogICAgICAgICAgdG9vbHRpcDogew0KICAgICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLA0KICAgICAgICAgICAgYXhpc1BvaW50ZXI6IHsNCiAgICAgICAgICAgICAgdHlwZTogJ3NoYWRvdycNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9LA0KICAgICAgICAgIGdyaWQ6IHsNCiAgICAgICAgICAgIGxlZnQ6ICczJScsDQogICAgICAgICAgICByaWdodDogJzQlJywNCiAgICAgICAgICAgIGJvdHRvbTogJzMlJywNCiAgICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQ0KICAgICAgICAgIH0sDQogICAgICAgICAgeEF4aXM6IHsNCiAgICAgICAgICAgIHR5cGU6ICd2YWx1ZScsDQogICAgICAgICAgICBheGlzTGFiZWw6IHsNCiAgICAgICAgICAgICAgY29sb3I6ICcjZmZmJw0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGF4aXNMaW5lOiB7DQogICAgICAgICAgICAgIGxpbmVTdHlsZTogew0KICAgICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicNCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHNwbGl0TGluZTogew0KICAgICAgICAgICAgICBsaW5lU3R5bGU6IHsNCiAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKScNCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0sDQogICAgICAgICAgeUF4aXM6IHsNCiAgICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsDQogICAgICAgICAgICBkYXRhOiBjYXRlZ29yaWVzLA0KICAgICAgICAgICAgYXhpc0xhYmVsOiB7DQogICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBheGlzTGluZTogew0KICAgICAgICAgICAgICBsaW5lU3R5bGU6IHsNCiAgICAgICAgICAgICAgICBjb2xvcjogJyNmZmYnDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9LA0KICAgICAgICAgIHNlcmllczogWw0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICBuYW1lOiAn5p2l5rqQ5pWw6YePJywNCiAgICAgICAgICAgICAgdHlwZTogJ2JhcicsDQogICAgICAgICAgICAgIGRhdGE6IHZhbHVlcywNCiAgICAgICAgICAgICAgaXRlbVN0eWxlOiB7DQogICAgICAgICAgICAgICAgY29sb3I6IHsNCiAgICAgICAgICAgICAgICAgIHR5cGU6ICdsaW5lYXInLA0KICAgICAgICAgICAgICAgICAgeDogMCwNCiAgICAgICAgICAgICAgICAgIHk6IDAsDQogICAgICAgICAgICAgICAgICB4MjogMSwNCiAgICAgICAgICAgICAgICAgIHkyOiAwLA0KICAgICAgICAgICAgICAgICAgY29sb3JTdG9wczogWw0KICAgICAgICAgICAgICAgICAgICB7IG9mZnNldDogMCwgY29sb3I6ICcjMDBjNmZmJyB9LCAvLyDmuJDlj5joibLotbflp4sNCiAgICAgICAgICAgICAgICAgICAgeyBvZmZzZXQ6IDEsIGNvbG9yOiAnIzAwNzJmZicgfSAvLyDmuJDlj5joibLnu5PmnZ8NCiAgICAgICAgICAgICAgICAgIF0NCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIHNoYWRvd0JsdXI6IDEwLCAvLyDlj5HlhYnmlYjmnpwNCiAgICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogJ3JnYmEoMCwgMTk4LCAyNTUsIDAuNSknIC8vIOWPkeWFieminOiJsg0KICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICBsYWJlbDogew0KICAgICAgICAgICAgICAgIHNob3c6IHRydWUsDQogICAgICAgICAgICAgICAgcG9zaXRpb246ICdyaWdodCcsDQogICAgICAgICAgICAgICAgY29sb3I6ICcjZmZmJw0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgXQ0KICAgICAgICB9Ow0KICANCiAgICAgICAgY2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7DQogICAgICB9DQogICAgfQ0KICB9Ow0KICA="},{"version":3,"sources":["source.vue"],"names":[],"mappingsfile":"source.vue","sourceRoot":"src/components/mainscreen","sourcesContent":["<template>\r\n    <div class=\"bar-chart-container\">\r\n      <div ref=\"barChart\" style=\"width: 100%; height: 300px;\"></div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  import * as echarts from 'echarts';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        sourceData: {} // 存储从后端获取的数据\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchData();\r\n    },\r\n    methods: {\r\n      async fetchData() {\r\n        try {\r\n          const response = await axios.get('/main/all_apps');\r\n          console.log(response);\r\n          if (response.data.code === 0) {\r\n            this.sourceData = response.data.data;\r\n            this.initChart();\r\n          } else {\r\n            console.error('请求失败:', response.data.message);\r\n          }\r\n        } catch (error) {\r\n          console.error('发生错误:', error);\r\n        }\r\n      },\r\n      initChart() {\r\n        const chart = echarts.init(this.$refs.barChart);\r\n  \r\n        // 处理数据\r\n        const categories = Object.keys(this.sourceData);\r\n        const values = Object.values(this.sourceData);\r\n  \r\n        const option = {\r\n          title: {\r\n            text: '多平台来源统计',\r\n            left: 'center',\r\n            textStyle: {\r\n              color: '#fff',\r\n              fontSize: 16,\r\n              fontWeight: 'bold'\r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'value',\r\n            axisLabel: {\r\n              color: '#fff'\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#fff'\r\n              }\r\n            },\r\n            splitLine: {\r\n              lineStyle: {\r\n                color: 'rgba(255, 255, 255, 0.2)'\r\n              }\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'category',\r\n            data: categories,\r\n            axisLabel: {\r\n              color: '#fff'\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#fff'\r\n              }\r\n            }\r\n          },\r\n          series: [\r\n            {\r\n              name: '来源数量',\r\n              type: 'bar',\r\n              data: values,\r\n              itemStyle: {\r\n                color: {\r\n                  type: 'linear',\r\n                  x: 0,\r\n                  y: 0,\r\n                  x2: 1,\r\n                  y2: 0,\r\n                  colorStops: [\r\n                    { offset: 0, color: '#00c6ff' }, // 渐变色起始\r\n                    { offset: 1, color: '#0072ff' } // 渐变色结束\r\n                  ]\r\n                },\r\n                shadowBlur: 10, // 发光效果\r\n                shadowColor: 'rgba(0, 198, 255, 0.5)' // 发光颜色\r\n              },\r\n              label: {\r\n                show: true,\r\n                position: 'right',\r\n                color: '#fff'\r\n              }\r\n            }\r\n          ]\r\n        };\r\n  \r\n        chart.setOption(option);\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .bar-chart-container {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #03040900; /* 深色背景 */\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n  }\r\n  </style>"]}]}