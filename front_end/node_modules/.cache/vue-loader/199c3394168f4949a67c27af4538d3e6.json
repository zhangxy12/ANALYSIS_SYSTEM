{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\mainscreen\\source.vue?vue&type=style&index=0&id=0fc77ba5&scoped=true&lang=css","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\mainscreen\\source.vue","mtime":1741751255657},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\css-loader\\dist\\cjs.js","mtime":1733210773580},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1733210773701},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\postcss-loader\\src\\index.js","mtime":1733210773504},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5iYXItY2hhcnQtY29udGFpbmVyIHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgYmFja2dyb3VuZC1jb2xvcjogIzAzMDQwOTAwOyAvKiDmt7HoibLog4zmma8gKi8KICBwYWRkaW5nOiAyMHB4OwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7Cn0K"},{"version":3,"sources":["source.vue"],"names":[],"mappings":";AAuIA;AACA;AACA;AACA;AACA;AACA;AACA","file":"source.vue","sourceRoot":"src/components/mainscreen","sourcesContent":["<template>\r\n    <div class=\"bar-chart-container\">\r\n      <div ref=\"barChart\" style=\"width: 100%; height: 300px;\"></div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  import * as echarts from 'echarts';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        sourceData: {} // 存储从后端获取的数据\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchData();\r\n    },\r\n    methods: {\r\n      async fetchData() {\r\n        try {\r\n          const response = await axios.get('/main/all_apps');\r\n          console.log(response);\r\n          if (response.data.code === 0) {\r\n            this.sourceData = response.data.data;\r\n            this.initChart();\r\n          } else {\r\n            console.error('请求失败:', response.data.message);\r\n          }\r\n        } catch (error) {\r\n          console.error('发生错误:', error);\r\n        }\r\n      },\r\n      initChart() {\r\n        const chart = echarts.init(this.$refs.barChart);\r\n  \r\n        // 处理数据\r\n        const categories = Object.keys(this.sourceData);\r\n        const values = Object.values(this.sourceData);\r\n  \r\n        const option = {\r\n          title: {\r\n            text: '多平台来源统计',\r\n            left: 'center',\r\n            textStyle: {\r\n              color: '#fff',\r\n              fontSize: 16,\r\n              fontWeight: 'bold'\r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'value',\r\n            axisLabel: {\r\n              color: '#fff'\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#fff'\r\n              }\r\n            },\r\n            splitLine: {\r\n              lineStyle: {\r\n                color: 'rgba(255, 255, 255, 0.2)'\r\n              }\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'category',\r\n            data: categories,\r\n            axisLabel: {\r\n              color: '#fff'\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#fff'\r\n              }\r\n            }\r\n          },\r\n          series: [\r\n            {\r\n              name: '来源数量',\r\n              type: 'bar',\r\n              data: values,\r\n              itemStyle: {\r\n                color: {\r\n                  type: 'linear',\r\n                  x: 0,\r\n                  y: 0,\r\n                  x2: 1,\r\n                  y2: 0,\r\n                  colorStops: [\r\n                    { offset: 0, color: '#00c6ff' }, // 渐变色起始\r\n                    { offset: 1, color: '#0072ff' } // 渐变色结束\r\n                  ]\r\n                },\r\n                shadowBlur: 10, // 发光效果\r\n                shadowColor: 'rgba(0, 198, 255, 0.5)' // 发光颜色\r\n              },\r\n              label: {\r\n                show: true,\r\n                position: 'right',\r\n                color: '#fff'\r\n              }\r\n            }\r\n          ]\r\n        };\r\n  \r\n        chart.setOption(option);\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .bar-chart-container {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #03040900; /* 深色背景 */\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n  }\r\n  </style>"]}]}