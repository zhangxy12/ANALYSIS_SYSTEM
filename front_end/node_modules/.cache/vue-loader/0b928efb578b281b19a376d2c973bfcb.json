{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\pages\\all_view.vue?vue&type=style&index=0&id=dcd2bcf2&scoped=true&lang=css","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\pages\\all_view.vue","mtime":1736781346775},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\css-loader\\dist\\cjs.js","mtime":1733210773580},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1733210773701},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\postcss-loader\\src\\index.js","mtime":1733210773504},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubG9hZGluZy1zcGlubmVyIHsNCiAgYm9yZGVyOiAxMHB4IHNvbGlkICNmM2YzZjM7DQogIGJvcmRlci10b3A6IDEwcHggc29saWQgIzM0OThkYjsNCiAgYm9yZGVyLXJhZGl1czogNTAlOw0KICB3aWR0aDogNTBweDsNCiAgaGVpZ2h0OiA1MHB4Ow0KICBhbmltYXRpb246IHNwaW4gMXMgbGluZWFyIGluZmluaXRlOw0KICBwb3NpdGlvbjogYWJzb2x1dGU7ICAvKiDkvb/nlKjnu53lr7nlrprkvY0gKi8NCiAgdG9wOiA1MCU7ICAvKiDlnoLnm7TlsYXkuK0gKi8NCiAgbGVmdDogNTAlOyAgLyog5rC05bmz5bGF5LitICovDQogIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOyAvKiDnsr7noa7lsYXkuK0gKi8NCn0NCg0KLyog5Y675YiG5p6Q5oyJ6ZKu5qC35byPICovDQouYW5hbHlzaXMtYnRuIHsNCiAgcGFkZGluZzogMTBweCAyMHB4OyAvKiDlop7liqDlt6blj7PlhoXovrnot50gKi8NCiAgYmFja2dyb3VuZC1jb2xvcjogIzM0OThkYjsNCiAgY29sb3I6IHdoaXRlOw0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIGJvcmRlcjogbm9uZTsNCiAgY3Vyc29yOiBwb2ludGVyOw0KICBib3JkZXItcmFkaXVzOiAxNXB4Ow0KICBmb250LXNpemU6IDE2cHg7DQp9DQoNCi5hbmFseXNpcy1idG46aG92ZXIgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjk4MGI5OyAvKiDpvKDmoIfmgqzmta7ml7bnmoTog4zmma/oibIgKi8NCn0NCi8qIOWIhuaekOWbvuihqOWuueWZqOagt+W8jyAqLw0KLmFuYWx5c2lzLWNoYXJ0cyB7DQogIG1hcmdpbi10b3A6IDElOw0KICB3aWR0aDogMTAwJTsNCiAgaGVpZ2h0OiA5MSU7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsgDQogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjksIDQ1LCA1NSwgMC42MjIpOyAvKiDog4zmma/oibLnqI3pgI/mmI7vvIznqoHlh7rlm77ooaggKi8NCiAgei1pbmRleDogMTAwOyAvKiDnoa7kv53lm77ooajkvY3kuo7mkJzntKLnu5PmnpzkuYvkuIogKi8NCiAgZGlzcGxheTogZmxleDsNCiAgZmxleC13cmFwOiB3cmFwOw0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTsNCn0NCg0KLyog5q+P5Liq5Zu+6KGo5a655ZmoICovDQouY2hhcnQtY29udGFpbmVyIHsNCiAgd2lkdGg6IDQ4JTsgLyog5a695bqm5YWF5ruh54i25a655ZmoICovDQogIGhlaWdodDogNDglOw0KICBtYXJnaW4tYm90dG9tOiAxMHB4OyAvKiDmr4/kuKrlm77ooajkuYvpl7TnmoTpl7Tot50gKi8NCn0NCg0KLyog6K6+572u5Zu+6KGo5YW35L2T55qE5a655ZmoICovDQouY2hhcnQtY29udGFpbmVyIGRpdiB7DQogIHdpZHRoOiAxMDAlOyAvKiDlrr3luqbljaDmu6HlrrnlmaggKi8NCiAgaGVpZ2h0OiAxMDAlOyAvKiDpq5jluqbljaDmu6HlrrnlmaggKi8NCn0NCg0KLmNsb3NlLWNoYXJ0cyB7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgdG9wOiAxMHB4Ow0KICByaWdodDogMTBweDsNCiAgY3Vyc29yOiBwb2ludGVyOw0KICBmb250LXNpemU6IDIwcHg7DQp9DQouY2xvc2UtY2hhcnRzOmhvdmVyIHsNCiAgY29sb3I6IHJlZDsgLyog5pS55Y+Y6aKc6Imy5Li657qi6ImyICovDQp9DQoNCi5tYWluLWNvbnRlbnQgew0KICBtYXJnaW4tbGVmdDogMTUwcHg7IC8qIOeVmeWHuuS+p+i+ueagj+eahOepuumXtCAqLw0KICBmbGV4OiAxOw0KICBwYWRkaW5nOiAyMHB4Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmJmYmZiMDA7DQp9DQoNCi5hbGxfdmlldyB7DQogIGRpc3BsYXk6IGZsZXg7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDEwMCU7DQogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmYwMDsNCiAgLyogYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9iYWNrZ3JvdW5kLzAucG5nJyk7ICovDQogIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzA4NjI2NCwgIzIyOWZlMmQ2KTsNCiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsNCiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyOw0KfQ0KDQouaW5wdXQtd3JhcHBlciB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7IC8qIOiuqei+k+WFpeahhuWSjOaMiemSruawtOW5s+Wvuem9kCAqLw0KICBtYXJnaW4tYm90dG9tOiAxMHB4Ow0KfQ0KDQouaW5wdXQgew0KICBtYXJnaW4tcmlnaHQ6IDEwcHg7DQogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmYwMDsNCiAgd2lkdGg6IDUwJTsNCiAgaGVpZ2h0OiA4JTsNCn0NCg0KLmtleSB7DQogIHBhZGRpbmc6IDEwcHg7DQogIHdpZHRoOiAxMDAlOw0KfQ0KDQouc2VhcmNoX2J1dHRvbiBidXR0b24gew0KICBwYWRkaW5nOiAxMHB4IDIwcHg7DQogIGJhY2tncm91bmQtY29sb3I6ICMzNDk4ZGI7DQogIGNvbG9yOiB3aGl0ZTsNCiAgZGlzcGxheTogZmxleDsNCiAgYm9yZGVyOiBub25lOw0KICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5zZWFyY2hSZXN1bHQgew0KICBtYXJnaW4tdG9wOiAxJTsNCiAgbWFyZ2luLXJpZ2h0OiAwJTsNCiAgd2lkdGg6IDgwJTsNCiAgaGVpZ2h0OiA4NCU7DQogIG92ZXJmbG93LXk6IGF1dG87DQogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmYwMDsNCiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjMjk2YTc1MDAsICMyZDY2YWMwMCk7DQogIHotaW5kZXg6IDk5Ow0KICBvdmVyZmxvdzogYXV0bzsNCiAgYm9yZGVyLXJpZ2h0OiAwcHggc29saWQgI2NjY2NjYzAwOw0KICBib3JkZXItbGVmdDogMHB4IHNvbGlkICNjY2NjY2MwMDsNCiAgYm9yZGVyOiAwcHggc29saWQgI2ZlZmVmZjAwOw0KICBib3JkZXItcmFkaXVzOiAxMHB4Ow0KICBjb2xvcjogI2ZmZmZmZjsNCn0NCg0KLnJlc3VsdCB7DQogICAgcGFkZGluZzogM3B4Ow0KICAgIG1hcmdpbi1ib3R0b206IDBweDsNCiAgICAvKiBib3JkZXI6IDFweCBzb2xpZCAjNmM2MTYxY2Y7ICovDQogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjAwOw0KICAgIGhlaWdodDogNTBweDsNCn0NCg0KLml0ZW0tY29udGFpbmVyIHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KfQ0KDQouaXRlbS10aXRsZSwNCi5pdGVtLXNvdXJjZSwNCi5pdGVtLXRpbWUgew0KICAgIG1hcmdpbi10b3A6IDEwcHg7DQogICAgbWFyZ2luLWxlZnQ6IDIwcHg7DQogICAgbWFyZ2luLXJpZ2h0OiAyMHB4Ow0KICAgIGZvbnQtc2l6ZTogMTZweDsNCiAgICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7DQogICAgY29sb3I6ICNmZmY7DQp9DQoNCi5pdGVtLXNlbnRpbWVudCB7DQogIG1hcmdpbi10b3A6IDExcHg7DQogIGZvbnQtc2l6ZTogMTJweDsNCiAgcGFkZGluZzogMnB4IDhweDsNCiAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KfQ0KDQouaXRlbS1zZW50aW1lbnQucG9zaXRpdmUgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjY4ZjNmOw0KICBjb2xvcjogI2ZmZjsNCn0NCg0KLml0ZW0tc2VudGltZW50Lm5ldXRyYWwgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Q1MTYyOw0KICBjb2xvcjogI2ZmZjsNCn0NCg0KLml0ZW0tc2VudGltZW50Lm5lZ2F0aXZlIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2QxNTY2MjsNCiAgY29sb3I6ICNmZmY7DQp9DQouaXRlbS10aXRsZSB7DQogICAgZmxleDogMTsNCiAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICBvdmVyZmxvdzogaGlkZGVuOw0KICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7DQogICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7DQp9DQoNCi5pdGVtLXRpbWUgew0KICAgIG1hcmdpbi1sZWZ0OiAxMHB4Ow0KfQ0KDQouaXRlbS1zb3VyY2Ugew0KICAgIG1hcmdpbi1sZWZ0OiAxMHB4Ow0KfQ0KDQouY2xvc2Ugew0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICB0b3A6IDA7DQogICAgcmlnaHQ6IDA7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KYTpsaW5rIHsNCiAgICBjb2xvcjogcmdiKDI1MywgMjQ4LCAyNDkpOw0KICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsNCn0NCg0KYTp2aXNpdGVkIHsNCiAgICBjb2xvcjogcmdiKDgzLCAyMzcsIDE4Myk7DQogICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOw0KfQ0KDQphOmhvdmVyIHsNCiAgICBjb2xvcjogcmdiKDI1MSwgNjksIDY5KTsNCiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7DQp9DQoNCmE6YWN0aXZlIHsNCiAgICBjb2xvcjogcmdiKDI0MCwgNjUsIDY1KTsNCiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7DQp9DQoNCkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkgew0KIC5hbGxfdmlldyB7DQogICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47DQogICAgfQ0KDQogLmlucHV0IHsNCiAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgfQ0KDQogLnNlYXJjaFJlc3VsdHsNCiAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgfQ0KfQ0KQGtleWZyYW1lcyBzcGluIHsNCiAgMCUgew0KICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOw0KICB9DQogIDEwMCUgew0KICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7DQogIH0NCn0NCg=="},{"version":3,"sources":["all_view.vue"],"names":[],"mappings":";AAkkfile":"all_view.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div class=\"all_view\">\r\n      <div class=\"side\">\r\n        <SideBorder />\r\n      </div>\r\n  \r\n      <div class=\"main-content\">\r\n        <!-- 顶部搜索框 -->\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"input\">\r\n            <input type=\"text\" v-model=\"key_word\" class=\"key\" placeholder=\"搜索话题\" />\r\n          </div>\r\n          <div class=\"search_button\">\r\n            <button @click=\"search\">搜索</button>\r\n          </div>\r\n        </div>\r\n\r\n         <!-- 加载动画 -->\r\n      <div v-if=\"loading\" class=\"loading-overlay\">\r\n        <div class=\"loading-spinner\"></div>\r\n      </div>\r\n\r\n        <!-- 搜索结果 -->\r\n        <div class=\"searchResult\" v-show=\"searchResult\">\r\n          <div class=\"title\">\r\n            有关{{ key_word }}的话题\r\n            <button @click=\"renderCharts\" class=\"analysis-btn\">去分析</button>\r\n            <div class=\"close\" @click=\"searchResult = false\">\r\n              <i class=\"el-icon-close\"></i>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- 人民网搜索结果 -->\r\n          <div v-if=\"results.renmin\" class=\"renmin_results\">\r\n            <div class=\"result\" v-for=\"(item, index) in results.renmin\" :key=\"index\">\r\n              <div class=\"item-container\">\r\n                <div class=\"item-title\">\r\n                  <a :href=\"item.url\" target=\"_blank\">{{ item.title }}</a>\r\n                </div>\r\n                <div class=\"item-sentiment\" :class=\"getSentimentClass(item.sentiment)\">\r\n                  {{ getSentimentLabel(item.sentiment) }}\r\n                </div>\r\n                <div class=\"item-source\">来源: 人民网</div>\r\n                <div class=\"item-time\">{{ item.displayTime }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- 贴吧搜索结果 -->\r\n          <div v-if=\"results.tieba\" class=\"tieba_results\">\r\n            <div class=\"result\" v-for=\"(item, index) in results.tieba\" :key=\"index\">\r\n              <div class=\"item-container\">\r\n                <div class=\"item-title\">\r\n                  <a :href=\"item.url\" target=\"_blank\">{{ item.title }}</a>\r\n                </div>\r\n                <div class=\"item-sentiment\" :class=\"getSentimentClass(item.sentiment)\">\r\n                  {{ getSentimentLabel(item.sentiment) }}\r\n                </div>\r\n                <div class=\"item-source\">来源: 贴吧</div>\r\n                <div class=\"item-time\">{{ item.time }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 微信搜索结果 -->\r\n          <div v-if=\"results.wechat\" class=\"wechat_results\">\r\n            <div class=\"result\" v-for=\"(item, index) in results.wechat\" :key=\"index\">\r\n              <div class=\"item-container\">\r\n                <div class=\"item-title\">\r\n                  <a :href=\"item.url\" target=\"_blank\">{{ item.title }}</a>\r\n                </div>\r\n                <div class=\"item-sentiment\" :class=\"getSentimentClass(item.sentiment)\">\r\n                  {{ getSentimentLabel(item.sentiment) }}\r\n                </div>\r\n                <div class=\"item-source\">\r\n                    来源: 微信 {{ item.source }}\r\n                </div>\r\n                <div class=\"item-time\">{{ item.time }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- 微博搜索结果 -->\r\n          <div v-if=\"results.weibo\" class=\"weibo_results\">\r\n            <div class=\"result\" v-for=\"(item, index) in results.weibo\" :key=\"index\">\r\n              <div class=\"item-container\">\r\n                <div class=\"item-title\">\r\n                  {{ item.text.slice(0, 20) + \"...\" | snippet }}\r\n                </div>\r\n                <div class=\"item-sentiment\" :class=\"getSentimentClass(item.sentiment)\">\r\n                  {{ getSentimentLabel(item.sentiment) }}\r\n                </div>\r\n                <div class=\"item-source\">来源: 微博</div>\r\n                <div class=\"item-time\">{{ item.created_at }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 分析图表 -->\r\n      <div class=\"analysis-charts\" v-if=\"showAnalysis\">\r\n        <div class=\"close-charts\" @click=\"closeAnalysis\">\r\n          <i class=\"el-icon-close\"></i>\r\n        </div>\r\n        <!-- 信息来源占比图（饼状图） -->\r\n        <div class=\"chart-container\">\r\n          <div ref=\"sourceChart\" style=\"width: 100%; height: 300px;\"></div>\r\n        </div>\r\n\r\n        <!-- 发布时间折线图 -->\r\n        <div class=\"chart-container\">\r\n          <div ref=\"timeLineChart\" style=\"width: 100%; height: 300px;\"></div>\r\n        </div>\r\n\r\n        <!-- 情感分析占比图 -->\r\n        <div class=\"chart-container\">\r\n          <div ref=\"sentimentChart\" style=\"width: 100%; height: 300px;\"></div>\r\n        </div>\r\n\r\n        <!-- 情感分析随时间变化折线图 -->\r\n        <div class=\"chart-container\">\r\n          <div ref=\"sentimentTimeChart\" style=\"width: 100%; height: 300px;\"></div>\r\n        </div>\r\n    </div>\r\n    </div>  \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import SideBorder from \"../components/Side_border\";\r\n  import * as echarts from 'echarts';\r\n\r\n  export default {\r\n    name: \"search\",\r\n    \r\n    data() {\r\n      return {\r\n        key_word: \"\",\r\n        loading: false, // 控制加载状态\r\n        searchResult: true,\r\n        results: {},\r\n        showAnalysis: false // 用来控制图表的显示\r\n      };\r\n    },\r\n    components: {\r\n      SideBorder,\r\n    },\r\n    filters: {\r\n      snippet(value) {\r\n        if (value.length > 200) return value.slice(0, 200) + \"...\";\r\n        return value;\r\n      }\r\n    },\r\n    \r\n    methods: {\r\n      // 获取情感标签\r\n      getSentimentLabel(sentiment) {\r\n        if (sentiment > 0.7) return '积极';\r\n        if (sentiment < 0.3) return '消极';\r\n        return '中性';\r\n      },\r\n  \r\n      // 获取情感标签的CSS类\r\n      getSentimentClass(sentiment) {\r\n        if (sentiment > 0.7) return 'positive';\r\n        if (sentiment < 0.3) return 'negative';\r\n        return 'neutral';\r\n      },\r\n  \r\n      async search() {\r\n        this.loading = true; // 开始加载，显示加载动画\r\n        if (!this.key_word) {\r\n          this.$message.error(\"请输入搜索关键词！\");\r\n          return;\r\n        }\r\n  \r\n        // 如果当前关键词和之前的不同，进行搜索\r\n        if (this.key_word !== this.currentKeyWord) {\r\n          this.searchResult = true;\r\n          this.results = {}; // 清空旧结果\r\n          this.currentKeyWord = this.key_word; // 更新当前搜索关键词\r\n        }\r\n  \r\n        const results = { renmin: [], weibo: [], tieba: [], wechat: [] };\r\n        let cursor = 1; // 从第一页开始\r\n        let hasMoreData = true; // 标记是否还有更多数据\r\n  \r\n        try {\r\n          while (hasMoreData && cursor <= 1) { // 只爬取指定页数\r\n            const response = await this.$axios.get(\r\n              `multi_search?tag=${this.key_word}&cursor=${cursor}`\r\n            );\r\n            const pageData = response.data.data;\r\n  \r\n            if (!pageData.renmin && !pageData.weibo && !pageData.tieba && !pageData.wechat) {\r\n              this.$message.warning(`第 ${cursor} 页没有更多结果`);\r\n              break;\r\n            }\r\n  \r\n            // 合并数据并添加情感标签\r\n            if (pageData.renmin) {\r\n              pageData.renmin.forEach(item => {\r\n                item.sentiment = item.sentiment || 0; // 获取后端返回的情感得分\r\n              });\r\n              results.renmin.push(...pageData.renmin);\r\n            }\r\n  \r\n            if (pageData.tieba) {\r\n              pageData.tieba.forEach(item => {\r\n                item.sentiment = item.sentiment || 0; // 获取后端返回的情感得分\r\n              });\r\n              results.tieba.push(...pageData.tieba);\r\n            }\r\n\r\n            if (pageData.wechat) {\r\n              pageData.wechat.forEach(item => {\r\n                item.sentiment = item.sentiment || 0; // 获取后端返回的情感得分\r\n              });\r\n              results.wechat.push(...pageData.wechat);\r\n            }\r\n\r\n            if (pageData.weibo?.result) {\r\n              pageData.weibo.result.forEach(item => {\r\n                item.sentiment = item.sentiment || 0; // 获取后端返回的情感得分\r\n              });\r\n              results.weibo.push(...pageData.weibo.result);\r\n            }\r\n  \r\n            // 判断是否继续爬取\r\n            hasMoreData = pageData.renmin?.length > 0 || pageData.weibo?.result?.length > 0 || pageData.tieba?.length > 0 || pageData.wechat?.length > 0;\r\n            cursor++; // 下一页\r\n          }\r\n  \r\n          this.results = results;\r\n          \r\n          if (results.renmin.length === 0 && results.weibo.length === 0 && results.tieba.length === 0 && results.wechat.length === 0) {\r\n            this.$message.error(\"没有找到相关结果\");\r\n          }\r\n         \r\n        } catch (error) {\r\n          console.error(\"搜索失败\", error);\r\n          this.$message.error(\"搜索失败，请稍后再试！\");\r\n        }finally {\r\n        this.loading = false; // 加载完成，隐藏加载动画\r\n      }\r\n      },\r\n\r\n      renderCharts() {\r\n      this.showAnalysis = true; // 显示图表\r\n\r\n      this.$nextTick(() => {\r\n    // 在这里初始化 ECharts 图表\r\n    const renminCount = this.results.renmin? this.results.renmin.length : 0;\r\n    const weiboCount = this.results.weibo? this.results.weibo.length : 0;\r\n    const tiebaCount = this.results.tieba? this.results.tieba.length : 0;\r\n    const wechatCount = this.results.wechat? this.results.wechat.length : 0;\r\n\r\n    const total = renminCount + weiboCount + tiebaCount + wechatCount;\r\n    console.log(this.$refs.sourceChart);\r\n    if (this.$refs.sourceChart) {\r\n      const sourceChart = this.$echarts.init(this.$refs.sourceChart);\r\n      const sourceOption = {\r\n        title: {\r\n          text: '信息来源占比',\r\n          left: 'center',\r\n          top: 'center',\r\n          textStyle: {\r\n            fontSize: 16,\r\n            fontWeight: 'normal',\r\n            color: '#fff'\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n        },\r\n        series: [\r\n          {\r\n            name: '信息来源',\r\n            type: 'pie',\r\n            radius: '50%',\r\n            data: [\r\n              { value: renminCount, name: '人民网' },\r\n              { value: weiboCount, name: '微博' },\r\n              { value: tiebaCount, name: '贴吧' },\r\n              { value: wechatCount, name: '微信' },\r\n            ],\r\n            color: ['#36a2eb', '#ff6384', '#ffcc00', '#02a53b'],\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      };\r\n      sourceChart.setOption(sourceOption);\r\n    } else {\r\n      console.error('sourceChart element not found');\r\n    }\r\n\r\n      const timeData = this.calculateTimeData();\r\n      const timeLineChart = this.$echarts.init(this.$refs.timeLineChart);\r\n      const timeLineOption = {\r\n        title: {\r\n          text: '发布时间趋势',\r\n          left: 'center',\r\n          top: 'top',\r\n          textStyle: {\r\n            color: '#fff'\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['人民网', '微博', '贴吧', '微信'],\r\n          top: '10%',\r\n          textStyle: {\r\n            color: '#fff'\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: timeData.labels,\r\n          axisLabel: {\r\n            color: '#fff'\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          axisLabel: {\r\n            formatter: '{value} 条',\r\n            color: '#fff'\r\n          },\r\n          axisTick: {\r\n            alignWithLabel: true\r\n            },\r\n            minInterval: 1 // 设置最小刻度间隔为1，确保显示整数\r\n        },\r\n        grid: {\r\n          top: '15%',\r\n          left: '10%',\r\n          right: '8%',\r\n          bottom: '20%'\r\n        },\r\n        series: [\r\n          {\r\n            name: '人民网',\r\n            type: 'line',\r\n            data: timeData.renmin,\r\n            smooth: true,\r\n            color: '#36a2eb'\r\n          },\r\n          {\r\n            name: '微博',\r\n            type: 'line',\r\n            data: timeData.weibo,\r\n            smooth: true,\r\n            color: '#ff6384'\r\n          },\r\n          {\r\n            name: '贴吧',\r\n            type: 'line',\r\n            data: timeData.tieba,\r\n            smooth: true,\r\n            color: '#ffcc00'\r\n          },\r\n          {\r\n            name: '微信',\r\n            type: 'line',\r\n            data: timeData.wechat,\r\n            smooth: true,\r\n            color: '#02a53b'\r\n          }\r\n        ]\r\n      };\r\n      timeLineChart.setOption(timeLineOption);\r\n\r\n      // 情感分析占比图\r\n      const sentimentData = this.calculateSentimentData();\r\n      const sentimentChart = this.$echarts.init(this.$refs.sentimentChart);\r\n      const sentimentOption = {\r\n        title: {\r\n          text: '情感分析占比',\r\n          left: 'center',\r\n          top: 'center',\r\n          textStyle: {\r\n            fontSize: 16,\r\n            fontWeight: 'normal',\r\n            color: '#fff'\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n        },\r\n        series: [\r\n          {\r\n            name: '情感分析',\r\n            type: 'pie',\r\n            radius: '50%',\r\n            data: sentimentData,\r\n            color: ['#36a2eb', '#ff6384', '#ffcc00'],\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      };\r\n      sentimentChart.setOption(sentimentOption);\r\n\r\n      // 情感分析随时间变化折线图\r\n      const sentimentTimeData = this.calculateSentimentTimeData();\r\n      const sentimentTimeChart = this.$echarts.init(this.$refs.sentimentTimeChart);\r\n      const sentimentTimeOption = {\r\n        title: {\r\n          text: '情感分析随时间变化',\r\n          left: 'center',\r\n          top: 'top',\r\n          textStyle: {\r\n            color: '#fff'\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['积极', '中性', '消极'],\r\n          top: '10%',\r\n          textStyle: {\r\n            color: '#fff'\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: sentimentTimeData.labels,\r\n          axisLabel: {\r\n            color: '#fff'\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          axisLabel: {\r\n            formatter: '{value} 条',\r\n            color: '#fff'\r\n          },\r\n          axisTick: {\r\n            alignWithLabel: true\r\n            },\r\n            minInterval: 1 // 设置最小刻度间隔为1，确保显示整数\r\n        },\r\n        series: [\r\n          {\r\n            name: '积极',\r\n            type: 'line',\r\n            data: sentimentTimeData.positive,\r\n            smooth: true,\r\n            color: '#36a2eb'\r\n          },\r\n          {\r\n            name: '中性',\r\n            type: 'line',\r\n            data: sentimentTimeData.neutral,\r\n            smooth: true,\r\n            color: '#ffcc00'\r\n          },\r\n          {\r\n            name: '消极',\r\n            type: 'line',\r\n            data: sentimentTimeData.negative,\r\n            smooth: true,\r\n            color: '#ff6384'\r\n          }\r\n        ]\r\n      };\r\n      sentimentTimeChart.setOption(sentimentTimeOption);\r\n    });\r\n  },\r\n\r\n    calculateSentimentData() {\r\n      const sentiments = [...this.results.renmin, ...this.results.weibo, ...this.results.tieba, ...this.results.wechat].map(item => item.sentiment);\r\n      const positiveCount = sentiments.filter(sentiment => sentiment > 0.7).length;\r\n      const neutralCount = sentiments.filter(sentiment => sentiment >= 0.3 && sentiment <= 0.7).length;\r\n      const negativeCount = sentiments.filter(sentiment => sentiment < 0.3).length;\r\n\r\n      const totalCount = sentiments.length;\r\n      return [\r\n        { value: positiveCount, name: '积极' },\r\n        { value: neutralCount, name: '中性' },\r\n        { value: negativeCount, name: '消极' }\r\n      ];\r\n    },\r\n\r\n    calculateSentimentTimeData() { \r\n    const renminSentimentTimes = this.results.renmin.map(item => ({ time: item.displayTime, sentiment: item.sentiment }));\r\n    const weiboSentimentTimes = this.results.weibo.map(item => ({ time: item.created_at, sentiment: item.sentiment }));\r\n    const tiebaSentimentTimes = this.results.tieba.map(item => ({ time: item.time, sentiment: item.sentiment }));\r\n    const wechatSentimentTimes = this.results.wechat.map(item => ({ time: item.time, sentiment: item.sentiment }));\r\n\r\n    const allSentiments = [...renminSentimentTimes, ...weiboSentimentTimes, ...tiebaSentimentTimes, ...wechatSentimentTimes];\r\n    \r\n    // 时间格式化为 'YYYY-MM'\r\n    const formatToMonth = (time) => {\r\n        const date = new Date(time);\r\n        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n    };\r\n\r\n    // 格式化所有时间为月份\r\n    const timeLabels = [...new Set(allSentiments.map(item => formatToMonth(item.time)))].sort();\r\n\r\n    const positive = timeLabels.map(label => \r\n        allSentiments.filter(item => formatToMonth(item.time) === label && item.sentiment > 0.7).length\r\n    );\r\n    \r\n    const neutral = timeLabels.map(label => \r\n        allSentiments.filter(item => formatToMonth(item.time) === label && item.sentiment >= 0.3 && item.sentiment <= 0.7).length\r\n    );\r\n    \r\n    const negative = timeLabels.map(label => \r\n        allSentiments.filter(item => formatToMonth(item.time) === label && item.sentiment < 0.3).length\r\n    );\r\n\r\n    return {\r\n        labels: timeLabels,\r\n        positive: positive,\r\n        neutral: neutral,\r\n        negative: negative\r\n    };\r\n    },\r\n\r\n    calculateTimeData() {\r\n    // 将时间转化为月份（'YYYY-MM'）\r\n    const renminTime = this.results.renmin.map(item => item.time);\r\n    const weiboTime = this.results.weibo.map(item => item.created_at);\r\n    const tiebaTime = this.results.tieba.map(item => item.time);\r\n    const wechatTime = this.results.wechat.map(item => item.time);\r\n\r\n    // 格式化时间为月份\r\n    const formatToMonth = (time) => {\r\n        const date = new Date(time);\r\n        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n    };\r\n\r\n    // 将所有时间转换为月份\r\n    const timeLabels = [...new Set([...renminTime, ...weiboTime, ...tiebaTime, ...wechatTime].map(formatToMonth))].sort();\r\n\r\n    const renmin = timeLabels.map(label => renminTime.filter(item => formatToMonth(item) === label).length);\r\n    const weibo = timeLabels.map(label => weiboTime.filter(item => formatToMonth(item) === label).length);\r\n    const tieba = timeLabels.map(label => tiebaTime.filter(item => formatToMonth(item) === label).length);\r\n    const wechat = timeLabels.map(label => wechatTime.filter(item => formatToMonth(item) === label).length);\r\n\r\n    return {\r\n        labels: timeLabels,\r\n        renmin: renmin,\r\n        weibo: weibo,\r\n        tieba: tieba,\r\n        wechat: wechat\r\n    };\r\n    },\r\n\r\n    closeAnalysis() {\r\n      this.showAnalysis = false;\r\n    }\r\n  },\r\n  \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.loading-spinner {\r\n  border: 10px solid #f3f3f3;\r\n  border-top: 10px solid #3498db;\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  animation: spin 1s linear infinite;\r\n  position: absolute;  /* 使用绝对定位 */\r\n  top: 50%;  /* 垂直居中 */\r\n  left: 50%;  /* 水平居中 */\r\n  transform: translate(-50%, -50%); /* 精确居中 */\r\n}\r\n\r\n/* 去分析按钮样式 */\r\n.analysis-btn {\r\n  padding: 10px 20px; /* 增加左右内边距 */\r\n  background-color: #3498db;\r\n  color: white;\r\n  display: inline-block;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 15px;\r\n  font-size: 16px;\r\n}\r\n\r\n.analysis-btn:hover {\r\n  background-color: #2980b9; /* 鼠标悬浮时的背景色 */\r\n}\r\n/* 分析图表容器样式 */\r\n.analysis-charts {\r\n  margin-top: 1%;\r\n  width: 100%;\r\n  height: 91%;\r\n  position: relative; \r\n  background-color: rgba(29, 45, 55, 0.622); /* 背景色稍透明，突出图表 */\r\n  z-index: 100; /* 确保图表位于搜索结果之上 */\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n}\r\n\r\n/* 每个图表容器 */\r\n.chart-container {\r\n  width: 48%; /* 宽度充满父容器 */\r\n  height: 48%;\r\n  margin-bottom: 10px; /* 每个图表之间的间距 */\r\n}\r\n\r\n/* 设置图表具体的容器 */\r\n.chart-container div {\r\n  width: 100%; /* 宽度占满容器 */\r\n  height: 100%; /* 高度占满容器 */\r\n}\r\n\r\n.close-charts {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  cursor: pointer;\r\n  font-size: 20px;\r\n}\r\n.close-charts:hover {\r\n  color: red; /* 改变颜色为红色 */\r\n}\r\n\r\n.main-content {\r\n  margin-left: 150px; /* 留出侧边栏的空间 */\r\n  flex: 1;\r\n  padding: 20px;\r\n  background-color: #fbfbfb00;\r\n}\r\n\r\n.all_view {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #ffffff00;\r\n  /* background-image: url('../background/0.png'); */\r\n  background: linear-gradient(to right, #086264, #229fe2d6);\r\n  background-size: cover;\r\n  background-position: center;\r\n}\r\n\r\n.input-wrapper {\r\n  display: flex;\r\n  align-items: center; /* 让输入框和按钮水平对齐 */\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.input {\r\n  margin-right: 10px;\r\n  background-color: #ffffff00;\r\n  width: 50%;\r\n  height: 8%;\r\n}\r\n\r\n.key {\r\n  padding: 10px;\r\n  width: 100%;\r\n}\r\n\r\n.search_button button {\r\n  padding: 10px 20px;\r\n  background-color: #3498db;\r\n  color: white;\r\n  display: flex;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.searchResult {\r\n  margin-top: 1%;\r\n  margin-right: 0%;\r\n  width: 80%;\r\n  height: 84%;\r\n  overflow-y: auto;\r\n  background-color: #ffffff00;\r\n  background: linear-gradient(to right, #296a7500, #2d66ac00);\r\n  z-index: 99;\r\n  overflow: auto;\r\n  border-right: 0px solid #cccccc00;\r\n  border-left: 0px solid #cccccc00;\r\n  border: 0px solid #fefeff00;\r\n  border-radius: 10px;\r\n  color: #ffffff;\r\n}\r\n\r\n.result {\r\n    padding: 3px;\r\n    margin-bottom: 0px;\r\n    /* border: 1px solid #6c6161cf; */\r\n    background-color: #ffffff00;\r\n    height: 50px;\r\n}\r\n\r\n.item-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.item-title,\r\n.item-source,\r\n.item-time {\r\n    margin-top: 10px;\r\n    margin-left: 20px;\r\n    margin-right: 20px;\r\n    font-size: 16px;\r\n    font-family: Arial, sans-serif;\r\n    color: #fff;\r\n}\r\n\r\n.item-sentiment {\r\n  margin-top: 11px;\r\n  font-size: 12px;\r\n  padding: 2px 8px;\r\n  border-radius: 4px;\r\n  align-items: center;\r\n}\r\n\r\n.item-sentiment.positive {\r\n  background-color: #268f3f;\r\n  color: #fff;\r\n}\r\n\r\n.item-sentiment.neutral {\r\n  background-color: #3d5162;\r\n  color: #fff;\r\n}\r\n\r\n.item-sentiment.negative {\r\n  background-color: #d15662;\r\n  color: #fff;\r\n}\r\n.item-title {\r\n    flex: 1;\r\n    font-weight: bold;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.item-time {\r\n    margin-left: 10px;\r\n}\r\n\r\n.item-source {\r\n    margin-left: 10px;\r\n}\r\n\r\n.close {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    cursor: pointer;\r\n}\r\na:link {\r\n    color: rgb(253, 248, 249);\r\n    text-decoration: none;\r\n}\r\n\r\na:visited {\r\n    color: rgb(83, 237, 183);\r\n    text-decoration: none;\r\n}\r\n\r\na:hover {\r\n    color: rgb(251, 69, 69);\r\n    text-decoration: none;\r\n}\r\n\r\na:active {\r\n    color: rgb(240, 65, 65);\r\n    text-decoration: none;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n .all_view {\r\n        flex-direction: column;\r\n    }\r\n\r\n .input {\r\n        width: 100%;\r\n    }\r\n\r\n .searchResult{\r\n        width: 100%;\r\n    }\r\n}\r\n@keyframes spin {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>\r\n"]}]}