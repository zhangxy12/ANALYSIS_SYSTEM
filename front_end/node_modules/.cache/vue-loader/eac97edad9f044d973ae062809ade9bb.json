{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\Rumor\\Wordcloud.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\Rumor\\Wordcloud.vue","mtime":1741770935246},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1733210776367},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":1733210776030},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOw0KaW1wb3J0ICogYXMgZWNoYXJ0cyBmcm9tICdlY2hhcnRzJzsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICAgIG5hbWU6ICdXb3JkQ2xvdWQnLA0KICAgIGRhdGEoKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgICB3b3JkY2xvdWREYXRhOiBbXSwNCiAgICAgICAgICAgIGxvYWRpbmc6IGZhbHNlLA0KICAgICAgICAgICAgZXJyb3I6IG51bGwNCiAgICAgICAgfTsNCiAgICB9LA0KICAgIG1vdW50ZWQoKSB7DQogICAgICAgIHRoaXMuZmV0Y2hXb3JkY2xvdWREYXRhKCk7DQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIGFzeW5jIGZldGNoV29yZGNsb3VkRGF0YSgpIHsNCiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KCcvcnVtb3IvcnVtb3Jfd29yZCcpOw0KICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLmNvZGUgPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy53b3JkY2xvdWREYXRhID0gcmVzcG9uc2UuZGF0YS5kYXRhLndvcmRjbG91ZF9kYXRhOw0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLndvcmRjbG91ZERhdGEpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbmRlcldvcmRjbG91ZCgpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IgPSByZXNwb25zZS5kYXRhLm1lc3NhZ2U7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICB0aGlzLmVycm9yID0gJ+ivt+axguWHuumUme+8micgKyBlcnJvci5tZXNzYWdlOw0KICAgICAgICAgICAgfSBmaW5hbGx5IHsNCiAgICAgICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgcmVuZGVyV29yZGNsb3VkKCkgew0KICAgICAgICAgICAgY29uc3QgY2hhcnREb20gPSB0aGlzLiRyZWZzLndvcmRjbG91ZDsNCiAgICAgICAgICAgIGNvbnN0IG15Q2hhcnQgPSBlY2hhcnRzLmluaXQoY2hhcnREb20pOw0KDQogICAgICAgICAgICBjb25zdCBvcHRpb24gPSB7DQogICAgICAgICAgICAgICAgc2VyaWVzOiBbDQogICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICd3b3JkQ2xvdWQnLA0KICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICc5MCUnLA0KICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAnOTAlJywNCiAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAnY2VudGVyJywNCiAgICAgICAgICAgICAgICAgICAgICAgIGJvdHRvbTogJ2NlbnRlcicsDQogICAgICAgICAgICAgICAgICAgICAgICBzaGFwZTogJ2NpcmNsZScsDQogICAgICAgICAgICAgICAgICAgICAgICBzaXplUmFuZ2U6IFsxMiwgNjBdLA0KICAgICAgICAgICAgICAgICAgICAgICAgcm90YXRpb25SYW5nZTogWy05MCwgOTBdLA0KICAgICAgICAgICAgICAgICAgICAgICAgcm90YXRpb25TdGVwOiA0NSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGdyaWRTaXplOiA4LA0KICAgICAgICAgICAgICAgICAgICAgICAgZHJhd091dE9mQm91bmQ6IGZhbHNlLA0KICAgICAgICAgICAgICAgICAgICAgICAgdGV4dFN0eWxlOiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g6ZqP5py655Sf5oiQ6aKc6ImyDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAicmdiKCIgKw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDU1ICsgMjAwKSwgLy8g57qi6Imy5YiG6YeP77yaMjAwIC0gMjU1DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogNTUgKyAyMDApLCAvLyDnu7/oibLliIbph4/vvJoyMDAgLSAyNTUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiA1NSArIDIwMCksIC8vIOiTneiJsuWIhumHj++8mjIwMCAtIDI1NQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXS5qb2luKCIsIikgKyAiKSI7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbXBoYXNpczogew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaGFkb3dCbHVyOiAxMCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hhZG93Q29sb3I6ICcjMzMzJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB0aGlzLndvcmRjbG91ZERhdGEubWFwKGl0ZW0gPT4gKHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBpdGVtLm5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGl0ZW0udmFsdWUNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pKQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgXQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgb3B0aW9uICYmIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7DQogICAgICAgIH0NCiAgICB9DQp9Ow0K"},{"version":3,"sources":["Wordcloud.vue"],"names":[],"mappings":";AAWA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Wordcloud.vue","sourceRoot":"src/components/Rumor","sourcesContent":["<template>\r\n    \r\n    <div class=\"wordcloud-container\">\r\n        <dv-border-box-7 :color = \"['LightSkyBlue','white']\">\r\n        <div ref=\"wordcloud\" style=\"width: 100%; height: 240px;\"></div>\r\n    </dv-border-box-7>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n    name: 'WordCloud',\r\n    data() {\r\n        return {\r\n            wordcloudData: [],\r\n            loading: false,\r\n            error: null\r\n        };\r\n    },\r\n    mounted() {\r\n        this.fetchWordcloudData();\r\n    },\r\n    methods: {\r\n        async fetchWordcloudData() {\r\n            this.loading = true;\r\n            try {\r\n                const response = await axios.get('/rumor/rumor_word');\r\n                if (response.data.code === 0) {\r\n                    this.wordcloudData = response.data.data.wordcloud_data;\r\n                    console.log(this.wordcloudData);\r\n                    this.renderWordcloud();\r\n                } else {\r\n                    this.error = response.data.message;\r\n                }\r\n            } catch (error) {\r\n                this.error = '请求出错：' + error.message;\r\n            } finally {\r\n                this.loading = false;\r\n            }\r\n        },\r\n        renderWordcloud() {\r\n            const chartDom = this.$refs.wordcloud;\r\n            const myChart = echarts.init(chartDom);\r\n\r\n            const option = {\r\n                series: [\r\n                    {\r\n                        type: 'wordCloud',\r\n                        width: '90%',\r\n                        height: '90%',\r\n                        right: 'center',\r\n                        bottom: 'center',\r\n                        shape: 'circle',\r\n                        sizeRange: [12, 60],\r\n                        rotationRange: [-90, 90],\r\n                        rotationStep: 45,\r\n                        gridSize: 8,\r\n                        drawOutOfBound: false,\r\n                        textStyle: {\r\n                            color: function () {\r\n                                // 随机生成颜色\r\n                                return \"rgb(\" +\r\n                                    [\r\n                                        Math.round(Math.random() * 55 + 200), // 红色分量：200 - 255\r\n                                        Math.round(Math.random() * 55 + 200), // 绿色分量：200 - 255\r\n                                        Math.round(Math.random() * 55 + 200), // 蓝色分量：200 - 255\r\n                                    ].join(\",\") + \")\";\r\n                            },\r\n                            emphasis: {\r\n                                shadowBlur: 10,\r\n                                shadowColor: '#333'\r\n                            }\r\n                        },\r\n                        data: this.wordcloudData.map(item => ({\r\n                            name: item.name,\r\n                            value: item.value\r\n                        }))\r\n                    }\r\n                ]\r\n            };\r\n\r\n            option && myChart.setOption(option);\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.wordcloud-container {\r\n    margin-top: 10px;\r\n}\r\n</style>"]}]}