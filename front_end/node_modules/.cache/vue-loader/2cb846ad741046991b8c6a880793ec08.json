{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\pages\\all_view_analysis.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\pages\\all_view_analysis.vue","mtime":1736755273495},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":1733210776030},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIGltcG9ydCBlY2hhcnRzIGZyb20gJ2VjaGFydHMnOw0KICBpbXBvcnQgU2lkZUJvcmRlciBmcm9tICIuLi9jb21wb25lbnRzL1NpZGVfYm9yZGVyIjsNCiAgZXhwb3J0IGRlZmF1bHQgew0KICAgIG5hbWU6ICJhbGxfdmlld19hbmFseXNpcyIsDQogICAgY29tcG9uZW50czogew0KICAgICAgICBTaWRlQm9yZGVyDQogIH0sDQogICAgcHJvcHM6IHsNCiAgICAgIHJlc3VsdHM6IHsNCiAgICAgICAgdHlwZTogT2JqZWN0LA0KICAgICAgICByZXF1aXJlZDogdHJ1ZQ0KICAgICAgfQ0KICAgIH0sDQogICAgd2F0Y2g6IHsNCiAgcmVzdWx0cyhuZXdWYWx1ZSkgew0KICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsNCiAgICAgIHRoaXMucmVuZGVyQ2hhcnRzKCk7IC8vIOehruS/neWcqCBET00g5pu05paw5ZCO5omn6KGM5riy5p+TDQogICAgfSk7DQogIH0NCn0sDQogICAgbWV0aG9kczogew0KICAgICAgcmVuZGVyQ2hhcnRzKCkgew0KICAgICAgICBjb25zdCByZW5taW5Db3VudCA9IHRoaXMucmVzdWx0cy5yZW5taW4gPyB0aGlzLnJlc3VsdHMucmVubWluLmxlbmd0aCA6IDA7DQogICAgICAgIGNvbnN0IHdlaWJvQ291bnQgPSB0aGlzLnJlc3VsdHMud2VpYm8gPyB0aGlzLnJlc3VsdHMud2VpYm8ubGVuZ3RoIDogMDsNCiAgICAgICAgY29uc3QgdGllYmFDb3VudCA9IHRoaXMucmVzdWx0cy50aWViYSA/IHRoaXMucmVzdWx0cy50aWViYS5sZW5ndGggOiAwOw0KICAgICAgICBjb25zdCB0b3RhbCA9IHJlbm1pbkNvdW50ICsgd2VpYm9Db3VudCArIHRpZWJhQ291bnQ7DQogIA0KICAgICAgICBjb25zdCBzb3VyY2VDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLnNvdXJjZUNoYXJ0KTsNCiAgICAgICAgY29uc3Qgc291cmNlT3B0aW9uID0gew0KICAgICAgICAgIHRpdGxlOiB7DQogICAgICAgICAgICB0ZXh0OiAn5L+h5oGv5p2l5rqQ5Y2g5q+UJywNCiAgICAgICAgICAgIGxlZnQ6ICdjZW50ZXInLA0KICAgICAgICAgICAgdG9wOiAnY2VudGVyJywNCiAgICAgICAgICAgIHRleHRTdHlsZTogew0KICAgICAgICAgICAgICBmb250U2l6ZTogMTYsDQogICAgICAgICAgICAgIGZvbnRXZWlnaHQ6ICdub3JtYWwnLA0KICAgICAgICAgICAgICBjb2xvcjogJyNmZmYnIA0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0sDQogICAgICAgICAgdG9vbHRpcDogew0KICAgICAgICAgICAgdHJpZ2dlcjogJ2l0ZW0nLA0KICAgICAgICAgICAgZm9ybWF0dGVyOiAne2F9IDxici8+e2J9OiB7Y30gKHtkfSUpJw0KICAgICAgICAgIH0sDQogICAgICAgICAgc2VyaWVzOiBbDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgIG5hbWU6ICfkv6Hmga/mnaXmupAnLA0KICAgICAgICAgICAgICB0eXBlOiAncGllJywNCiAgICAgICAgICAgICAgcmFkaXVzOiAnNTAlJywNCiAgICAgICAgICAgICAgZGF0YTogWw0KICAgICAgICAgICAgICAgIHsgdmFsdWU6IHJlbm1pbkNvdW50LCBuYW1lOiAn5Lq65rCR572RJyB9LA0KICAgICAgICAgICAgICAgIHsgdmFsdWU6IHdlaWJvQ291bnQsIG5hbWU6ICflvq7ljZonIH0sDQogICAgICAgICAgICAgICAgeyB2YWx1ZTogdGllYmFDb3VudCwgbmFtZTogJ+i0tOWQpycgfQ0KICAgICAgICAgICAgICBdLA0KICAgICAgICAgICAgICBjb2xvcjogWycjMzZhMmViJywgJyNmZjYzODQnLCAnI2ZmY2MwMCddLCANCiAgICAgICAgICAgICAgZW1waGFzaXM6IHsNCiAgICAgICAgICAgICAgICBpdGVtU3R5bGU6IHsNCiAgICAgICAgICAgICAgICAgIHNoYWRvd0JsdXI6IDEwLA0KICAgICAgICAgICAgICAgICAgc2hhZG93T2Zmc2V0WDogMCwNCiAgICAgICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiAncmdiYSgwLCAwLCAwLCAwLjUpJw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgIF0NCiAgICAgICAgfTsNCiAgICAgICAgc291cmNlQ2hhcnQuc2V0T3B0aW9uKHNvdXJjZU9wdGlvbik7DQogIA0KICAgICAgICBjb25zdCB0aW1lRGF0YSA9IHRoaXMuY2FsY3VsYXRlVGltZURhdGEoKTsNCiAgICAgICAgY29uc3QgdGltZUxpbmVDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLnRpbWVMaW5lQ2hhcnQpOw0KICAgICAgICBjb25zdCB0aW1lTGluZU9wdGlvbiA9IHsNCiAgICAgICAgICB0aXRsZTogew0KICAgICAgICAgICAgdGV4dDogJ+WPkeW4g+aXtumXtOi2i+WKvycsDQogICAgICAgICAgICBsZWZ0OiAnY2VudGVyJywNCiAgICAgICAgICAgIHRvcDogJ3RvcCcsDQogICAgICAgICAgICB0ZXh0U3R5bGU6IHsNCiAgICAgICAgICAgICAgY29sb3I6ICcjZmZmJyANCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9LA0KICAgICAgICAgIHRvb2x0aXA6IHsNCiAgICAgICAgICAgIHRyaWdnZXI6ICdheGlzJw0KICAgICAgICAgIH0sDQogICAgICAgICAgbGVnZW5kOiB7DQogICAgICAgICAgICBkYXRhOiBbJ+S6uuawkee9kScsICflvq7ljZonLCAn6LS05ZCnJ10sIA0KICAgICAgICAgICAgdG9wOiAnMTAlJywNCiAgICAgICAgICAgIHRleHRTdHlsZTogew0KICAgICAgICAgICAgICBjb2xvcjogJyNmZmYnIA0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0sDQogICAgICAgICAgeEF4aXM6IHsNCiAgICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsDQogICAgICAgICAgICBib3VuZGFyeUdhcDogZmFsc2UsDQogICAgICAgICAgICBkYXRhOiB0aW1lRGF0YS5sYWJlbHMsDQogICAgICAgICAgICBheGlzTGFiZWw6IHsNCiAgICAgICAgICAgICAgY29sb3I6ICcjZmZmJw0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0sDQogICAgICAgICAgeUF4aXM6IHsNCiAgICAgICAgICAgIHR5cGU6ICd2YWx1ZScsDQogICAgICAgICAgICBheGlzTGFiZWw6IHsNCiAgICAgICAgICAgICAgZm9ybWF0dGVyOiAne3ZhbHVlfSDmnaEnLA0KICAgICAgICAgICAgICBjb2xvcjogJyNmZmYnDQogICAgICAgICAgICB9DQogICAgICAgICAgfSwNCiAgICAgICAgICBncmlkOiB7DQogICAgICAgICAgICB0b3A6ICcxNSUnLA0KICAgICAgICAgICAgbGVmdDogJzEwJScsDQogICAgICAgICAgICByaWdodDogJzglJywNCiAgICAgICAgICAgIGJvdHRvbTogJzIwJScNCiAgICAgICAgICB9LA0KICAgICAgICAgIHNlcmllczogWw0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICBuYW1lOiAn5Lq65rCR572RJywNCiAgICAgICAgICAgICAgdHlwZTogJ2xpbmUnLA0KICAgICAgICAgICAgICBkYXRhOiB0aW1lRGF0YS5yZW5taW4sDQogICAgICAgICAgICAgIHNtb290aDogdHJ1ZSwNCiAgICAgICAgICAgICAgY29sb3I6ICcjMzZhMmViJw0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgbmFtZTogJ+W+ruWNmicsDQogICAgICAgICAgICAgIHR5cGU6ICdsaW5lJywNCiAgICAgICAgICAgICAgZGF0YTogdGltZURhdGEud2VpYm8sDQogICAgICAgICAgICAgIHNtb290aDogdHJ1ZSwNCiAgICAgICAgICAgICAgY29sb3I6ICcjZmY2Mzg0Jw0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgbmFtZTogJ+i0tOWQpycsDQogICAgICAgICAgICAgIHR5cGU6ICdsaW5lJywNCiAgICAgICAgICAgICAgZGF0YTogdGltZURhdGEudGllYmEsDQogICAgICAgICAgICAgIHNtb290aDogdHJ1ZSwNCiAgICAgICAgICAgICAgY29sb3I6ICcjZmZjYzAwJyANCiAgICAgICAgICAgIH0NCiAgICAgICAgICBdDQogICAgICAgIH07DQogICAgICAgIHRpbWVMaW5lQ2hhcnQuc2V0T3B0aW9uKHRpbWVMaW5lT3B0aW9uKTsNCiAgICAgIH0sDQogIA0KICAgICAgY2FsY3VsYXRlVGltZURhdGEoKSB7DQogICAgICAgIGNvbnN0IHJlbm1pblRpbWVzID0gdGhpcy5yZXN1bHRzLnJlbm1pbiA/IHRoaXMucmVzdWx0cy5yZW5taW4ubWFwKGl0ZW0gPT4gaXRlbS5kaXNwbGF5VGltZSkgOiBbXTsNCiAgICAgICAgY29uc3Qgd2VpYm9UaW1lcyA9IHRoaXMucmVzdWx0cy53ZWlibyA/IHRoaXMucmVzdWx0cy53ZWliby5tYXAoaXRlbSA9PiBpdGVtLmNyZWF0ZWRfYXQpIDogW107DQogICAgICAgIGNvbnN0IHRpZWJhVGltZXMgPSB0aGlzLnJlc3VsdHMudGllYmEgPyB0aGlzLnJlc3VsdHMudGllYmEubWFwKGl0ZW0gPT4gaXRlbS50aW1lKSA6IFtdOw0KICANCiAgICAgICAgY29uc3QgZm9ybWF0VG9Nb250aCA9IHRpbWUgPT4gew0KICAgICAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSh0aW1lKTsNCiAgICAgICAgICByZXR1cm4gYCR7ZGF0ZS5nZXRGdWxsWWVhcigpfS0ke1N0cmluZyhkYXRlLmdldE1vbnRoKCkgKyAxKS5wYWRTdGFydCgyLCAnMCcpfWA7DQogICAgICAgIH07DQogIA0KICAgICAgICBjb25zdCByZW5taW5Nb250aHMgPSByZW5taW5UaW1lcy5tYXAoZm9ybWF0VG9Nb250aCk7DQogICAgICAgIGNvbnN0IHdlaWJvTW9udGhzID0gd2VpYm9UaW1lcy5tYXAoZm9ybWF0VG9Nb250aCk7DQogICAgICAgIGNvbnN0IHRpZWJhTW9udGhzID0gdGllYmFUaW1lcy5tYXAoZm9ybWF0VG9Nb250aCk7DQogIA0KICAgICAgICBjb25zdCB0aW1lTGFiZWxzID0gWy4uLm5ldyBTZXQoWy4uLnJlbm1pbk1vbnRocywgLi4ud2VpYm9Nb250aHMsIC4uLnRpZWJhTW9udGhzXSldLnNvcnQoKTsNCiAgDQogICAgICAgIGNvbnN0IHJlbm1pbkRhdGEgPSB0aW1lTGFiZWxzLm1hcChsYWJlbCA9PiByZW5taW5Nb250aHMuZmlsdGVyKG1vbnRoID0+IG1vbnRoID09PSBsYWJlbCkubGVuZ3RoKTsNCiAgICAgICAgY29uc3Qgd2VpYm9EYXRhID0gdGltZUxhYmVscy5tYXAobGFiZWwgPT4gd2VpYm9Nb250aHMuZmlsdGVyKG1vbnRoID0+IG1vbnRoID09PSBsYWJlbCkubGVuZ3RoKTsNCiAgICAgICAgY29uc3QgdGllYmFEYXRhID0gdGltZUxhYmVscy5tYXAobGFiZWwgPT4gdGllYmFNb250aHMuZmlsdGVyKG1vbnRoID0+IG1vbnRoID09PSBsYWJlbCkubGVuZ3RoKTsNCiAgDQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgbGFiZWxzOiB0aW1lTGFiZWxzLA0KICAgICAgICAgIHJlbm1pbjogcmVubWluRGF0YSwNCiAgICAgICAgICB3ZWlibzogd2VpYm9EYXRhLA0KICAgICAgICAgIHRpZWJhOiB0aWViYURhdGENCiAgICAgICAgfTsNCiAgICAgIH0NCiAgICB9DQogIH07DQogIA=="},{"version":3,"sources":["all_view_analysis.vue"],"names":[],"mappings":";AAkfile":"all_view_analysis.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div class=\"all_view_analysis\">\r\n        <div class=\"side\">\r\n            <SideBorder />\r\n        </div>\r\n      <!-- 信息来源占比图（饼状图） -->\r\n      <div class=\"chart-container\">\r\n        <div ref=\"sourceChart\" style=\"height: 300px;\"></div>\r\n      </div>\r\n  \r\n      <!-- 发布时间折线图 -->\r\n      <div class=\"chart-container\">\r\n        <div ref=\"timeLineChart\" style=\"height: 300px;\"></div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import echarts from 'echarts';\r\n  import SideBorder from \"../components/Side_border\";\r\n  export default {\r\n    name: \"all_view_analysis\",\r\n    components: {\r\n        SideBorder\r\n  },\r\n    props: {\r\n      results: {\r\n        type: Object,\r\n        required: true\r\n      }\r\n    },\r\n    watch: {\r\n  results(newValue) {\r\n    this.$nextTick(() => {\r\n      this.renderCharts(); // 确保在 DOM 更新后执行渲染\r\n    });\r\n  }\r\n},\r\n    methods: {\r\n      renderCharts() {\r\n        const renminCount = this.results.renmin ? this.results.renmin.length : 0;\r\n        const weiboCount = this.results.weibo ? this.results.weibo.length : 0;\r\n        const tiebaCount = this.results.tieba ? this.results.tieba.length : 0;\r\n        const total = renminCount + weiboCount + tiebaCount;\r\n  \r\n        const sourceChart = this.$echarts.init(this.$refs.sourceChart);\r\n        const sourceOption = {\r\n          title: {\r\n            text: '信息来源占比',\r\n            left: 'center',\r\n            top: 'center',\r\n            textStyle: {\r\n              fontSize: 16,\r\n              fontWeight: 'normal',\r\n              color: '#fff' \r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'item',\r\n            formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n          },\r\n          series: [\r\n            {\r\n              name: '信息来源',\r\n              type: 'pie',\r\n              radius: '50%',\r\n              data: [\r\n                { value: renminCount, name: '人民网' },\r\n                { value: weiboCount, name: '微博' },\r\n                { value: tiebaCount, name: '贴吧' }\r\n              ],\r\n              color: ['#36a2eb', '#ff6384', '#ffcc00'], \r\n              emphasis: {\r\n                itemStyle: {\r\n                  shadowBlur: 10,\r\n                  shadowOffsetX: 0,\r\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        };\r\n        sourceChart.setOption(sourceOption);\r\n  \r\n        const timeData = this.calculateTimeData();\r\n        const timeLineChart = this.$echarts.init(this.$refs.timeLineChart);\r\n        const timeLineOption = {\r\n          title: {\r\n            text: '发布时间趋势',\r\n            left: 'center',\r\n            top: 'top',\r\n            textStyle: {\r\n              color: '#fff' \r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis'\r\n          },\r\n          legend: {\r\n            data: ['人民网', '微博', '贴吧'], \r\n            top: '10%',\r\n            textStyle: {\r\n              color: '#fff' \r\n            }\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: timeData.labels,\r\n            axisLabel: {\r\n              color: '#fff'\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'value',\r\n            axisLabel: {\r\n              formatter: '{value} 条',\r\n              color: '#fff'\r\n            }\r\n          },\r\n          grid: {\r\n            top: '15%',\r\n            left: '10%',\r\n            right: '8%',\r\n            bottom: '20%'\r\n          },\r\n          series: [\r\n            {\r\n              name: '人民网',\r\n              type: 'line',\r\n              data: timeData.renmin,\r\n              smooth: true,\r\n              color: '#36a2eb'\r\n            },\r\n            {\r\n              name: '微博',\r\n              type: 'line',\r\n              data: timeData.weibo,\r\n              smooth: true,\r\n              color: '#ff6384'\r\n            },\r\n            {\r\n              name: '贴吧',\r\n              type: 'line',\r\n              data: timeData.tieba,\r\n              smooth: true,\r\n              color: '#ffcc00' \r\n            }\r\n          ]\r\n        };\r\n        timeLineChart.setOption(timeLineOption);\r\n      },\r\n  \r\n      calculateTimeData() {\r\n        const renminTimes = this.results.renmin ? this.results.renmin.map(item => item.displayTime) : [];\r\n        const weiboTimes = this.results.weibo ? this.results.weibo.map(item => item.created_at) : [];\r\n        const tiebaTimes = this.results.tieba ? this.results.tieba.map(item => item.time) : [];\r\n  \r\n        const formatToMonth = time => {\r\n          const date = new Date(time);\r\n          return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n        };\r\n  \r\n        const renminMonths = renminTimes.map(formatToMonth);\r\n        const weiboMonths = weiboTimes.map(formatToMonth);\r\n        const tiebaMonths = tiebaTimes.map(formatToMonth);\r\n  \r\n        const timeLabels = [...new Set([...renminMonths, ...weiboMonths, ...tiebaMonths])].sort();\r\n  \r\n        const renminData = timeLabels.map(label => renminMonths.filter(month => month === label).length);\r\n        const weiboData = timeLabels.map(label => weiboMonths.filter(month => month === label).length);\r\n        const tiebaData = timeLabels.map(label => tiebaMonths.filter(month => month === label).length);\r\n  \r\n        return {\r\n          labels: timeLabels,\r\n          renmin: renminData,\r\n          weibo: weiboData,\r\n          tieba: tiebaData\r\n        };\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .all_view_analysis {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #fa0808;\r\n    background-image: url('../background/0.png');\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n \r\n  </style>\r\n  "]}]}