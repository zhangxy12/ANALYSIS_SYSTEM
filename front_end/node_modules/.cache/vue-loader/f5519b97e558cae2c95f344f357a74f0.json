{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\RmAnalyze\\Origin.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\RmAnalyze\\Origin.vue","mtime":1741939074993},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1733210776367},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":1733210776030},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIGltcG9ydCBnc2FwIGZyb20gImdzYXAiOw0KICANCiAgZXhwb3J0IGRlZmF1bHQgew0KICAgIG5hbWU6ICJCdWJibGVDaGFydCIsDQogICAgZGF0YSgpIHsNCiAgICAgIHJldHVybiB7DQogICAgICAgIGJ1YmJsZXM6IFtdLA0KICAgICAgICBjb250YWluZXJXaWR0aDogMCwNCiAgICAgICAgY29udGFpbmVySGVpZ2h0OiAwDQogICAgICB9Ow0KICAgIH0sDQogICAgbWV0aG9kczogew0KICAgICAgZmV0Y2hCdWJibGVEYXRhKHRhZ1Rhc2tJZCkgew0KICAgICAgICB0aGlzLiRheGlvcy5nZXQoYC9vcmlnaW5fcm0/dGFnX3Rhc2tfaWQ9JHt0YWdUYXNrSWR9YCkudGhlbigocmVzcG9uc2UpID0+IHsNCiAgICAgICAgICB0aGlzLmNvbnRhaW5lcldpZHRoID0gdGhpcy4kcmVmcy5jb250YWluZXIub2Zmc2V0V2lkdGg7DQogICAgICAgICAgdGhpcy5jb250YWluZXJIZWlnaHQgPSB0aGlzLiRyZWZzLmNvbnRhaW5lci5vZmZzZXRIZWlnaHQ7DQogICAgICAgICAgdGhpcy5idWJibGVzID0gW107DQogICAgICAgICAgcmVzcG9uc2UuZGF0YS5kYXRhLmRhdGEuZm9yRWFjaChpdGVtID0+IHsNCiAgICAgICAgICAgIHRoaXMuYWRkQnViYmxlKGl0ZW0pOw0KICAgICAgICAgIH0pOw0KICAgICAgICAgIHRoaXMuYXBwbHlTaGFrZUFuaW1hdGlvbigpOw0KICAgICAgICB9KTsNCiAgICAgIH0sDQogICAgICBnZXRSYW5kb21Qb3NpdGlvbihtYXgpIHsNCiAgICAgICAgcmV0dXJuIE1hdGgucmFuZG9tKCkgKiBtYXg7IA0KICAgICAgfSwNCiAgICAgIGFkZEJ1YmJsZShuZXdCdWJibGUpIHsNCiAgICAgICAgY29uc3QgYmx1ZUNvbG9ycyA9IFsNCiAgICAnIzFFOTBGRicsIC8vIOmBk+Wlh+iTnQ0KICAgICcjMDBCRkZGJywgLy8g5rex5aSp6JOdDQogICAgJyM4N0NFRUInLCAvLyDlpKnok50NCiAgICAnI0FERDhFNicsIC8vIOa1heiTnQ0KICAgICcjNjQ5NUVEJywgLy8g55+i6L2m6I+K6JOdDQogICAgJyM0MTY5RTEnICAvLyDnmoflrrbok50NCiAgXTsNCiAgbmV3QnViYmxlLmNvbG9yID0gYmx1ZUNvbG9yc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBibHVlQ29sb3JzLmxlbmd0aCldOw0KICANCiAgICAgICAgY29uc3QgbWF4VHJpZXMgPSAxMDA7DQogICAgICAgIGxldCB0cmllcyA9IDA7DQogICAgICAgIGxldCB4LCB5Ow0KICAgICAgICBjb25zdCBzaXplID0gMzAgKyBuZXdCdWJibGUuY291bnQ7IC8vIOagueaNrmNvdW506LCD5pW05rCU5rOh5aSn5bCPDQogICAgICAgIGNvbnN0IG51bVNpemUgPSAxKyBuZXdCdWJibGUuY291bnQvODsgLy8g5qC55o2uY291bnTosIPmlbTlrZfkvZPlpKflsI8NCiAgICAgICAgZG8gew0KICAgICAgICAgIHggPSB0aGlzLmdldFJhbmRvbVBvc2l0aW9uKHRoaXMuY29udGFpbmVyV2lkdGggLSBzaXplKTsNCiAgICAgICAgICB5ID0gdGhpcy5nZXRSYW5kb21Qb3NpdGlvbih0aGlzLmNvbnRhaW5lckhlaWdodCAtIHNpemUpOw0KICAgICAgICAgIGxldCBvdmVybGFwID0gZmFsc2U7DQogICAgICAgICAgdGhpcy5idWJibGVzLmZvckVhY2goYnViYmxlID0+IHsNCiAgICAgICAgICAgIGNvbnN0IGR4ID0gTWF0aC5hYnMoeCAtIGJ1YmJsZS54IC0gYnViYmxlLnNpemUgLyAyKTsNCiAgICAgICAgICAgIGNvbnN0IGR5ID0gTWF0aC5hYnMoeSAtIGJ1YmJsZS55IC0gYnViYmxlLnNpemUgLyAyKTsNCiAgICAgICAgICAgIGNvbnN0IGRpc3RhbmNlID0gTWF0aC5zcXJ0KGR4ICogZHggKyBkeSAqIGR5KTsNCiAgICAgICAgICAgIGlmIChkaXN0YW5jZSA8IChidWJibGUuc2l6ZSArIHNpemUpIC8gMikgew0KICAgICAgICAgICAgICBvdmVybGFwID0gdHJ1ZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9KTsNCiAgICAgICAgICBpZiAoIW92ZXJsYXApIHsNCiAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgIH0NCiAgICAgICAgICB0cmllcysrOw0KICAgICAgICB9IHdoaWxlICh0cmllcyA8IG1heFRyaWVzKTsNCiAgICAgICAgaWYgKHRyaWVzIDwgbWF4VHJpZXMpIHsNCiAgICAgICAgICBuZXdCdWJibGUueCA9IHg7DQogICAgICAgICAgbmV3QnViYmxlLnkgPSB5Ow0KICAgICAgICAgIG5ld0J1YmJsZS5zaXplID0gc2l6ZTsNCiAgICAgICAgICBuZXdCdWJibGUubnVtU2l6ZSA9IG51bVNpemU7DQogICAgICAgICAgdGhpcy5idWJibGVzLnB1c2gobmV3QnViYmxlKTsNCiAgICAgICAgfQ0KICAgICAgfSwNCiAgICAgIGFwcGx5U2hha2VBbmltYXRpb24oKSB7DQogICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsNCiAgICAgICAgICBjb25zdCBjaXJjbGVzID0gdGhpcy4kcmVmcy5jb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLmNpcmNsZScpOw0KICAgICAgICAgIGNpcmNsZXMuZm9yRWFjaCgoY2lyY2xlKSA9PiB7DQogICAgICAgICAgICBnc2FwLmZyb21UbygNCiAgICAgICAgICAgICAgY2lyY2xlLA0KICAgICAgICAgICAgICB7IHk6IC0yIH0sDQogICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICB5OiAyLA0KICAgICAgICAgICAgICAgIGVhc2U6ICJub25lIiwNCiAgICAgICAgICAgICAgICB5b3lvOiB0cnVlLA0KICAgICAgICAgICAgICAgIHJlcGVhdDogLTEsDQogICAgICAgICAgICAgICAgZGVsYXk6IE1hdGgucmFuZG9tKCksDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICk7DQogICAgICAgICAgfSk7DQogICAgICAgIH0pOw0KICAgICAgfSwNCiAgICB9LA0KICAgIG1vdW50ZWQoKSB7DQogICAgICB0aGlzLiRidXMuJG9uKCJzZW5kX3RhZ190YXNrX2lkIiwgKHRhZ1Rhc2tJZCkgPT4gew0KICAgICAgICB0aGlzLmZldGNoQnViYmxlRGF0YSh0YWdUYXNrSWQpOw0KICAgICAgfSk7DQogICAgfSwNCiAgICBiZWZvcmVEZXN0cm95KCkgew0KICAgICAgdGhpcy4kYnVzLiRvZmYoInNlbmRfdGFnX3Rhc2tfaWQiKTsNCiAgICB9LA0KICB9Ow0KICA="},{"version":3,"sources":["Origin.vue"],"names":[],"mappings":";AAqBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Origin.vue","sourceRoot":"src/components/RmAnalyze","sourcesContent":["<template>\r\n    <div class=\"container\" ref=\"container\" style=\"height: 320px;\">\r\n      <div class=\"title-header\"><i class=\"fa fa-bell\"></i>  文章来源</div>\r\n      <div v-for=\"(item, index) in bubbles\" :key=\"index\" class=\"circle\" :style=\"{ \r\n        left: item.x + 'px', \r\n        top: item.y + 'px', \r\n        width: item.size + 'px', \r\n        height: item.size + 'px', \r\n        fontSize: item.numSize + 'px' ,\r\n        backgroundColor: item.color\r\n      }\">\r\n        <div class=\"num\">{{ item.count }}</div>\r\n        <!-- <div class=\"title-box\">\r\n          <div class=\"title\">{{ item.name }}</div>\r\n        </div> -->\r\n        <h3>{{ item.name }}</h3>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import gsap from \"gsap\";\r\n  \r\n  export default {\r\n    name: \"BubbleChart\",\r\n    data() {\r\n      return {\r\n        bubbles: [],\r\n        containerWidth: 0,\r\n        containerHeight: 0\r\n      };\r\n    },\r\n    methods: {\r\n      fetchBubbleData(tagTaskId) {\r\n        this.$axios.get(`/origin_rm?tag_task_id=${tagTaskId}`).then((response) => {\r\n          this.containerWidth = this.$refs.container.offsetWidth;\r\n          this.containerHeight = this.$refs.container.offsetHeight;\r\n          this.bubbles = [];\r\n          response.data.data.data.forEach(item => {\r\n            this.addBubble(item);\r\n          });\r\n          this.applyShakeAnimation();\r\n        });\r\n      },\r\n      getRandomPosition(max) {\r\n        return Math.random() * max; \r\n      },\r\n      addBubble(newBubble) {\r\n        const blueColors = [\r\n    '#1E90FF', // 道奇蓝\r\n    '#00BFFF', // 深天蓝\r\n    '#87CEEB', // 天蓝\r\n    '#ADD8E6', // 浅蓝\r\n    '#6495ED', // 矢车菊蓝\r\n    '#4169E1'  // 皇家蓝\r\n  ];\r\n  newBubble.color = blueColors[Math.floor(Math.random() * blueColors.length)];\r\n  \r\n        const maxTries = 100;\r\n        let tries = 0;\r\n        let x, y;\r\n        const size = 30 + newBubble.count; // 根据count调整气泡大小\r\n        const numSize = 1+ newBubble.count/8; // 根据count调整字体大小\r\n        do {\r\n          x = this.getRandomPosition(this.containerWidth - size);\r\n          y = this.getRandomPosition(this.containerHeight - size);\r\n          let overlap = false;\r\n          this.bubbles.forEach(bubble => {\r\n            const dx = Math.abs(x - bubble.x - bubble.size / 2);\r\n            const dy = Math.abs(y - bubble.y - bubble.size / 2);\r\n            const distance = Math.sqrt(dx * dx + dy * dy);\r\n            if (distance < (bubble.size + size) / 2) {\r\n              overlap = true;\r\n            }\r\n          });\r\n          if (!overlap) {\r\n            break;\r\n          }\r\n          tries++;\r\n        } while (tries < maxTries);\r\n        if (tries < maxTries) {\r\n          newBubble.x = x;\r\n          newBubble.y = y;\r\n          newBubble.size = size;\r\n          newBubble.numSize = numSize;\r\n          this.bubbles.push(newBubble);\r\n        }\r\n      },\r\n      applyShakeAnimation() {\r\n        this.$nextTick(() => {\r\n          const circles = this.$refs.container.querySelectorAll('.circle');\r\n          circles.forEach((circle) => {\r\n            gsap.fromTo(\r\n              circle,\r\n              { y: -2 },\r\n              {\r\n                y: 2,\r\n                ease: \"none\",\r\n                yoyo: true,\r\n                repeat: -1,\r\n                delay: Math.random(),\r\n              }\r\n            );\r\n          });\r\n        });\r\n      },\r\n    },\r\n    mounted() {\r\n      this.$bus.$on(\"send_tag_task_id\", (tagTaskId) => {\r\n        this.fetchBubbleData(tagTaskId);\r\n      });\r\n    },\r\n    beforeDestroy() {\r\n      this.$bus.$off(\"send_tag_task_id\");\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n .container {\r\n    width: 100%;\r\n    height: 300px;\r\n    background: #f9f9f900;\r\n    border-radius: 10px;\r\n    border: 2px solid #4aaafac3; \r\n    box-shadow: 0 0 15px rgba(233, 229, 238, 0.304), 0 0 25px rgba(63, 154, 87, 0.4); \r\n    position: relative; \r\n  }\r\n  \r\n .title-header {\r\n    font-size: 17px;\r\n    font-weight: 500;\r\n    text-align: left;\r\n    margin-bottom: 10px;\r\n    color: #ffffff;\r\n    z-index: 9;\r\n  }\r\n  \r\n .circle {\r\n    margin-top: 20px;\r\n    margin-bottom: 10px;\r\n    position: absolute;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 50%;\r\n    color: #fff;\r\n    text-align: center;\r\n  }\r\n  \r\n .num {\r\n    font-weight: bold;\r\n  }\r\n  \r\n\r\n .h3 {\r\n    font-size: 10px;\r\n    margin-top: 1px;\r\n    color: #ffffff;\r\n    text-decoration: none; \r\n    text-decoration-color: transparent;\r\n  }\r\n  \r\n  </style>"]}]}