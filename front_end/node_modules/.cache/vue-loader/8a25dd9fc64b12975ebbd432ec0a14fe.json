{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\mainscreen\\allApps.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\mainscreen\\allApps.vue","mtime":1743662519291},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":1733210776030},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOw0KaW1wb3J0ICogYXMgZWNoYXJ0cyBmcm9tICdlY2hhcnRzJzsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBzb3VyY2VEYXRhOiB7fSAvLyDlrZjlgqjku47lkI7nq6/ojrflj5bnmoTmlbDmja4NCiAgICB9Ow0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMuZmV0Y2hEYXRhKCk7DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBhc3luYyBmZXRjaERhdGEoKSB7DQogICAgICB0cnkgew0KICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgnL21haW4vYWxsX2FwcHMnKTsNCiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOw0KICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5jb2RlID09PSAwKSB7DQogICAgICAgICAgdGhpcy5zb3VyY2VEYXRhID0gcmVzcG9uc2UuZGF0YS5kYXRhOw0KICAgICAgICAgIHRoaXMuaW5pdENoYXJ0KCk7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgY29uc29sZS5lcnJvcign6K+35rGC5aSx6LSlOicsIHJlc3BvbnNlLmRhdGEubWVzc2FnZSk7DQogICAgICAgIH0NCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgIGNvbnNvbGUuZXJyb3IoJ+WPkeeUn+mUmeivrzonLCBlcnJvcik7DQogICAgICB9DQogICAgfSwNCiAgICBpbml0Q2hhcnQoKSB7DQogICAgICBjb25zdCBjaGFydCA9IGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLmJhckNoYXJ0KTsNCg0KICAgICAgLy8g5aSE55CG5pWw5o2uDQogICAgICBsZXQgZGF0YUFycmF5ID0gT2JqZWN0LmVudHJpZXModGhpcy5zb3VyY2VEYXRhKS5tYXAoKFtrZXksIHZhbHVlXSkgPT4gew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgIG5hbWU6IHRoaXMuZ2V0Q2hpbmVzZU5hbWUoa2V5KSwNCiAgICAgICAgICB2YWx1ZTogdmFsdWUNCiAgICAgICAgfTsNCiAgICAgIH0pOw0KDQogICAgICAvLyDku47lpKfliLDlsI/mjpLluo8NCiAgICAgIGRhdGFBcnJheS5zb3J0KChhLCBiKSA9PiBhLnZhbHVlIC0gYi52YWx1ZSk7DQoNCiAgICAgIGNvbnN0IGNhdGVnb3JpZXMgPSBkYXRhQXJyYXkubWFwKGl0ZW0gPT4gaXRlbS5uYW1lKTsNCiAgICAgIGNvbnN0IHZhbHVlcyA9IGRhdGFBcnJheS5tYXAoaXRlbSA9PiBpdGVtLnZhbHVlKTsNCg0KICAgICAgLy8g5a6a5LmJ5Zub5LiqIGFwcCDnmoTkuI3lkIzpopzoibINCiAgICAgIGNvbnN0IGNvbG9ycyA9IFsnIzFmNzhiNCcsICcjNmJhZWQ2JywgJyM5ZWNhZTEnLCAnI2M2ZGJlZiddOw0KDQogICAgICBjb25zdCBvcHRpb24gPSB7DQogICAgICAgIC8vIHRpdGxlOiB7DQogICAgICAgIC8vICAgdGV4dDogJ+WkmuW5s+WPsOadpea6kOe7n+iuoScsDQogICAgICAgIC8vICAgdG9wOiAnMTBweCcsDQogICAgICAgIC8vICAgbGVmdDogJ2NlbnRlcicsDQogICAgICAgIC8vICAgdGV4dFN0eWxlOiB7DQogICAgICAgIC8vICAgICBjb2xvcjogJyNmZmYnLA0KICAgICAgICAvLyAgICAgZm9udFNpemU6IDE2LA0KICAgICAgICAvLyAgICAgZm9udFdlaWdodDogJ2JvbGQnDQogICAgICAgIC8vICAgfQ0KICAgICAgICAvLyB9LA0KICAgICAgICB0b29sdGlwOiB7DQogICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLA0KICAgICAgICAgIGF4aXNQb2ludGVyOiB7DQogICAgICAgICAgICB0eXBlOiAnc2hhZG93Jw0KICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgZ3JpZDogew0KICAgICAgICAgIGxlZnQ6ICczJScsDQogICAgICAgICAgcmlnaHQ6ICc0JScsDQogICAgICAgICAgYm90dG9tOiAnNSUnLA0KICAgICAgICAgIHRvcDonNyUnLA0KICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZSwNCiAgICAgICAgICBzaG93OiBmYWxzZSAvLyDkuI3mmL7npLrnvZHmoLwNCiAgICAgICAgfSwNCiAgICAgICAgeEF4aXM6IHsNCiAgICAgICAgICB0eXBlOiAndmFsdWUnLA0KICAgICAgICAgIGF4aXNMYWJlbDogew0KICAgICAgICAgICAgc2hvdzogZmFsc2UgLy8g5LiN5pi+56S65qiq5Z2Q5qCH5pWw5a2XDQogICAgICAgICAgfSwNCiAgICAgICAgICBheGlzTGluZTogew0KICAgICAgICAgICAgc2hvdzogZmFsc2UgLy8g5LiN5pi+56S65qiq5Z2Q5qCH6L2057q/DQogICAgICAgICAgfSwNCiAgICAgICAgICBzcGxpdExpbmU6IHsNCiAgICAgICAgICAgIHNob3c6IGZhbHNlIC8vIOS4jeaYvuekuue9keagvOe6vw0KICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgeUF4aXM6IHsNCiAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLA0KICAgICAgICAgIGRhdGE6IGNhdGVnb3JpZXMsDQogICAgICAgICAgYXhpc0xhYmVsOiB7DQogICAgICAgICAgICBjb2xvcjogJyNmZmYnDQogICAgICAgICAgfSwNCiAgICAgICAgICBheGlzTGluZTogew0KICAgICAgICAgICAgbGluZVN0eWxlOiB7DQogICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9LA0KICAgICAgICAgIHNwbGl0TGluZTogew0KICAgICAgICAgICAgc2hvdzogZmFsc2UgLy8g5LiN5pi+56S6572R5qC857q/DQogICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBzZXJpZXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICBuYW1lOiAn5p2l5rqQ5pWw6YePJywNCiAgICAgICAgICAgIHR5cGU6ICdiYXInLA0KICAgICAgICAgICAgYmFyV2lkdGg6IDEyLCAvLyDosIPmlbTmnaHlvaLlm77nmoTlrr3luqbvvIzkvb/lhbbmm7Tnu4YNCiAgICAgICAgICAgIGJvcmRlckNvbG9yOiAnI2ZmZmZmZicsDQogICAgICAgICAgICBib3JkZXJXaWR0aDogMSwNCiAgICAgICAgICAgIHRvcDonMCcsDQogICAgICAgICAgICBkYXRhOiB2YWx1ZXMsDQogICAgICAgICAgICBjZW50ZXI6IFsnNTAlJywgJzUwJSddLCAvLyDlm77ooajlsYXkuK0NCiAgICAgICAgICAgIGl0ZW1TdHlsZTogew0KICAgICAgICAgICAgICBjb2xvcjogKHBhcmFtcykgPT4gY29sb3JzW3BhcmFtcy5kYXRhSW5kZXggJSBjb2xvcnMubGVuZ3RoXSwNCiAgICAgICAgICAgICAgc2hhZG93Qmx1cjogMTAsDQogICAgICAgICAgICAgICAgc2hhZG93Q29sb3I6ICdyZ2JhKDAsIDI1NSwgMjU1LCAwLjgpJywgLy8g5Y+R5YWJ5pWI5p6cDQogICAgICAgICAgICAgICAgYmFyQm9yZGVyUmFkaXVzOiBbMiwgNSwgNSwgMl0gLy8g6K6+572u5p2h5b2i55qE5Zub5Liq6KeS55qE5ZyG6KeS5Y2K5b6E77yM5pWw5YC86LaK5aSn6LaK5ZyGDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgbGFiZWw6IHsNCiAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwNCiAgICAgICAgICAgICAgcG9zaXRpb246ICdyaWdodCcsDQogICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIF0NCiAgICAgIH07DQoNCiAgICAgIGNoYXJ0LnNldE9wdGlvbihvcHRpb24pOw0KICAgIH0sDQogICAgZ2V0Q2hpbmVzZU5hbWUoa2V5KSB7DQogICAgICBzd2l0Y2ggKGtleSkgew0KICAgICAgICBjYXNlICd3ZWNoYXQnOg0KICAgICAgICAgIHJldHVybiAn5b6u5L+hJzsNCiAgICAgICAgY2FzZSAnd2VpYm8nOg0KICAgICAgICAgIHJldHVybiAn5b6u5Y2aJzsNCiAgICAgICAgY2FzZSAncmVubWluJzoNCiAgICAgICAgICByZXR1cm4gJ+S6uuawkee9kSc7DQogICAgICAgIGNhc2UgJ3RpZWJhJzoNCiAgICAgICAgICByZXR1cm4gJ+i0tOWQpyc7DQogICAgICAgIGRlZmF1bHQ6DQogICAgICAgICAgcmV0dXJuIGtleTsNCiAgICAgIH0NCiAgICB9DQogIH0NCn07DQo="},{"version":3,"sources":["allApps.vue"],"names":[],"mappingsfile":"allApps.vue","sourceRoot":"src/components/mainscreen","sourcesContent":["<template>\r\n  <div>\r\n    <h2><svg t=\"1741847536282\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"13774\" width=\"16\" height=\"16\"><path d=\"M496.64 870.4c-98.816 0-185.856-13.824-245.76-39.424-68.608-25.6-107.52-65.536-107.52-109.056V316.928c0-22.528 9.216-44.032 27.648-62.464 17.92-18.944 44.032-35.328 79.872-51.2 59.392-25.6 146.944-39.424 245.76-39.424s186.368 13.824 245.76 39.424l3.072 1.024c34.816 15.36 59.904 31.744 77.312 49.152 18.432 18.944 27.648 39.936 27.648 62.464V721.92c0 41.472-39.936 81.92-107.52 109.056-59.904 25.6-147.456 39.424-246.272 39.424z m-300.032-153.088c0 13.312 7.68 26.624 23.04 38.4 15.872 12.288 39.424 23.04 69.12 31.232 67.584 19.456 140.288 30.208 206.336 30.208h1.536c80.896 0 158.208-11.264 207.36-30.208 30.208-10.752 53.248-22.528 69.632-34.816 15.36-11.776 23.04-23.552 23.04-34.816v-57.856l-9.216 4.608c-36.352 18.432-65.024 32.768-111.104 44.544-64 14.848-124.416 22.016-183.808 22.016-58.368 0-123.904-8.192-179.712-22.016-40.96-11.264-70.144-25.6-103.424-43.008l-12.288-6.144-0.512 57.856z m0-139.264c0 13.312 7.68 26.624 23.04 38.4 15.872 12.288 39.424 23.04 69.12 31.232 68.608 19.456 142.336 30.208 207.872 30.208 68.608 0 145.92-11.264 207.872-30.208h0.512c29.696-8.704 52.736-18.944 68.608-31.232 15.36-11.776 23.04-24.576 23.04-38.4v-57.856c-4.096 2.048-7.68 4.096-11.264 5.632-35.328 17.92-63.488 32.256-104.448 43.52-64 14.848-124.416 22.016-183.808 22.016-59.904 0-120.32-7.168-183.808-22.016-41.472-11.264-69.12-25.6-104.448-43.52-3.584-2.048-7.68-3.584-11.264-5.632l-1.024 57.856z m92.672-69.632c68.096 19.456 141.824 30.208 207.872 30.208 68.608 0 145.92-11.264 207.872-30.208 68.096-24.576 92.672-49.664 92.672-65.024v-45.056c-11.776 5.12-23.04 10.24-33.28 15.36-25.6 12.288-50.176 24.064-82.944 30.208-64 14.848-123.904 22.016-183.808 22.016s-119.808-7.168-183.808-22.016c-32.768-6.144-56.832-17.92-82.944-30.208-10.752-5.12-21.504-10.24-33.792-15.36v40.96c0 11.264 7.68 23.04 23.04 34.816s38.912 23.552 69.12 34.304zM496.64 217.088c-81.408 0-151.552 10.24-203.264 30.208-58.88 20.992-92.672 46.592-92.672 69.632 0 11.776 7.68 23.552 21.504 34.304 15.872 12.288 39.936 22.528 70.656 30.72C358.4 407.04 439.808 412.16 496.64 412.16c79.36 0 153.088-10.752 203.264-30.208 30.72-8.192 54.784-18.432 70.656-30.72 13.824-10.752 21.504-22.528 21.504-34.304 0-11.264-7.68-23.04-23.04-34.816-15.872-12.288-39.424-24.064-69.632-34.816-59.904-18.944-137.728-30.208-202.752-30.208z\" p-id=\"13775\" fill=\"#ffffff\"></path></svg>   多平台来源统计（千）</h2>\r\n  \r\n  <div class=\"bar-chart-container\">\r\n    \r\n    <div ref=\"barChart\" style=\"width: 100%; height: 150px; position: relative;\"></div>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      sourceData: {} // 存储从后端获取的数据\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchData();\r\n  },\r\n  methods: {\r\n    async fetchData() {\r\n      try {\r\n        const response = await axios.get('/main/all_apps');\r\n        console.log(response);\r\n        if (response.data.code === 0) {\r\n          this.sourceData = response.data.data;\r\n          this.initChart();\r\n        } else {\r\n          console.error('请求失败:', response.data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error('发生错误:', error);\r\n      }\r\n    },\r\n    initChart() {\r\n      const chart = echarts.init(this.$refs.barChart);\r\n\r\n      // 处理数据\r\n      let dataArray = Object.entries(this.sourceData).map(([key, value]) => {\r\n        return {\r\n          name: this.getChineseName(key),\r\n          value: value\r\n        };\r\n      });\r\n\r\n      // 从大到小排序\r\n      dataArray.sort((a, b) => a.value - b.value);\r\n\r\n      const categories = dataArray.map(item => item.name);\r\n      const values = dataArray.map(item => item.value);\r\n\r\n      // 定义四个 app 的不同颜色\r\n      const colors = ['#1f78b4', '#6baed6', '#9ecae1', '#c6dbef'];\r\n\r\n      const option = {\r\n        // title: {\r\n        //   text: '多平台来源统计',\r\n        //   top: '10px',\r\n        //   left: 'center',\r\n        //   textStyle: {\r\n        //     color: '#fff',\r\n        //     fontSize: 16,\r\n        //     fontWeight: 'bold'\r\n        //   }\r\n        // },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '5%',\r\n          top:'7%',\r\n          containLabel: true,\r\n          show: false // 不显示网格\r\n        },\r\n        xAxis: {\r\n          type: 'value',\r\n          axisLabel: {\r\n            show: false // 不显示横坐标数字\r\n          },\r\n          axisLine: {\r\n            show: false // 不显示横坐标轴线\r\n          },\r\n          splitLine: {\r\n            show: false // 不显示网格线\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: categories,\r\n          axisLabel: {\r\n            color: '#fff'\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#fff'\r\n            }\r\n          },\r\n          splitLine: {\r\n            show: false // 不显示网格线\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: '来源数量',\r\n            type: 'bar',\r\n            barWidth: 12, // 调整条形图的宽度，使其更细\r\n            borderColor: '#ffffff',\r\n            borderWidth: 1,\r\n            top:'0',\r\n            data: values,\r\n            center: ['50%', '50%'], // 图表居中\r\n            itemStyle: {\r\n              color: (params) => colors[params.dataIndex % colors.length],\r\n              shadowBlur: 10,\r\n                shadowColor: 'rgba(0, 255, 255, 0.8)', // 发光效果\r\n                barBorderRadius: [2, 5, 5, 2] // 设置条形的四个角的圆角半径，数值越大越圆\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: 'right',\r\n              color: '#fff'\r\n            }\r\n          }\r\n        ]\r\n      };\r\n\r\n      chart.setOption(option);\r\n    },\r\n    getChineseName(key) {\r\n      switch (key) {\r\n        case 'wechat':\r\n          return '微信';\r\n        case 'weibo':\r\n          return '微博';\r\n        case 'renmin':\r\n          return '人民网';\r\n        case 'tieba':\r\n          return '贴吧';\r\n        default:\r\n          return key;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh2 {\r\n    text-align: center;\r\n    font-size: 18px;\r\n    color: #f2f2f2;\r\n    margin-bottom: 0px;\r\n}\r\n\r\n.bar-chart-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #03040900; /* 深色背景 */\r\n  padding: 2px;\r\n  box-sizing: border-box;\r\n}\r\n</style>"]}]}