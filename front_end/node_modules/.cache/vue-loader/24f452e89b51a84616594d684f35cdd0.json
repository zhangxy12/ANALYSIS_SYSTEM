{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\blog_detail\\cloud_graph.vue?vue&type=style&index=0&id=0c2e61cc&prod&scoped=true&lang=css","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\blog_detail\\cloud_graph.vue","mtime":1732591735650},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\css-loader\\dist\\cjs.js","mtime":1733210773580},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1733210773701},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\postcss-loader\\src\\index.js","mtime":1733210773504},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY2xvdWRfZ3JhcGggew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDE4JTsNCiAgdG9wOiAxJTsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsNCn0NCi5jbG91ZF9ncmFwaF90aXRsZSB7DQogIG1hcmdpbjogMTBweCAyMHB4Ow0KICBwYWRkaW5nOiA1cHg7DQogIGZvbnQtd2VpZ2h0OiA2MDA7DQogIGxldHRlci1zcGFjaW5nOiAxcHg7DQp9DQojZ3JhcGhfd29yZF9jbG91ZCB7DQogIHdpZHRoOiA1MDBweDsNCiAgaGVpZ2h0OiAxMjBweDsNCiAgdG9wOiAtMzBweDsNCiAgcmlnaHQ6IDEwcHg7DQp9DQo="},{"version":3,"sources":["cloud_graph.vue"],"names":[],"mappings":";AA0FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cloud_graph.vue","sourceRoot":"src/components/blog_detail","sourcesContent":["<template>\r\n  <div class=\"cloud_graph\">\r\n    <div class=\"cloud_graph_title\">云图</div>\r\n    <div id=\"graph_word_cloud\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"word_cloud\",\r\n  data() {\r\n    return {\r\n      timer: \"\",\r\n      myChart: \"\",\r\n      cloud_graph_data: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    getCloudGraph() {\r\n      let query = this.$route.query;\r\n      this.$axios.get(\"comment/cloud?tag_task_id=\"+query.tag_task_id+\"&weibo_id=\"+query.weibo_id).then((res) => {\r\n        this.cloud_graph_data = res.data.data.data;\r\n        console.log(res.data.data.data)\r\n      });\r\n    },\r\n    myWordCloud() {\r\n      let option;\r\n      if (\r\n        this.myChart != null &&\r\n        this.myChart != \"\" &&\r\n        this.myChart != undefined\r\n      ) {\r\n        this.myChart.dispose(); //解决echarts dom已经加载的报错\r\n      }\r\n      // 基于准备好的dom，初始化echarts实例\r\n      this.myChart = this.$echarts.init(\r\n        document.getElementById(\"graph_word_cloud\")\r\n      );\r\n      // 指定图表的配置项和数据\r\n      option = {\r\n        tooltip: {\r\n          show: true,\r\n        },\r\n        series: [\r\n          {\r\n            type: \"wordCloud\",\r\n            sizeRange: [10, 50], //文字范围\r\n            //文本旋转范围，文本将通过rotationStep45在[-90,90]范围内随机旋转\r\n            rotationRange: [-45, 90],\r\n            rotationStep: 45,\r\n            textRotation: [0, 45, 90, -45],\r\n            //形状\r\n            shape: \"cardioid \",\r\n            textStyle: {\r\n              color: function () {\r\n                //文字颜色的随机色\r\n                return (\r\n                  \"rgb(\" +\r\n                  [\r\n                    Math.round(Math.random() * 200),\r\n                    Math.round(Math.random() * 100),\r\n                    Math.round(Math.random() * 300),\r\n                  ].join(\",\") +\r\n                  \")\"\r\n                );\r\n              },\r\n            },\r\n            data: this.cloud_graph_data,\r\n          },\r\n        ],\r\n      };\r\n      this.myChart.setOption(option);\r\n      // 使用刚指定的配置项和数据显示图表。\r\n      option && this.myChart.setOption(option);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getCloudGraph();\r\n    this.timer = setInterval(() => {\r\n      this.myWordCloud();\r\n    }, 5000);\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.timer);\r\n    this.timer = null;\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.cloud_graph {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 18%;\r\n  top: 1%;\r\n  background-color: #fff;\r\n}\r\n.cloud_graph_title {\r\n  margin: 10px 20px;\r\n  padding: 5px;\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n}\r\n#graph_word_cloud {\r\n  width: 500px;\r\n  height: 120px;\r\n  top: -30px;\r\n  right: 10px;\r\n}\r\n</style>"]}]}