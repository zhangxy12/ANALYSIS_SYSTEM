{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\wbAnalyze\\Relation_graph.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\wbAnalyze\\Relation_graph.vue","mtime":1743680184439},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":1733210776030},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJyZWxhdGlvbl9ncmFwaCIsDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGNhdGVnb3JpZXM6IFsNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICIgICAiLA0KICAgICAgICAgIGNvbG9yOiAiIzAwRkZGRiIsDQogICAgICAgIH0sDQogICAgICAgIC8vIHsNCiAgICAgICAgLy8gICBuYW1lOiAi5rC05YabIiwNCiAgICAgICAgLy8gfSwNCiAgICAgIF0sDQogICAgfTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIG15UmVsYXRpb25HcmFwaChpZCkgew0KICAgICAgbGV0IG9wdGlvbjsNCiAgICAgIGxldCBteUNoYXJ0ID0gdGhpcy4kZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzaG93X2dyYXBoIikpOw0KICAgICAgbXlDaGFydC5zaG93TG9hZGluZygpOw0KICAgICAgdGhpcy4kYXhpb3MuZ2V0KCJyZWxhdGlvbl9ncmFwaD90YWdfdGFza19pZD0iICsgaWQpLnRoZW4oKHJlcykgPT4gew0KICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YS5kYXRhKTsNCiAgICAgICAgbGV0IG5vZGVzID0gcmVzLmRhdGEuZGF0YS5ub2Rlc19saXN0Ow0KICAgICAgICBmb3IgKGxldCBpbmRleCBpbiBub2Rlcykgew0KICAgICAgICAgIG5vZGVzW2luZGV4XS5pZCA9IGluZGV4Ow0KICAgICAgICB9DQogICAgICAgIGxldCBsaW5rcyA9IHJlcy5kYXRhLmRhdGEubGlua3NfbGlzdDsNCiAgICAgICAgbGlua3MuZm9yRWFjaCgobGluaykgPT4gew0KICAgICAgICAgIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHsNCiAgICAgICAgICAgIGlmIChsaW5rLnNvdXJjZSA9PSBub2RlLm5hbWUpIHsNCiAgICAgICAgICAgICAgbGluay5zb3VyY2UgPSBub2RlLmlkOw0KICAgICAgICAgICAgICBub2RlLnNob3cgPSB0cnVlOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgaWYgKGxpbmsudGFyZ2V0ID09IG5vZGUubmFtZSkgew0KICAgICAgICAgICAgICBsaW5rLnRhcmdldCA9IG5vZGUuaWQ7DQogICAgICAgICAgICAgIG5vZGUuc2hvdyA9IHRydWU7DQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KICAgICAgICB9KTsNCiAgICAgICAgbGV0IG5ld05vZGVzID0gW107DQogICAgICAgIGZvciAobGV0IG4gaW4gbm9kZXMpIHsNCiAgICAgICAgICBpZiAobm9kZXNbbl0uc2hvdykgew0KICAgICAgICAgICAgbmV3Tm9kZXMucHVzaChub2Rlc1tuXSk7DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGNvbnNvbGUubG9nKG5ld05vZGVzKTsNCiAgICAgICAgY29uc29sZS5sb2cobGlua3MpOw0KICAgICAgICBteUNoYXJ0LmhpZGVMb2FkaW5nKCk7DQogICAgICAgIG5vZGVzLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHsNCiAgICAgICAgICBub2RlLmxhYmVsID0gew0KICAgICAgICAgICAgc2hvdzogbm9kZS52YWx1ZSA+IDEwLA0KICAgICAgICAgICAgY29sb3I6ICcjZmZmZmZmJywNCiAgICAgICAgICB9Ow0KICAgICAgICB9KTsNCiAgICAgICAgb3B0aW9uID0gew0KICAgICAgICAgIC8vIHRpdGxlOiB7DQogICAgICAgICAgLy8gICB0ZXh0OiAi55So5oi35YWz57O75Zu+IiwNCiAgICAgICAgICAvLyAgIHRvcDogInRvcCIsDQogICAgICAgICAgLy8gICBsZWZ0OiAibGVmdCIsDQogICAgICAgICAgLy8gfSwNCiAgICAgICAgICB0b29sdGlwOiB7fSwNCiAgICAgICAgICBsZWdlbmQ6IFsNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgZGF0YTogdGhpcy5jYXRlZ29yaWVzLm1hcChmdW5jdGlvbiAoYSkgew0KICAgICAgICAgICAgICAgIHJldHVybiBhLm5hbWU7DQogICAgICAgICAgICAgIH0pLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICBdLA0KICAgICAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiAxNTAwLA0KICAgICAgICAgIGFuaW1hdGlvbkVhc2luZ1VwZGF0ZTogInF1aW50aWNJbk91dCIsDQogICAgICAgICAgc2VyaWVzOiBbDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgIG5hbWU6ICLnlKjmiLflhbPns7vlm74iLA0KICAgICAgICAgICAgICB0eXBlOiAiZ3JhcGgiLA0KICAgICAgICAgICAgICBsYXlvdXQ6ICJmb3JjZSIsDQogICAgICAgICAgICAgIGRhdGE6IG5ld05vZGVzLA0KICAgICAgICAgICAgICBsaW5rczogbGlua3MsDQogICAgICAgICAgICAgIGNhdGVnb3JpZXM6IHRoaXMuY2F0ZWdvcmllcywNCiAgICAgICAgICAgICAgcm9hbTogdHJ1ZSwNCiAgICAgICAgICAgICAgbGFiZWw6IHsNCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogInJpZ2h0IiwNCiAgICAgICAgICAgICAgICBmb3JtYXR0ZXI6ICJ7Yn0iLA0KICAgICAgICAgICAgICAgIGNvbG9yOiAiI2ZmZmZmZiIsIC8vIOiuvue9ruagh+etvuaWh+Wtl+S4uueZveiJsg0KICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICBsaW5lU3R5bGU6IHsNCiAgICAgICAgICAgICAgICBjb2xvcjogIiMwMEZGRkYiLCAvLyDpnZLoibLnmoTnur/mnaHpopzoibINCiAgICAgICAgICAgICAgICBjdXJ2ZW5lc3M6IDAuMywNCiAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgZW1waGFzaXM6IHsNCiAgICAgICAgICAgICAgICBmb2N1czogImFkamFjZW5jeSIsDQogICAgICAgICAgICAgICAgbGluZVN0eWxlOiB7DQogICAgICAgICAgICAgICAgICB3aWR0aDogMTAsDQogICAgICAgICAgICAgICAgICBjb2xvcjogIiMwMEZGRkYiLA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgbm9kZVN0eWxlOiB7DQogICAgICAgICAgICAgICAgICBjb2xvcjogIiMwMEZGRkYiLCAvLyDpnZLoibLnmoTnur/mnaHpopzoibINCiAgICAgICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAzLA0KICAgICAgICAgICAgICAgICAgc2hhZG93Qmx1cjogMjAsDQogICAgICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogJ3JnYmEoMCwwLDAsMC4zKScsIC8vIOWinuWKoOmYtOW9seaViOaenA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgaXRlbVN0eWxlOiB7DQogICAgICAgICAgICAgICAgY29sb3I6ICIjMDBGRkZGIiwgLy8g6Z2S6Imy55qE6IqC54K56aKc6ImyDQogICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgIH0sDQogICAgICAgICAgICB9LA0KICAgICAgICAgIF0sDQogICAgICAgIH07DQogICAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7DQogICAgICB9KTsNCiAgICAgIG9wdGlvbiAmJiBteUNoYXJ0LnNldE9wdGlvbihvcHRpb24pOw0KICAgIH0sDQogICAgVG9QZXJzb25MaXN0KCkgew0KICAgICAgdGhpcy4kcm91dGVyLnB1c2goew0KICAgICAgICBwYXRoOiAiL3BlcnNvbl9saXN0IiwNCiAgICAgICAgcXVlcnk6IHsNCiAgICAgICAgICB0YWdfdGFza19pZDogdGhpcy50aWQsDQogICAgICAgIH0sDQogICAgICB9KTsNCiAgICB9LA0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIGxldCByZXMgPSBBcnJheS5mcm9tKG5ldyBBcnJheSg1KSwgKCkgPT4gW10pOw0KICAgIGNvbnNvbGUubG9nKHJlcyk7DQogICAgdGhpcy4kYnVzLiRvbigic2VuZF90YWdfdGFza19pZCIsICh0YWdfdGFza19pZCkgPT4gew0KICAgICAgY29uc29sZS5sb2coIui/memHjOaYr+WFs+ezu+Wbvue7hOS7tizmlLbliLDkuobmlbDmja46IiwgdGFnX3Rhc2tfaWQpOw0KICAgICAgdGhpcy50aWQgPSB0YWdfdGFza19pZDsNCiAgICAgIHRoaXMubXlSZWxhdGlvbkdyYXBoKHRhZ190YXNrX2lkKTsNCiAgICB9KTsNCiAgfSwNCiAgYmVmb3JlRGVzdHJveSgpIHsNCiAgICB0aGlzLiRidXMuJG9mZigic2VuZF90YWdfdGFza19pZCIpOw0KICB9LA0KfTsNCg=="},{"version":3,"sources":["Relation_graph.vue"],"names":[],"mappings":";AAafile":"Relation_graph.vue","sourceRoot":"src/components/wbAnalyze","sourcesContent":["<template>\r\n  <div class=\"relation_graph\" style=\"height: 100%;\">\r\n    <div class=\"relation_graph_top\" @click=\"ToPersonList\">\r\n      <svg class=\"icon\" aria-hidden=\"true\">\r\n        <use xlink:href=\"#icon-wangluoguanxitu\"></use>\r\n      </svg>\r\n      <span>关系图</span>\r\n    </div>\r\n    <div id=\"show_graph\" style=\" height: 250px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"relation_graph\",\r\n  data() {\r\n    return {\r\n      categories: [\r\n        {\r\n          name: \"   \",\r\n          color: \"#00FFFF\",\r\n        },\r\n        // {\r\n        //   name: \"水军\",\r\n        // },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    myRelationGraph(id) {\r\n      let option;\r\n      let myChart = this.$echarts.init(document.getElementById(\"show_graph\"));\r\n      myChart.showLoading();\r\n      this.$axios.get(\"relation_graph?tag_task_id=\" + id).then((res) => {\r\n        console.log(res.data.data);\r\n        let nodes = res.data.data.nodes_list;\r\n        for (let index in nodes) {\r\n          nodes[index].id = index;\r\n        }\r\n        let links = res.data.data.links_list;\r\n        links.forEach((link) => {\r\n          for (let node of nodes) {\r\n            if (link.source == node.name) {\r\n              link.source = node.id;\r\n              node.show = true;\r\n            }\r\n            if (link.target == node.name) {\r\n              link.target = node.id;\r\n              node.show = true;\r\n            }\r\n          }\r\n        });\r\n        let newNodes = [];\r\n        for (let n in nodes) {\r\n          if (nodes[n].show) {\r\n            newNodes.push(nodes[n]);\r\n          }\r\n        }\r\n        console.log(newNodes);\r\n        console.log(links);\r\n        myChart.hideLoading();\r\n        nodes.forEach(function (node) {\r\n          node.label = {\r\n            show: node.value > 10,\r\n            color: '#ffffff',\r\n          };\r\n        });\r\n        option = {\r\n          // title: {\r\n          //   text: \"用户关系图\",\r\n          //   top: \"top\",\r\n          //   left: \"left\",\r\n          // },\r\n          tooltip: {},\r\n          legend: [\r\n            {\r\n              data: this.categories.map(function (a) {\r\n                return a.name;\r\n              }),\r\n            },\r\n          ],\r\n          animationDuration: 1500,\r\n          animationEasingUpdate: \"quinticInOut\",\r\n          series: [\r\n            {\r\n              name: \"用户关系图\",\r\n              type: \"graph\",\r\n              layout: \"force\",\r\n              data: newNodes,\r\n              links: links,\r\n              categories: this.categories,\r\n              roam: true,\r\n              label: {\r\n                position: \"right\",\r\n                formatter: \"{b}\",\r\n                color: \"#ffffff\", // 设置标签文字为白色\r\n              },\r\n              lineStyle: {\r\n                color: \"#00FFFF\", // 青色的线条颜色\r\n                curveness: 0.3,\r\n              },\r\n              emphasis: {\r\n                focus: \"adjacency\",\r\n                lineStyle: {\r\n                  width: 10,\r\n                  color: \"#00FFFF\",\r\n                },\r\n                nodeStyle: {\r\n                  color: \"#00FFFF\", // 青色的线条颜色\r\n                  borderWidth: 3,\r\n                  shadowBlur: 20,\r\n                  shadowColor: 'rgba(0,0,0,0.3)', // 增加阴影效果\r\n                },\r\n                itemStyle: {\r\n                color: \"#00FFFF\", // 青色的节点颜色\r\n              },\r\n              },\r\n            },\r\n          ],\r\n        };\r\n        myChart.setOption(option);\r\n      });\r\n      option && myChart.setOption(option);\r\n    },\r\n    ToPersonList() {\r\n      this.$router.push({\r\n        path: \"/person_list\",\r\n        query: {\r\n          tag_task_id: this.tid,\r\n        },\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    let res = Array.from(new Array(5), () => []);\r\n    console.log(res);\r\n    this.$bus.$on(\"send_tag_task_id\", (tag_task_id) => {\r\n      console.log(\"这里是关系图组件,收到了数据:\", tag_task_id);\r\n      this.tid = tag_task_id;\r\n      this.myRelationGraph(tag_task_id);\r\n    });\r\n  },\r\n  beforeDestroy() {\r\n    this.$bus.$off(\"send_tag_task_id\");\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.relation_graph_top {\r\n  margin-top: 0px;\r\n}\r\n\r\n.relation_graph {\r\n  border: 2px solid #fefeff6a; /* 深色边框 */\r\n  border-radius: 10px;\r\n  background-color:rgba(254, 254, 255, 0);\r\n  position: relative;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n  /* margin-bottom: 5px; */\r\n  cursor: pointer; /* 改变鼠标指针为手形 */\r\n  color: #ffffff;\r\n  border: 2px solid #669ef3a5; /* 深色边框 */\r\n  border-radius: 10px;\r\n  \r\n  box-sizing: border-box;\r\n  background:rgba(52, 110, 173, 0); /* 背景颜色 */\r\n  box-shadow: 0 0 15px rgba(233, 229, 238, 0.304), 0 0 25px rgba(63, 154, 87, 0.4); /* 外阴影 */\r\n}\r\n\r\n.relation_graph:hover {\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* 鼠标悬浮时加上阴影效果 */\r\n}\r\n\r\n#show_graph {\r\n  height: 90%;\r\n  width: 90%;\r\n  \r\n}\r\n</style>\r\n"]}]}