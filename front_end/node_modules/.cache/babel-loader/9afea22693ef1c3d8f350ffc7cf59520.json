{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\pages\\all_view.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\pages\\all_view.vue","mtime":1741770715104},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\babel.config.js","mtime":1732591727371},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1733210776367},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":1733210776030},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnNldC5kaWZmZXJlbmNlLnYyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc2V0LmludGVyc2VjdGlvbi52Mi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnNldC5pcy1kaXNqb2ludC1mcm9tLnYyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc2V0LmlzLXN1YnNldC1vZi52Mi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnNldC5pcy1zdXBlcnNldC1vZi52Mi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnNldC5zeW1tZXRyaWMtZGlmZmVyZW5jZS52Mi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnNldC51bmlvbi52Mi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5pdGVyYXRvci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5pdGVyYXRvci5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQuaXRlcmF0b3IuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQuaXRlcmF0b3IubWFwLmpzIjsKaW1wb3J0IFNpZGVCb3JkZXIgZnJvbSAiLi4vY29tcG9uZW50cy9TaWRlX2JvcmRlciI7CmltcG9ydCAqIGFzIGVjaGFydHMgZnJvbSAnZWNoYXJ0cyc7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAic2VhcmNoIiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAga2V5X3dvcmQ6ICIiLAogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgLy8g5o6n5Yi25Yqg6L2954q25oCBCiAgICAgIHNlYXJjaFJlc3VsdDogdHJ1ZSwKICAgICAgcmVzdWx0czoge30sCiAgICAgIHNob3dBbmFseXNpczogZmFsc2UsCiAgICAgIC8vIOeUqOadpeaOp+WItuWbvuihqOeahOaYvuekugogICAgICB0aW1lRmlsdGVyczogW3sKICAgICAgICBsYWJlbDogJ+S4gOWRqOWGhScsCiAgICAgICAgdmFsdWU6ICd3ZWVrJwogICAgICB9LCB7CiAgICAgICAgbGFiZWw6ICfkuIDkuKrmnIjlhoUnLAogICAgICAgIHZhbHVlOiAnbW9udGgnCiAgICAgIH0sIHsKICAgICAgICBsYWJlbDogJ+S4gOW5tOWGhScsCiAgICAgICAgdmFsdWU6ICd5ZWFyJwogICAgICB9XSwKICAgICAgc2VudGltZW50RmlsdGVyczogW3sKICAgICAgICBsYWJlbDogJ+enr+aegScsCiAgICAgICAgdmFsdWU6ICdwb3NpdGl2ZScKICAgICAgfSwgewogICAgICAgIGxhYmVsOiAn5Lit5oCnJywKICAgICAgICB2YWx1ZTogJ25ldXRyYWwnCiAgICAgIH0sIHsKICAgICAgICBsYWJlbDogJ+a2iOaegScsCiAgICAgICAgdmFsdWU6ICduZWdhdGl2ZScKICAgICAgfV0sCiAgICAgIHNvdXJjZUZpbHRlcnM6IFt7CiAgICAgICAgbGFiZWw6ICflvq7ljZonLAogICAgICAgIHZhbHVlOiAnd2VpYm8nCiAgICAgIH0sIHsKICAgICAgICBsYWJlbDogJ+S6uuawkee9kScsCiAgICAgICAgdmFsdWU6ICdyZW5taW4nCiAgICAgIH0sIHsKICAgICAgICBsYWJlbDogJ+W+ruS/oScsCiAgICAgICAgdmFsdWU6ICd3ZWNoYXQnCiAgICAgIH0sIHsKICAgICAgICBsYWJlbDogJ+i0tOWQpycsCiAgICAgICAgdmFsdWU6ICd0aWViYScKICAgICAgfV0sCiAgICAgIHNlbGVjdGVkVGltZTogbnVsbCwKICAgICAgc2VsZWN0ZWRTZW50aW1lbnQ6IG51bGwsCiAgICAgIHNlbGVjdGVkU291cmNlczogW10sCiAgICAgIC8vaGlzdG9yeVNlYXJjaExpc3Q6IFtdLCAvLyDljoblj7LmkJzntKLliJfooagKICAgICAgaGlzdG9yeVNlYXJjaFRvcGljczogW10sCiAgICAgIC8vIOaWsOeahOWOhuWPsuaQnOe0ouS4u+mimOWIl+ihqAogICAgICBjdXJyZW50S2V5V29yZDogIiIKICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBTaWRlQm9yZGVyCiAgfSwKICAvLyDnu4Tku7bmjILovb3lkI7osIPnlKggZ2V0SGlzdG9yeVNlYXJjaCDmlrnms5UKICBtb3VudGVkKCkgewogICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICB0aGlzLmdldEhpc3RvcnlTZWFyY2goKTsKICAgIH0pOwogIH0sCiAgZmlsdGVyczogewogICAgc25pcHBldCh2YWx1ZSkgewogICAgICBpZiAodmFsdWUubGVuZ3RoID4gMjAwKSByZXR1cm4gdmFsdWUuc2xpY2UoMCwgMjAwKSArICIuLi4iOwogICAgICByZXR1cm4gdmFsdWU7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnb1RvRGV0YWlsUGFnZSgpIHsKICAgICAgLy8g5L2/55SoIHRoaXMuJHJvdXRlci5wdXNoIOi/m+ihjOi3r+eUsei3s+i9rOW5tuS8oOmAkuivnemimOWPguaVsAogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgcGF0aDogJy9hbGxfZGV0YWlsJywKICAgICAgICBxdWVyeTogewogICAgICAgICAga2V5OiB0aGlzLmtleV93b3JkCiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICAvLyDojrflj5bmg4XmhJ/moIfnrb4KICAgIGdldFNlbnRpbWVudExhYmVsKHNlbnRpbWVudCkgewogICAgICBpZiAoc2VudGltZW50ID4gMC43KSByZXR1cm4gJ+enr+aegSc7CiAgICAgIGlmIChzZW50aW1lbnQgPCAwLjMpIHJldHVybiAn5raI5p6BJzsKICAgICAgcmV0dXJuICfkuK3mgKcnOwogICAgfSwKICAgIC8vIOiOt+WPluaDheaEn+agh+etvueahENTU+exuwogICAgZ2V0U2VudGltZW50Q2xhc3Moc2VudGltZW50KSB7CiAgICAgIGlmIChzZW50aW1lbnQgPiAwLjcpIHJldHVybiAncG9zaXRpdmUnOwogICAgICBpZiAoc2VudGltZW50IDwgMC4zKSByZXR1cm4gJ25lZ2F0aXZlJzsKICAgICAgcmV0dXJuICduZXV0cmFsJzsKICAgIH0sCiAgICBhc3luYyBzZWFyY2goKSB7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7IC8vIOW8gOWni+WKoOi9ve+8jOaYvuekuuWKoOi9veWKqOeUuwogICAgICBpZiAoIXRoaXMua2V5X3dvcmQpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCLor7fovpPlhaXmkJzntKLlhbPplK7or43vvIEiKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIC8vIOWmguaenOW9k+WJjeWFs+mUruivjeWSjOS5i+WJjeeahOS4jeWQjO+8jOi/m+ihjOaQnOe0ogogICAgICBpZiAodGhpcy5rZXlfd29yZCAhPT0gdGhpcy5jdXJyZW50S2V5V29yZCkgewogICAgICAgIHRoaXMuc2VhcmNoUmVzdWx0ID0gdHJ1ZTsKICAgICAgICB0aGlzLnJlc3VsdHMgPSB7fTsgLy8g5riF56m65pen57uT5p6cCiAgICAgICAgdGhpcy5jdXJyZW50S2V5V29yZCA9IHRoaXMua2V5X3dvcmQ7IC8vIOabtOaWsOW9k+WJjeaQnOe0ouWFs+mUruivjQogICAgICAgIC8vIOa3u+WKoOWOhuWPsuaQnOe0ouiusOW9lQogICAgICAgIGF3YWl0IHRoaXMuc2F2ZUhpc3RvcnlTZWFyY2godGhpcy5rZXlfd29yZCk7CiAgICAgICAgYXdhaXQgdGhpcy5nZXRIaXN0b3J5U2VhcmNoKCk7CiAgICAgIH0KICAgICAgY29uc3QgcmVzdWx0cyA9IHsKICAgICAgICByZW5taW46IFtdLAogICAgICAgIHdlaWJvOiBbXSwKICAgICAgICB0aWViYTogW10sCiAgICAgICAgd2VjaGF0OiBbXQogICAgICB9OwogICAgICBsZXQgY3Vyc29yID0gMTsgLy8g5LuO56ys5LiA6aG15byA5aeLCiAgICAgIGxldCBoYXNNb3JlRGF0YSA9IHRydWU7IC8vIOagh+iusOaYr+WQpui/mOacieabtOWkmuaVsOaNrgoKICAgICAgdHJ5IHsKICAgICAgICB3aGlsZSAoaGFzTW9yZURhdGEgJiYgY3Vyc29yIDw9IDEpIHsKICAgICAgICAgIHZhciBfcGFnZURhdGEkd2VpYm8sIF9wYWdlRGF0YSRyZW5taW4sIF9wYWdlRGF0YSR3ZWlibzIsIF9wYWdlRGF0YSR0aWViYSwgX3BhZ2VEYXRhJHdlY2hhdDsKICAgICAgICAgIC8vIOWPqueIrOWPluaMh+WumumhteaVsAogICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLiRheGlvcy5nZXQoYG11bHRpX3NlYXJjaD90YWc9JHt0aGlzLmtleV93b3JkfSZjdXJzb3I9JHtjdXJzb3J9YCk7CiAgICAgICAgICBjb25zdCBwYWdlRGF0YSA9IHJlc3BvbnNlLmRhdGEuZGF0YTsKICAgICAgICAgIGNvbnNvbGUubG9nKHBhZ2VEYXRhKTsKICAgICAgICAgIGlmICghcGFnZURhdGEucmVubWluICYmICFwYWdlRGF0YS53ZWlibyAmJiAhcGFnZURhdGEudGllYmEgJiYgIXBhZ2VEYXRhLndlY2hhdCkgewogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoYOesrCAke2N1cnNvcn0g6aG15rKh5pyJ5pu05aSa57uT5p6cYCk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQoKICAgICAgICAgIC8vIOWQiOW5tuaVsOaNruW5tua3u+WKoOaDheaEn+agh+etvgogICAgICAgICAgaWYgKHBhZ2VEYXRhLnJlbm1pbikgewogICAgICAgICAgICBwYWdlRGF0YS5yZW5taW4uZm9yRWFjaChpdGVtID0+IHsKICAgICAgICAgICAgICBpdGVtLnNlbnRpbWVudCA9IGl0ZW0uc2VudGltZW50IHx8IDA7IC8vIOiOt+WPluWQjuerr+i/lOWbnueahOaDheaEn+W+l+WIhgogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcmVzdWx0cy5yZW5taW4ucHVzaCguLi5wYWdlRGF0YS5yZW5taW4pOwogICAgICAgICAgfQogICAgICAgICAgaWYgKHBhZ2VEYXRhLnRpZWJhKSB7CiAgICAgICAgICAgIHBhZ2VEYXRhLnRpZWJhLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICAgICAgaXRlbS5zZW50aW1lbnQgPSBpdGVtLnNlbnRpbWVudCB8fCAwOyAvLyDojrflj5blkI7nq6/ov5Tlm57nmoTmg4XmhJ/lvpfliIYKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHJlc3VsdHMudGllYmEucHVzaCguLi5wYWdlRGF0YS50aWViYSk7CiAgICAgICAgICB9CiAgICAgICAgICBpZiAocGFnZURhdGEud2VjaGF0KSB7CiAgICAgICAgICAgIHBhZ2VEYXRhLndlY2hhdC5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgICAgICAgIGl0ZW0uc2VudGltZW50ID0gaXRlbS5zZW50aW1lbnQgfHwgMDsgLy8g6I635Y+W5ZCO56uv6L+U5Zue55qE5oOF5oSf5b6X5YiGCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICByZXN1bHRzLndlY2hhdC5wdXNoKC4uLnBhZ2VEYXRhLndlY2hhdCk7CiAgICAgICAgICB9CiAgICAgICAgICBpZiAoKF9wYWdlRGF0YSR3ZWlibyA9IHBhZ2VEYXRhLndlaWJvKSAhPT0gbnVsbCAmJiBfcGFnZURhdGEkd2VpYm8gIT09IHZvaWQgMCAmJiBfcGFnZURhdGEkd2VpYm8ucmVzdWx0KSB7CiAgICAgICAgICAgIHBhZ2VEYXRhLndlaWJvLnJlc3VsdC5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgICAgICAgIGl0ZW0uc2VudGltZW50ID0gaXRlbS5zZW50aW1lbnQgfHwgMDsgLy8g6I635Y+W5ZCO56uv6L+U5Zue55qE5oOF5oSf5b6X5YiGCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICByZXN1bHRzLndlaWJvLnB1c2goLi4ucGFnZURhdGEud2VpYm8ucmVzdWx0KTsKICAgICAgICAgIH0KCiAgICAgICAgICAvLyDliKTmlq3mmK/lkKbnu6fnu63niKzlj5YKICAgICAgICAgIGhhc01vcmVEYXRhID0gKChfcGFnZURhdGEkcmVubWluID0gcGFnZURhdGEucmVubWluKSA9PT0gbnVsbCB8fCBfcGFnZURhdGEkcmVubWluID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcGFnZURhdGEkcmVubWluLmxlbmd0aCkgPiAwIHx8ICgoX3BhZ2VEYXRhJHdlaWJvMiA9IHBhZ2VEYXRhLndlaWJvKSA9PT0gbnVsbCB8fCBfcGFnZURhdGEkd2VpYm8yID09PSB2b2lkIDAgfHwgKF9wYWdlRGF0YSR3ZWlibzIgPSBfcGFnZURhdGEkd2VpYm8yLnJlc3VsdCkgPT09IG51bGwgfHwgX3BhZ2VEYXRhJHdlaWJvMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3BhZ2VEYXRhJHdlaWJvMi5sZW5ndGgpID4gMCB8fCAoKF9wYWdlRGF0YSR0aWViYSA9IHBhZ2VEYXRhLnRpZWJhKSA9PT0gbnVsbCB8fCBfcGFnZURhdGEkdGllYmEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wYWdlRGF0YSR0aWViYS5sZW5ndGgpID4gMCB8fCAoKF9wYWdlRGF0YSR3ZWNoYXQgPSBwYWdlRGF0YS53ZWNoYXQpID09PSBudWxsIHx8IF9wYWdlRGF0YSR3ZWNoYXQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wYWdlRGF0YSR3ZWNoYXQubGVuZ3RoKSA+IDA7CiAgICAgICAgICBjdXJzb3IrKzsgLy8g5LiL5LiA6aG1CiAgICAgICAgfQogICAgICAgIHRoaXMucmVzdWx0cyA9IHJlc3VsdHM7CiAgICAgICAgaWYgKHJlc3VsdHMucmVubWluLmxlbmd0aCA9PT0gMCAmJiByZXN1bHRzLndlaWJvLmxlbmd0aCA9PT0gMCAmJiByZXN1bHRzLnRpZWJhLmxlbmd0aCA9PT0gMCAmJiByZXN1bHRzLndlY2hhdC5sZW5ndGggPT09IDApIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuayoeacieaJvuWIsOebuOWFs+e7k+aenCIpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCLmkJzntKLlpLHotKUiLCBlcnJvcik7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcigi5pCc57Si5aSx6LSl77yM6K+356iN5ZCO5YaN6K+V77yBIik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7IC8vIOWKoOi9veWujOaIkO+8jOmakOiXj+WKoOi9veWKqOeUuwogICAgICB9CiAgICB9LAogICAgLy8g6I635Y+W5Y6G5Y+y5pCc57Si5YaF5a65CiAgICBhc3luYyBnZXRIaXN0b3J5U2VhcmNoKCkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KCcvaGlzdG9yeV90b3BpYycpOwogICAgICAgIGNvbnNvbGUubG9nKCdyZXNwb25zZS5kYXRhLmNvZGUg55qE57G75Z6L77yaJywgdHlwZW9mIHJlc3BvbnNlLmRhdGEuY29kZSk7CiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKICAgICAgICAgIC8vIOWwhuiOt+WPluWIsOeahCB0b3BpYyDov73liqDliLDljoblj7LmkJzntKLkuLvpopjliJfooajlkI7pnaIKICAgICAgICAgIGNvbnN0IG5ld1RvcGljcyA9IHRoaXMuaGlzdG9yeVNlYXJjaFRvcGljcy5jb25jYXQocmVzcG9uc2UuZGF0YS5kYXRhLnRvcGljKTsKICAgICAgICAgIHRoaXMuaGlzdG9yeVNlYXJjaFRvcGljcyA9IFsuLi5uZXdUb3BpY3NdOwogICAgICAgICAgY29uc29sZS5sb2coJ+abtOaWsOWQjueahCBoaXN0b3J5U2VhcmNoVG9waWNz77yaJywgdGhpcy5oaXN0b3J5U2VhcmNoVG9waWNzKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcign6I635Y+W5Y6G5Y+y5pCc57Si5YaF5a655aSx6LSlJywgZXJyb3IpOwogICAgICB9CiAgICB9LAogICAgLy8g5L+d5a2Y5Y6G5Y+y5pCc57Si6K6w5b2V5Yiw5ZCO56uvCiAgICBhc3luYyBzYXZlSGlzdG9yeVNlYXJjaCh0YWcpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnBvc3QoJy9zYXZlX2hpc3Rvcnlfc2VhcmNoJywgewogICAgICAgICAgdGFnOiB0YWcKICAgICAgICB9KTsKICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5tZXNzYWdlID09PSAi5L+d5a2Y5oiQ5YqfIikgewogICAgICAgICAgY29uc29sZS5sb2coIuWOhuWPsuaQnOe0ouiusOW9leS/neWtmOaIkOWKnyIpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zb2xlLmVycm9yKCLljoblj7LmkJzntKLorrDlvZXkv53lrZjlpLHotKUiKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcigi5L+d5a2Y5Y6G5Y+y5pCc57Si6K6w5b2V5aSx6LSlIiwgZXJyb3IpOwogICAgICB9CiAgICB9LAogICAgLy8g54K55Ye75bGV56S65Y6G5Y+y5pCc57Si5YaF5a65CiAgICBhc3luYyBzZWFyY2hIaXN0b3J5KHRhZykgewogICAgICB0aGlzLmtleV93b3JkID0gdGFnOwogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KCcvaGlzdG9yeV9zZWFyY2gnLCB7CiAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgdGFnOiB0aGlzLmtleV93b3JkCiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgLy8g6I635Y+W5ZCO56uv6L+U5Zue55qE5pWw5o2uCiAgICAgICAgICBsZXQgZGF0YSA9IHJlc3BvbnNlLmRhdGEuZGF0YTsKICAgICAgICAgIC8vIOajgOafpSBkYXRhIOS4reeahCB3ZWlibyDlrZfmrrXmmK/lkKbkuLrmlbDnu4TvvIzlpoLmnpzkuI3mmK/liJnlsIblhbborr7kuLrnqbrmlbDnu4QKICAgICAgICAgIGlmICghQXJyYXkuaXNBcnJheShkYXRhLndlaWJvKSkgewogICAgICAgICAgICBkYXRhLndlaWJvID0gW107CiAgICAgICAgICB9CiAgICAgICAgICB0aGlzLnJlc3VsdHMgPSBkYXRhOwogICAgICAgICAgY29uc29sZS5sb2codGhpcy5yZXN1bHRzKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcigi6I635Y+W5Y6G5Y+y5pCc57Si5aSx6LSlIiwgZXJyb3IpOwogICAgICB9CiAgICB9LAogICAgLy8g5Yig6Zmk5Y6G5Y+y5pCc57Si5YaF5a65CiAgICBhc3luYyBkZWxldGVIaXN0b3J5KHRhZykgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KCcvaGlzdG9yeV9kZWwnLCB7CiAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgdGFnOiB0YWcKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICB0aGlzLmhpc3RvcnlTZWFyY2hUb3BpY3MgPSB0aGlzLmhpc3RvcnlTZWFyY2hUb3BpY3MuZmlsdGVyKGl0ZW0gPT4gaXRlbSAhPT0gdGFnKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcigi5Yig6Zmk5Y6G5Y+y6K6w5b2V5aSx6LSlIik7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoIuWIoOmZpOWOhuWPsuaQnOe0ouWksei0pSIsIGVycm9yKTsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCLliKDpmaTljoblj7LorrDlvZXlpLHotKUiKTsKICAgICAgfQogICAgfSwKICAgIC8vIOetm+mAieWIh+aNoumAu+i+kQogICAgdG9nZ2xlRmlsdGVyKHR5cGUsIHZhbHVlKSB7CiAgICAgIHN3aXRjaCAodHlwZSkgewogICAgICAgIGNhc2UgJ3RpbWUnOgogICAgICAgICAgdGhpcy5zZWxlY3RlZFRpbWUgPSB0aGlzLnNlbGVjdGVkVGltZSA9PT0gdmFsdWUgPyBudWxsIDogdmFsdWU7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdzZW50aW1lbnQnOgogICAgICAgICAgdGhpcy5zZWxlY3RlZFNlbnRpbWVudCA9IHRoaXMuc2VsZWN0ZWRTZW50aW1lbnQgPT09IHZhbHVlID8gbnVsbCA6IHZhbHVlOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnc291cmNlJzoKICAgICAgICAgIGlmICh0aGlzLnNlbGVjdGVkU291cmNlcy5pbmNsdWRlcyh2YWx1ZSkpIHsKICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFNvdXJjZXMgPSB0aGlzLnNlbGVjdGVkU291cmNlcy5maWx0ZXIocyA9PiBzICE9PSB2YWx1ZSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLnNlbGVjdGVkU291cmNlcyA9IFsuLi50aGlzLnNlbGVjdGVkU291cmNlcywgdmFsdWVdOwogICAgICAgICAgfQogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0sCiAgICAvLyDov4fmu6TpgLvovpEKICAgIGZpbHRlckl0ZW1zKGl0ZW1zLCBzb3VyY2VUeXBlKSB7CiAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7CiAgICAgIHJldHVybiBpdGVtcy5maWx0ZXIoaXRlbSA9PiB7CiAgICAgICAgLy8g5pe26Ze06L+H5rukCiAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRUaW1lKSB7CiAgICAgICAgICBjb25zdCBpdGVtRGF0ZSA9IG5ldyBEYXRlKHNvdXJjZVR5cGUgPT09ICd3ZWlibycgPyBpdGVtLmNyZWF0ZWRfYXQgOiBzb3VyY2VUeXBlID09PSAncmVubWluJyA/IGl0ZW0uZGlzcGxheVRpbWUgOiBpdGVtLnRpbWUpOwogICAgICAgICAgY29uc3QgdGltZURpZmYgPSBub3cgLSBpdGVtRGF0ZTsKICAgICAgICAgIGNvbnN0IHJhbmdlcyA9IHsKICAgICAgICAgICAgd2VlazogNyAqIDI0ICogNjAgKiA2MCAqIDEwMDAsCiAgICAgICAgICAgIG1vbnRoOiAzMCAqIDI0ICogNjAgKiA2MCAqIDEwMDAsCiAgICAgICAgICAgIHllYXI6IDM2NSAqIDI0ICogNjAgKiA2MCAqIDEwMDAKICAgICAgICAgIH07CiAgICAgICAgICBpZiAodGltZURpZmYgPiByYW5nZXNbdGhpcy5zZWxlY3RlZFRpbWVdKSByZXR1cm4gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICAvLyDmg4XmhJ/ov4fmu6QKICAgICAgICBpZiAodGhpcy5zZWxlY3RlZFNlbnRpbWVudCkgewogICAgICAgICAgY29uc3Qgc2VudGltZW50VmFsdWUgPSBpdGVtLnNlbnRpbWVudCB8fCAwOwogICAgICAgICAgY29uc3Qgc2VudGltZW50TWFwID0gewogICAgICAgICAgICBwb3NpdGl2ZTogc2VudGltZW50VmFsdWUgPiAwLjcsCiAgICAgICAgICAgIG5ldXRyYWw6IHNlbnRpbWVudFZhbHVlID49IDAuMyAmJiBzZW50aW1lbnRWYWx1ZSA8PSAwLjcsCiAgICAgICAgICAgIG5lZ2F0aXZlOiBzZW50aW1lbnRWYWx1ZSA8IDAuMwogICAgICAgICAgfTsKICAgICAgICAgIGlmICghc2VudGltZW50TWFwW3RoaXMuc2VsZWN0ZWRTZW50aW1lbnRdKSByZXR1cm4gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICAvLyDmnaXmupDov4fmu6QKICAgICAgICBpZiAodGhpcy5zZWxlY3RlZFNvdXJjZXMubGVuZ3RoID4gMCAmJiAhdGhpcy5zZWxlY3RlZFNvdXJjZXMuaW5jbHVkZXMoc291cmNlVHlwZSkpIHsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0pOwogICAgfSwKICAgIHJlbmRlckNoYXJ0cygpIHsKICAgICAgdGhpcy5zaG93QW5hbHlzaXMgPSB0cnVlOyAvLyDmmL7npLrlm77ooagKCiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAvLyDlnKjov5nph4zliJ3lp4vljJYgRUNoYXJ0cyDlm77ooagKICAgICAgICBjb25zdCByZW5taW5Db3VudCA9IHRoaXMucmVzdWx0cy5yZW5taW4gPyB0aGlzLnJlc3VsdHMucmVubWluLmxlbmd0aCA6IDA7CiAgICAgICAgY29uc3Qgd2VpYm9Db3VudCA9IHRoaXMucmVzdWx0cy53ZWlibyA/IHRoaXMucmVzdWx0cy53ZWliby5sZW5ndGggOiAwOwogICAgICAgIGNvbnN0IHRpZWJhQ291bnQgPSB0aGlzLnJlc3VsdHMudGllYmEgPyB0aGlzLnJlc3VsdHMudGllYmEubGVuZ3RoIDogMDsKICAgICAgICBjb25zdCB3ZWNoYXRDb3VudCA9IHRoaXMucmVzdWx0cy53ZWNoYXQgPyB0aGlzLnJlc3VsdHMud2VjaGF0Lmxlbmd0aCA6IDA7CiAgICAgICAgY29uc3QgdG90YWwgPSByZW5taW5Db3VudCArIHdlaWJvQ291bnQgKyB0aWViYUNvdW50ICsgd2VjaGF0Q291bnQ7CiAgICAgICAgY29uc29sZS5sb2codGhpcy4kcmVmcy5zb3VyY2VDaGFydCk7CiAgICAgICAgaWYgKHRoaXMuJHJlZnMuc291cmNlQ2hhcnQpIHsKICAgICAgICAgIGNvbnN0IHNvdXJjZUNoYXJ0ID0gdGhpcy4kZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMuc291cmNlQ2hhcnQpOwogICAgICAgICAgY29uc3Qgc291cmNlT3B0aW9uID0gewogICAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICAgIHRleHQ6ICfkv6Hmga/mnaXmupDljaDmr5QnLAogICAgICAgICAgICAgIGxlZnQ6ICdjZW50ZXInLAogICAgICAgICAgICAgIHRvcDogJ2NlbnRlcicsCiAgICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgICBmb250U2l6ZTogMTYsCiAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiAnbm9ybWFsJywKICAgICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgICAgICB0cmlnZ2VyOiAnaXRlbScsCiAgICAgICAgICAgICAgZm9ybWF0dGVyOiAne2F9IDxici8+e2J9OiB7Y30gKHtkfSUpJwogICAgICAgICAgICB9LAogICAgICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICAgICAgbmFtZTogJ+S/oeaBr+adpea6kCcsCiAgICAgICAgICAgICAgdHlwZTogJ3BpZScsCiAgICAgICAgICAgICAgcmFkaXVzOiAnNTAlJywKICAgICAgICAgICAgICBkYXRhOiBbewogICAgICAgICAgICAgICAgdmFsdWU6IHJlbm1pbkNvdW50LAogICAgICAgICAgICAgICAgbmFtZTogJ+S6uuawkee9kScKICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICB2YWx1ZTogd2VpYm9Db3VudCwKICAgICAgICAgICAgICAgIG5hbWU6ICflvq7ljZonCiAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgdmFsdWU6IHRpZWJhQ291bnQsCiAgICAgICAgICAgICAgICBuYW1lOiAn6LS05ZCnJwogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIHZhbHVlOiB3ZWNoYXRDb3VudCwKICAgICAgICAgICAgICAgIG5hbWU6ICflvq7kv6EnCiAgICAgICAgICAgICAgfV0sCiAgICAgICAgICAgICAgY29sb3I6IFsnI2E0ZTJjNicsICcjNDhjMGEzJywgJyM1NDk2ODgnLCAnIzE2ODVhOSddLAogICAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgc2hhZG93Qmx1cjogMTAsCiAgICAgICAgICAgICAgICAgIHNoYWRvd09mZnNldFg6IDAsCiAgICAgICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiAncmdiYSgwLCAwLCAwLCAwLjUpJwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfV0KICAgICAgICAgIH07CiAgICAgICAgICBzb3VyY2VDaGFydC5zZXRPcHRpb24oc291cmNlT3B0aW9uKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY29uc29sZS5lcnJvcignc291cmNlQ2hhcnQgZWxlbWVudCBub3QgZm91bmQnKTsKICAgICAgICB9CiAgICAgICAgY29uc3QgdGltZURhdGEgPSB0aGlzLmNhbGN1bGF0ZVRpbWVEYXRhKCk7CiAgICAgICAgY29uc3QgdGltZUxpbmVDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLnRpbWVMaW5lQ2hhcnQpOwogICAgICAgIGNvbnN0IHRpbWVMaW5lT3B0aW9uID0gewogICAgICAgICAgdGl0bGU6IHsKICAgICAgICAgICAgdGV4dDogJ+WPkeW4g+aXtumXtOi2i+WKvycsCiAgICAgICAgICAgIGxlZnQ6ICdjZW50ZXInLAogICAgICAgICAgICB0b3A6ICd0b3AnLAogICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyNmZmYnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICAgIHRyaWdnZXI6ICdheGlzJwogICAgICAgICAgfSwKICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICBkYXRhOiBbJ+S6uuawkee9kScsICflvq7ljZonLCAn6LS05ZCnJywgJ+W+ruS/oSddLAogICAgICAgICAgICB0b3A6ICcxMCUnLAogICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyNmZmYnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB4QXhpczogewogICAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgICBib3VuZGFyeUdhcDogZmFsc2UsCiAgICAgICAgICAgIGRhdGE6IHRpbWVEYXRhLmxhYmVscywKICAgICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjZmZmJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgeUF4aXM6IHsKICAgICAgICAgICAgdHlwZTogJ3ZhbHVlJywKICAgICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgICAgZm9ybWF0dGVyOiAne3ZhbHVlfSDmnaEnLAogICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicKICAgICAgICAgICAgfSwKICAgICAgICAgICAgYXhpc1RpY2s6IHsKICAgICAgICAgICAgICBhbGlnbldpdGhMYWJlbDogdHJ1ZQogICAgICAgICAgICB9LAogICAgICAgICAgICBtaW5JbnRlcnZhbDogMSAvLyDorr7nva7mnIDlsI/liLvluqbpl7TpmpTkuLox77yM56Gu5L+d5pi+56S65pW05pWwCiAgICAgICAgICB9LAogICAgICAgICAgZ3JpZDogewogICAgICAgICAgICB0b3A6ICcxNSUnLAogICAgICAgICAgICBsZWZ0OiAnMTAlJywKICAgICAgICAgICAgcmlnaHQ6ICc4JScsCiAgICAgICAgICAgIGJvdHRvbTogJzIwJScKICAgICAgICAgIH0sCiAgICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICAgIG5hbWU6ICfkurrmsJHnvZEnLAogICAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICAgIGRhdGE6IHRpbWVEYXRhLnJlbm1pbiwKICAgICAgICAgICAgc21vb3RoOiB0cnVlLAogICAgICAgICAgICBjb2xvcjogJyNhNGUyYzYnLAogICAgICAgICAgICBhcmVhU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogewogICAgICAgICAgICAgICAgdHlwZTogJ2xpbmVhcicsCiAgICAgICAgICAgICAgICB4OiAwLAogICAgICAgICAgICAgICAgeTogMCwKICAgICAgICAgICAgICAgIHgyOiAwLAogICAgICAgICAgICAgICAgeTI6IDEsCiAgICAgICAgICAgICAgICBjb2xvclN0b3BzOiBbewogICAgICAgICAgICAgICAgICBvZmZzZXQ6IDAsCiAgICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiYSgxNjQsIDIyNiwgMTk4LCAwLjUpJyAvLyDkuI7mipjnur/popzoibLnm7jlkIzvvIzljYrpgI/mmI4KICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgb2Zmc2V0OiAxLAogICAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoMTY0LCAyMjYsIDE5OCwgMCknIC8vIOWujOWFqOmAj+aYjgogICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbmFtZTogJ+W+ruWNmicsCiAgICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgICAgZGF0YTogdGltZURhdGEud2VpYm8sCiAgICAgICAgICAgIHNtb290aDogdHJ1ZSwKICAgICAgICAgICAgY29sb3I6ICcjNDhjMGEzJywKICAgICAgICAgICAgYXJlYVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6IHsKICAgICAgICAgICAgICAgIHR5cGU6ICdsaW5lYXInLAogICAgICAgICAgICAgICAgeDogMCwKICAgICAgICAgICAgICAgIHk6IDAsCiAgICAgICAgICAgICAgICB4MjogMCwKICAgICAgICAgICAgICAgIHkyOiAxLAogICAgICAgICAgICAgICAgY29sb3JTdG9wczogW3sKICAgICAgICAgICAgICAgICAgb2Zmc2V0OiAwLAogICAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoNzIsIDE5MiwgMTYzLCAwLjUpJwogICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICBvZmZzZXQ6IDEsCiAgICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiYSg3MiwgMTkyLCAxNjMsIDApJwogICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbmFtZTogJ+i0tOWQpycsCiAgICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgICAgZGF0YTogdGltZURhdGEudGllYmEsCiAgICAgICAgICAgIHNtb290aDogdHJ1ZSwKICAgICAgICAgICAgY29sb3I6ICcjNTQ5Njg4JywKICAgICAgICAgICAgYXJlYVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6IHsKICAgICAgICAgICAgICAgIHR5cGU6ICdsaW5lYXInLAogICAgICAgICAgICAgICAgeDogMCwKICAgICAgICAgICAgICAgIHk6IDAsCiAgICAgICAgICAgICAgICB4MjogMCwKICAgICAgICAgICAgICAgIHkyOiAxLAogICAgICAgICAgICAgICAgY29sb3JTdG9wczogW3sKICAgICAgICAgICAgICAgICAgb2Zmc2V0OiAwLAogICAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoODQsIDE1MCwgMTM2LCAwLjUpJwogICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICBvZmZzZXQ6IDEsCiAgICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiYSg4NCwgMTUwLCAxMzYsIDApJwogICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbmFtZTogJ+W+ruS/oScsCiAgICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgICAgZGF0YTogdGltZURhdGEud2VjaGF0LAogICAgICAgICAgICBzbW9vdGg6IHRydWUsCiAgICAgICAgICAgIGNvbG9yOiAnIzE2ODVhOScsCiAgICAgICAgICAgIGFyZWFTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiB7CiAgICAgICAgICAgICAgICB0eXBlOiAnbGluZWFyJywKICAgICAgICAgICAgICAgIHg6IDAsCiAgICAgICAgICAgICAgICB5OiAwLAogICAgICAgICAgICAgICAgeDI6IDAsCiAgICAgICAgICAgICAgICB5MjogMSwKICAgICAgICAgICAgICAgIGNvbG9yU3RvcHM6IFt7CiAgICAgICAgICAgICAgICAgIG9mZnNldDogMCwKICAgICAgICAgICAgICAgICAgY29sb3I6ICdyZ2JhKDIyLCAxMzMsIDE2OSwgMC41KScKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgb2Zmc2V0OiAxLAogICAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoMjIsIDEzMywgMTY5LCAwKScKICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9XQogICAgICAgIH07CiAgICAgICAgdGltZUxpbmVDaGFydC5zZXRPcHRpb24odGltZUxpbmVPcHRpb24pOwoKICAgICAgICAvLyDmg4XmhJ/liIbmnpDljaDmr5Tlm74KICAgICAgICBjb25zdCBzZW50aW1lbnREYXRhID0gdGhpcy5jYWxjdWxhdGVTZW50aW1lbnREYXRhKCk7CiAgICAgICAgY29uc3Qgc291cmNlU2VudGltZW50RGF0YSA9IHRoaXMuY2FsY3VsYXRlU291cmNlU2VudGltZW50RGF0YSgpOwogICAgICAgIGNvbnN0IHNlbnRpbWVudENoYXJ0ID0gdGhpcy4kZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMuc2VudGltZW50Q2hhcnQpOwogICAgICAgIGNvbnN0IHNlbnRpbWVudE9wdGlvbiA9IHsKICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgIHRleHQ6ICfmg4XmhJ/liIbmnpDljaDmr5QnLAogICAgICAgICAgICBsZWZ0OiAnY2VudGVyJywKICAgICAgICAgICAgdG9wOiAnY2VudGVyJywKICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgZm9udFNpemU6IDE2LAogICAgICAgICAgICAgIGZvbnRXZWlnaHQ6ICdub3JtYWwnLAogICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgICAgdHJpZ2dlcjogJ2l0ZW0nLAogICAgICAgICAgICBmb3JtYXR0ZXI6ICd7YX0gPGJyLz57Yn06IHtjfSAoe2R9JSknCiAgICAgICAgICB9LAogICAgICAgICAgc2VyaWVzOiBbCiAgICAgICAgICAvLyDlpJblnIjvvJrmgLvnmoTmg4XmhJ/ljaDmr5QKICAgICAgICAgIHsKICAgICAgICAgICAgbmFtZTogJ+aAu+aDheaEn+WIhuaekCcsCiAgICAgICAgICAgIHR5cGU6ICdwaWUnLAogICAgICAgICAgICByYWRpdXM6IFsnNTIlJywgJzY1JSddLAogICAgICAgICAgICBkYXRhOiBzZW50aW1lbnREYXRhLAogICAgICAgICAgICBjb2xvcjogWycjNTZjMTg0JywgJyMzMmM1OTYnLCAnIzQyY2E3ZCddLAogICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICAgICAgc2hhZG93Qmx1cjogMTAsCiAgICAgICAgICAgICAgICBzaGFkb3dPZmZzZXRYOiAwLAogICAgICAgICAgICAgICAgc2hhZG93Q29sb3I6ICdyZ2JhKDAsIDAsIDAsIDAuNSknCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgICAvLyDorr7nva7ovrnmoYblrr3luqbmnaXlrp7njrDmiYflvaLkuYvpl7TnmoTpl7TpmpQKICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMywKICAgICAgICAgICAgICAvLyDovrnmoYbpopzoibLvvIzov5nph4zkvb/nlKjnmb3oibLvvIzlj6/moLnmja7og4zmma/oibLosIPmlbQKICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJyMxNWJhYzAwMCcsCiAgICAgICAgICAgICAgLy8g6K6+572u5aSW5ZyI5ZyG546v55qE5ZyG6KeS5Y2K5b6ECiAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAxNQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgLy8g5YaF5ZyI77ya5Zub5Liq5p2l5rqQ55qE5oOF5oSf5Y2g5q+UCiAgICAgICAgICB7CiAgICAgICAgICAgIG5hbWU6ICfmnaXmupDmg4XmhJ/liIbmnpAnLAogICAgICAgICAgICB0eXBlOiAncGllJywKICAgICAgICAgICAgcmFkaXVzOiBbJzQyJScsICc1MCUnXSwKICAgICAgICAgICAgZGF0YTogc291cmNlU2VudGltZW50RGF0YSwKICAgICAgICAgICAgY29sb3I6IFsnI2E0ZTJjNicsICcjNDhjMGEzJywgJyM1NDk2ODgnLCAnIzE2ODVhOScsICcjYTRlMmM2JywgJyM0OGMwYTMnLCAnIzU0OTY4OCcsICcjMTY4NWE5JywgJyNhNGUyYzYnLCAnIzQ4YzBhMycsICcjNTQ5Njg4JywgJyMxNjg1YTknXSwKICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICBzaG93OiBmYWxzZSwKICAgICAgICAgICAgICBmb3JtYXR0ZXI6ICd7Yn0nLAogICAgICAgICAgICAgIHBvc2l0aW9uOiAnaW5zaWRlJwogICAgICAgICAgICB9LAogICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICAgICAgc2hhZG93Qmx1cjogMTAsCiAgICAgICAgICAgICAgICBzaGFkb3dPZmZzZXRYOiAwLAogICAgICAgICAgICAgICAgc2hhZG93Q29sb3I6ICdyZ2JhKDAsIDAsIDAsIDAuNSknCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9XQogICAgICAgIH07CiAgICAgICAgc2VudGltZW50Q2hhcnQuc2V0T3B0aW9uKHNlbnRpbWVudE9wdGlvbik7CgogICAgICAgIC8vIOaDheaEn+WIhuaekOmaj+aXtumXtOWPmOWMluaKmOe6v+WbvgogICAgICAgIGNvbnN0IHNlbnRpbWVudFRpbWVEYXRhID0gdGhpcy5jYWxjdWxhdGVTZW50aW1lbnRUaW1lRGF0YSgpOwogICAgICAgIGNvbnN0IHNlbnRpbWVudFRpbWVDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLnNlbnRpbWVudFRpbWVDaGFydCk7CiAgICAgICAgY29uc3Qgc2VudGltZW50VGltZU9wdGlvbiA9IHsKICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgIHRleHQ6ICfmg4XmhJ/liIbmnpDpmo/ml7bpl7Tlj5jljJYnLAogICAgICAgICAgICBsZWZ0OiAnY2VudGVyJywKICAgICAgICAgICAgdG9wOiAndG9wJywKICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjZmZmJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycKICAgICAgICAgIH0sCiAgICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgICAgZGF0YTogWyfnp6/mnoEnLCAn5Lit5oCnJywgJ+a2iOaegSddLAogICAgICAgICAgICB0b3A6ICcxMCUnLAogICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyNmZmYnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB4QXhpczogewogICAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgICBib3VuZGFyeUdhcDogZmFsc2UsCiAgICAgICAgICAgIGRhdGE6IHNlbnRpbWVudFRpbWVEYXRhLmxhYmVscywKICAgICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjZmZmJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgeUF4aXM6IHsKICAgICAgICAgICAgdHlwZTogJ3ZhbHVlJywKICAgICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgICAgZm9ybWF0dGVyOiAne3ZhbHVlfSDmnaEnLAogICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicKICAgICAgICAgICAgfSwKICAgICAgICAgICAgYXhpc1RpY2s6IHsKICAgICAgICAgICAgICBhbGlnbldpdGhMYWJlbDogdHJ1ZQogICAgICAgICAgICB9LAogICAgICAgICAgICBtaW5JbnRlcnZhbDogMSAvLyDorr7nva7mnIDlsI/liLvluqbpl7TpmpTkuLox77yM56Gu5L+d5pi+56S65pW05pWwCiAgICAgICAgICB9LAogICAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgICBuYW1lOiAn56ev5p6BJywKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICBkYXRhOiBzZW50aW1lbnRUaW1lRGF0YS5wb3NpdGl2ZSwKICAgICAgICAgICAgc21vb3RoOiB0cnVlLAogICAgICAgICAgICBjb2xvcjogJyNhNGUyYzYnLAogICAgICAgICAgICAvLyDmt7vliqDpmLTlvbHoibLlnZfvvIzkvb/nlKjkuI7mipjnur/nm7jlkIzpopzoibLnmoTmuJDlj5gKICAgICAgICAgICAgYXJlYVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6IHsKICAgICAgICAgICAgICAgIHR5cGU6ICdsaW5lYXInLAogICAgICAgICAgICAgICAgeDogMCwKICAgICAgICAgICAgICAgIHk6IDAsCiAgICAgICAgICAgICAgICB4MjogMCwKICAgICAgICAgICAgICAgIHkyOiAxLAogICAgICAgICAgICAgICAgY29sb3JTdG9wczogW3sKICAgICAgICAgICAgICAgICAgb2Zmc2V0OiAwLAogICAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoMTY0LCAyMjYsIDE5OCwgMC41KScKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgb2Zmc2V0OiAxLAogICAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoMTY0LCAyMjYsIDE5OCwgMCknCiAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwgewogICAgICAgICAgICBuYW1lOiAn5Lit5oCnJywKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICBkYXRhOiBzZW50aW1lbnRUaW1lRGF0YS5uZXV0cmFsLAogICAgICAgICAgICBzbW9vdGg6IHRydWUsCiAgICAgICAgICAgIGNvbG9yOiAnIzQ4YzBhMycsCiAgICAgICAgICAgIC8vIOa3u+WKoOmYtOW9seiJsuWdl++8jOS9v+eUqOS4juaKmOe6v+ebuOWQjOminOiJsueahOa4kOWPmAogICAgICAgICAgICBhcmVhU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogewogICAgICAgICAgICAgICAgdHlwZTogJ2xpbmVhcicsCiAgICAgICAgICAgICAgICB4OiAwLAogICAgICAgICAgICAgICAgeTogMCwKICAgICAgICAgICAgICAgIHgyOiAwLAogICAgICAgICAgICAgICAgeTI6IDEsCiAgICAgICAgICAgICAgICBjb2xvclN0b3BzOiBbewogICAgICAgICAgICAgICAgICBvZmZzZXQ6IDAsCiAgICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiYSg3MiwgMTkyLCAxNjMsIDAuNSknCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIG9mZnNldDogMSwKICAgICAgICAgICAgICAgICAgY29sb3I6ICdyZ2JhKDcyLCAxOTIsIDE2MywgMCknCiAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwgewogICAgICAgICAgICBuYW1lOiAn5raI5p6BJywKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICBkYXRhOiBzZW50aW1lbnRUaW1lRGF0YS5uZWdhdGl2ZSwKICAgICAgICAgICAgc21vb3RoOiB0cnVlLAogICAgICAgICAgICBjb2xvcjogJyM1NDk2ODgnLAogICAgICAgICAgICAvLyDmt7vliqDpmLTlvbHoibLlnZfvvIzkvb/nlKjkuI7mipjnur/nm7jlkIzpopzoibLnmoTmuJDlj5gKICAgICAgICAgICAgYXJlYVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6IHsKICAgICAgICAgICAgICAgIHR5cGU6ICdsaW5lYXInLAogICAgICAgICAgICAgICAgeDogMCwKICAgICAgICAgICAgICAgIHk6IDAsCiAgICAgICAgICAgICAgICB4MjogMCwKICAgICAgICAgICAgICAgIHkyOiAxLAogICAgICAgICAgICAgICAgY29sb3JTdG9wczogW3sKICAgICAgICAgICAgICAgICAgb2Zmc2V0OiAwLAogICAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoODQsIDE1MCwgMTM2LCAwLjUpJwogICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICBvZmZzZXQ6IDEsCiAgICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiYSg4NCwgMTUwLCAxMzYsIDApJwogICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH1dCiAgICAgICAgfTsKICAgICAgICBzZW50aW1lbnRUaW1lQ2hhcnQuc2V0T3B0aW9uKHNlbnRpbWVudFRpbWVPcHRpb24pOwogICAgICB9KTsKICAgIH0sCiAgICBjYWxjdWxhdGVTZW50aW1lbnREYXRhKCkgewogICAgICBjb25zdCBzZW50aW1lbnRzID0gWy4uLnRoaXMucmVzdWx0cy5yZW5taW4sIC4uLnRoaXMucmVzdWx0cy53ZWlibywgLi4udGhpcy5yZXN1bHRzLnRpZWJhLCAuLi50aGlzLnJlc3VsdHMud2VjaGF0XS5tYXAoaXRlbSA9PiBpdGVtLnNlbnRpbWVudCk7CiAgICAgIGNvbnN0IHBvc2l0aXZlQ291bnQgPSBzZW50aW1lbnRzLmZpbHRlcihzZW50aW1lbnQgPT4gc2VudGltZW50ID4gMC43KS5sZW5ndGg7CiAgICAgIGNvbnN0IG5ldXRyYWxDb3VudCA9IHNlbnRpbWVudHMuZmlsdGVyKHNlbnRpbWVudCA9PiBzZW50aW1lbnQgPj0gMC4zICYmIHNlbnRpbWVudCA8PSAwLjcpLmxlbmd0aDsKICAgICAgY29uc3QgbmVnYXRpdmVDb3VudCA9IHNlbnRpbWVudHMuZmlsdGVyKHNlbnRpbWVudCA9PiBzZW50aW1lbnQgPCAwLjMpLmxlbmd0aDsKICAgICAgY29uc3QgdG90YWxDb3VudCA9IHNlbnRpbWVudHMubGVuZ3RoOwogICAgICByZXR1cm4gW3sKICAgICAgICB2YWx1ZTogcG9zaXRpdmVDb3VudCwKICAgICAgICBuYW1lOiAn56ev5p6BJwogICAgICB9LCB7CiAgICAgICAgdmFsdWU6IG5ldXRyYWxDb3VudCwKICAgICAgICBuYW1lOiAn5Lit5oCnJwogICAgICB9LCB7CiAgICAgICAgdmFsdWU6IG5lZ2F0aXZlQ291bnQsCiAgICAgICAgbmFtZTogJ+a2iOaegScKICAgICAgfV07CiAgICB9LAogICAgLy8g6K6h566X5Zub5Liq5p2l5rqQ55qE5oOF5oSf5Y2g5q+UCiAgICAvLyDorqHnrpflm5vkuKrmnaXmupDlnKjlkITmg4XmhJ/kuIvnmoTljaDmr5QKICAgIGNhbGN1bGF0ZVNvdXJjZVNlbnRpbWVudERhdGEoKSB7CiAgICAgIGNvbnN0IHNvdXJjZXMgPSBbJ3Jlbm1pbicsICd3ZWlibycsICd0aWViYScsICd3ZWNoYXQnXTsKICAgICAgY29uc3Qgc291cmNlRGF0YSA9IFtdOwogICAgICBjb25zdCBhbGxTZW50aW1lbnRzID0gewogICAgICAgIHBvc2l0aXZlOiBbXSwKICAgICAgICBuZXV0cmFsOiBbXSwKICAgICAgICBuZWdhdGl2ZTogW10KICAgICAgfTsKICAgICAgc291cmNlcy5mb3JFYWNoKHNvdXJjZSA9PiB7CiAgICAgICAgY29uc3Qgc2VudGltZW50cyA9IHRoaXMucmVzdWx0c1tzb3VyY2VdLm1hcChpdGVtID0+IGl0ZW0uc2VudGltZW50KTsKICAgICAgICBhbGxTZW50aW1lbnRzLnBvc2l0aXZlLnB1c2goc2VudGltZW50cy5maWx0ZXIoc2VudGltZW50ID0+IHNlbnRpbWVudCA+IDAuNykubGVuZ3RoKTsKICAgICAgICBhbGxTZW50aW1lbnRzLm5ldXRyYWwucHVzaChzZW50aW1lbnRzLmZpbHRlcihzZW50aW1lbnQgPT4gc2VudGltZW50ID49IDAuMyAmJiBzZW50aW1lbnQgPD0gMC43KS5sZW5ndGgpOwogICAgICAgIGFsbFNlbnRpbWVudHMubmVnYXRpdmUucHVzaChzZW50aW1lbnRzLmZpbHRlcihzZW50aW1lbnQgPT4gc2VudGltZW50IDwgMC4zKS5sZW5ndGgpOwogICAgICB9KTsKICAgICAgY29uc3QgYWRkU291cmNlRGF0YSA9IChzZW50aW1lbnRUeXBlLCBjb2xvcikgPT4gewogICAgICAgIHNvdXJjZXMuZm9yRWFjaCgoc291cmNlLCBpbmRleCkgPT4gewogICAgICAgICAgc291cmNlRGF0YS5wdXNoKHsKICAgICAgICAgICAgdmFsdWU6IGFsbFNlbnRpbWVudHNbc2VudGltZW50VHlwZV1baW5kZXhdLAogICAgICAgICAgICBuYW1lOiBgJHtzb3VyY2V9IC0gJHtzZW50aW1lbnRUeXBlfWAKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9OwogICAgICBhZGRTb3VyY2VEYXRhKCdwb3NpdGl2ZScsICcjYTRlMmM2Jyk7CiAgICAgIGFkZFNvdXJjZURhdGEoJ25ldXRyYWwnLCAnIzQ4YzBhMycpOwogICAgICBhZGRTb3VyY2VEYXRhKCduZWdhdGl2ZScsICcjNTQ5Njg4Jyk7CiAgICAgIHJldHVybiBzb3VyY2VEYXRhOwogICAgfSwKICAgIGNhbGN1bGF0ZVNlbnRpbWVudFRpbWVEYXRhKCkgewogICAgICBjb25zdCByZW5taW5TZW50aW1lbnRUaW1lcyA9IHRoaXMucmVzdWx0cy5yZW5taW4ubWFwKGl0ZW0gPT4gKHsKICAgICAgICB0aW1lOiBpdGVtLmRpc3BsYXlUaW1lLAogICAgICAgIHNlbnRpbWVudDogaXRlbS5zZW50aW1lbnQKICAgICAgfSkpOwogICAgICBjb25zb2xlLmxvZyhyZW5taW5TZW50aW1lbnRUaW1lcyk7CiAgICAgIGNvbnN0IHdlaWJvU2VudGltZW50VGltZXMgPSB0aGlzLnJlc3VsdHMud2VpYm8ubWFwKGl0ZW0gPT4gKHsKICAgICAgICB0aW1lOiBpdGVtLmNyZWF0ZWRfYXQsCiAgICAgICAgc2VudGltZW50OiBpdGVtLnNlbnRpbWVudAogICAgICB9KSk7CiAgICAgIGNvbnN0IHRpZWJhU2VudGltZW50VGltZXMgPSB0aGlzLnJlc3VsdHMudGllYmEubWFwKGl0ZW0gPT4gKHsKICAgICAgICB0aW1lOiBpdGVtLnRpbWUsCiAgICAgICAgc2VudGltZW50OiBpdGVtLnNlbnRpbWVudAogICAgICB9KSk7CiAgICAgIGNvbnN0IHdlY2hhdFNlbnRpbWVudFRpbWVzID0gdGhpcy5yZXN1bHRzLndlY2hhdC5tYXAoaXRlbSA9PiAoewogICAgICAgIHRpbWU6IGl0ZW0udGltZSwKICAgICAgICBzZW50aW1lbnQ6IGl0ZW0uc2VudGltZW50CiAgICAgIH0pKTsKICAgICAgY29uc3QgYWxsU2VudGltZW50cyA9IFsuLi5yZW5taW5TZW50aW1lbnRUaW1lcywgLi4ud2VpYm9TZW50aW1lbnRUaW1lcywgLi4udGllYmFTZW50aW1lbnRUaW1lcywgLi4ud2VjaGF0U2VudGltZW50VGltZXNdOwoKICAgICAgLy8g5pe26Ze05qC85byP5YyW5Li6ICdZWVlZLU1NJwogICAgICBjb25zdCBmb3JtYXRUb01vbnRoID0gdGltZSA9PiB7CiAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHRpbWUpOwogICAgICAgIHJldHVybiBgJHtkYXRlLmdldEZ1bGxZZWFyKCl9LSR7U3RyaW5nKGRhdGUuZ2V0TW9udGgoKSArIDEpLnBhZFN0YXJ0KDIsICcwJyl9YDsKICAgICAgfTsKCiAgICAgIC8vIOagvOW8j+WMluaJgOacieaXtumXtOS4uuaciOS7vQogICAgICBjb25zdCB0aW1lTGFiZWxzID0gWy4uLm5ldyBTZXQoYWxsU2VudGltZW50cy5tYXAoaXRlbSA9PiBmb3JtYXRUb01vbnRoKGl0ZW0udGltZSkpKV0uc29ydCgpOwogICAgICBjb25zdCBwb3NpdGl2ZSA9IHRpbWVMYWJlbHMubWFwKGxhYmVsID0+IGFsbFNlbnRpbWVudHMuZmlsdGVyKGl0ZW0gPT4gZm9ybWF0VG9Nb250aChpdGVtLnRpbWUpID09PSBsYWJlbCAmJiBpdGVtLnNlbnRpbWVudCA+IDAuNykubGVuZ3RoKTsKICAgICAgY29uc3QgbmV1dHJhbCA9IHRpbWVMYWJlbHMubWFwKGxhYmVsID0+IGFsbFNlbnRpbWVudHMuZmlsdGVyKGl0ZW0gPT4gZm9ybWF0VG9Nb250aChpdGVtLnRpbWUpID09PSBsYWJlbCAmJiBpdGVtLnNlbnRpbWVudCA+PSAwLjMgJiYgaXRlbS5zZW50aW1lbnQgPD0gMC43KS5sZW5ndGgpOwogICAgICBjb25zdCBuZWdhdGl2ZSA9IHRpbWVMYWJlbHMubWFwKGxhYmVsID0+IGFsbFNlbnRpbWVudHMuZmlsdGVyKGl0ZW0gPT4gZm9ybWF0VG9Nb250aChpdGVtLnRpbWUpID09PSBsYWJlbCAmJiBpdGVtLnNlbnRpbWVudCA8IDAuMykubGVuZ3RoKTsKICAgICAgcmV0dXJuIHsKICAgICAgICBsYWJlbHM6IHRpbWVMYWJlbHMsCiAgICAgICAgcG9zaXRpdmU6IHBvc2l0aXZlLAogICAgICAgIG5ldXRyYWw6IG5ldXRyYWwsCiAgICAgICAgbmVnYXRpdmU6IG5lZ2F0aXZlCiAgICAgIH07CiAgICB9LAogICAgY2FsY3VsYXRlVGltZURhdGEoKSB7CiAgICAgIC8vIOWwhuaXtumXtOi9rOWMluS4uuaciOS7ve+8iCdZWVlZLU1NJ++8iQogICAgICBjb25zdCByZW5taW5UaW1lID0gdGhpcy5yZXN1bHRzLnJlbm1pbi5tYXAoaXRlbSA9PiBpdGVtLmRpc3BsYXlUaW1lKTsKICAgICAgY29uc29sZS5sb2cocmVubWluVGltZSk7CiAgICAgIGNvbnN0IHdlaWJvVGltZSA9IHRoaXMucmVzdWx0cy53ZWliby5tYXAoaXRlbSA9PiBpdGVtLmNyZWF0ZWRfYXQpOwogICAgICBjb25zdCB0aWViYVRpbWUgPSB0aGlzLnJlc3VsdHMudGllYmEubWFwKGl0ZW0gPT4gaXRlbS50aW1lKTsKICAgICAgY29uc3Qgd2VjaGF0VGltZSA9IHRoaXMucmVzdWx0cy53ZWNoYXQubWFwKGl0ZW0gPT4gaXRlbS50aW1lKTsKCiAgICAgIC8vIOagvOW8j+WMluaXtumXtOS4uuaciOS7vQogICAgICBjb25zdCBmb3JtYXRUb01vbnRoID0gdGltZSA9PiB7CiAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHRpbWUpOwogICAgICAgIHJldHVybiBgJHtkYXRlLmdldEZ1bGxZZWFyKCl9LSR7U3RyaW5nKGRhdGUuZ2V0TW9udGgoKSArIDEpLnBhZFN0YXJ0KDIsICcwJyl9YDsKICAgICAgfTsKCiAgICAgIC8vIOWwhuaJgOacieaXtumXtOi9rOaNouS4uuaciOS7vQogICAgICBjb25zdCB0aW1lTGFiZWxzID0gWy4uLm5ldyBTZXQoWy4uLnJlbm1pblRpbWUsIC4uLndlaWJvVGltZSwgLi4udGllYmFUaW1lLCAuLi53ZWNoYXRUaW1lXS5tYXAoZm9ybWF0VG9Nb250aCkpXS5zb3J0KCk7CiAgICAgIGNvbnN0IHJlbm1pbiA9IHRpbWVMYWJlbHMubWFwKGxhYmVsID0+IHJlbm1pblRpbWUuZmlsdGVyKGl0ZW0gPT4gZm9ybWF0VG9Nb250aChpdGVtKSA9PT0gbGFiZWwpLmxlbmd0aCk7CiAgICAgIGNvbnN0IHdlaWJvID0gdGltZUxhYmVscy5tYXAobGFiZWwgPT4gd2VpYm9UaW1lLmZpbHRlcihpdGVtID0+IGZvcm1hdFRvTW9udGgoaXRlbSkgPT09IGxhYmVsKS5sZW5ndGgpOwogICAgICBjb25zdCB0aWViYSA9IHRpbWVMYWJlbHMubWFwKGxhYmVsID0+IHRpZWJhVGltZS5maWx0ZXIoaXRlbSA9PiBmb3JtYXRUb01vbnRoKGl0ZW0pID09PSBsYWJlbCkubGVuZ3RoKTsKICAgICAgY29uc3Qgd2VjaGF0ID0gdGltZUxhYmVscy5tYXAobGFiZWwgPT4gd2VjaGF0VGltZS5maWx0ZXIoaXRlbSA9PiBmb3JtYXRUb01vbnRoKGl0ZW0pID09PSBsYWJlbCkubGVuZ3RoKTsKICAgICAgcmV0dXJuIHsKICAgICAgICBsYWJlbHM6IHRpbWVMYWJlbHMsCiAgICAgICAgcmVubWluOiByZW5taW4sCiAgICAgICAgd2VpYm86IHdlaWJvLAogICAgICAgIHRpZWJhOiB0aWViYSwKICAgICAgICB3ZWNoYXQ6IHdlY2hhdAogICAgICB9OwogICAgfSwKICAgIGNsb3NlQW5hbHlzaXMoKSB7CiAgICAgIHRoaXMuc2hvd0FuYWx5c2lzID0gZmFsc2U7CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["SideBorder","echarts","axios","name","data","key_word","loading","searchResult","results","showAnalysis","timeFilters","label","value","sentimentFilters","sourceFilters","selectedTime","selectedSentiment","selectedSources","historySearchTopics","currentKeyWord","components","mounted","$nextTick","getHistorySearch","filters","snippet","length","slice","methods","goToDetailPage","$router","push","path","query","key","getSentimentLabel","sentiment","getSentimentClass","search","$message","error","saveHistorySearch","renmin","weibo","tieba","wechat","cursor","hasMoreData","_pageData$weibo","_pageData$renmin","_pageData$weibo2","_pageData$tieba","_pageData$wechat","response","$axios","get","pageData","console","log","warning","forEach","item","result","code","newTopics","concat","topic","tag","post","message","searchHistory","params","Array","isArray","deleteHistory","filter","toggleFilter","type","includes","s","filterItems","items","sourceType","now","Date","itemDate","created_at","displayTime","time","timeDiff","ranges","week","month","year","sentimentValue","sentimentMap","positive","neutral","negative","renderCharts","renminCount","weiboCount","tiebaCount","wechatCount","total","$refs","sourceChart","$echarts","init","sourceOption","title","text","left","top","textStyle","fontSize","fontWeight","color","tooltip","trigger","formatter","series","radius","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","setOption","timeData","calculateTimeData","timeLineChart","timeLineOption","legend","xAxis","boundaryGap","labels","axisLabel","yAxis","axisTick","alignWithLabel","minInterval","grid","right","bottom","smooth","areaStyle","x","y","x2","y2","colorStops","offset","sentimentData","calculateSentimentData","sourceSentimentData","calculateSourceSentimentData","sentimentChart","sentimentOption","borderWidth","borderColor","borderRadius","show","position","sentimentTimeData","calculateSentimentTimeData","sentimentTimeChart","sentimentTimeOption","sentiments","map","positiveCount","neutralCount","negativeCount","totalCount","sources","sourceData","allSentiments","source","addSourceData","sentimentType","index","renminSentimentTimes","weiboSentimentTimes","tiebaSentimentTimes","wechatSentimentTimes","formatToMonth","date","getFullYear","String","getMonth","padStart","timeLabels","Set","sort","renminTime","weiboTime","tiebaTime","wechatTime","closeAnalysis"],"sources":["src/pages/all_view.vue"],"sourcesContent":["<template>\r\n    <div class=\"all_view\">\r\n      <div class=\"side\">\r\n        <SideBorder />\r\n      </div>\r\n  \r\n      <div class=\"main-content\">\r\n      <!-- 顶部搜索区域 -->\r\n      <div class=\"search-area\">\r\n        <div class=\"input-wrapper\">\r\n          <div class=\"input\">\r\n            <input type=\"text\" v-model=\"key_word\" class=\"key\" placeholder=\"搜索话题\" />\r\n          </div>\r\n          <div class=\"action-buttons\">\r\n            <button @click=\"search\" class=\"tech-button\">搜索</button>\r\n          </div>\r\n\r\n          <!-- 历史搜索框 -->\r\n        <div class=\"history-panel\" >\r\n          <div class=\"history-header\">\r\n            <span>搜索历史</span>\r\n          </div>\r\n          <div class=\"history-list\">\r\n            <div class=\"history-item\" v-for=\"(topic, index) in historySearchTopics\" :key=\"index\">\r\n              <span @click=\"searchHistory(topic)\">{{ topic }}</span>\r\n              <i class=\"el-icon-close\" @click.stop=\"deleteHistory(topic)\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n      \r\n\r\n        <div class=\"filter-bar\">\r\n        <!-- 时间筛选 -->\r\n        <div class=\"filter-group\">\r\n          <span class=\"filter-label\">时间：</span>\r\n          <button \r\n            v-for=\"time in timeFilters\" \r\n            :key=\"time.value\"\r\n            @click=\"toggleFilter('time', time.value)\"\r\n            :class=\"{active: selectedTime === time.value}\"\r\n          >\r\n            {{ time.label }}\r\n          </button>\r\n        </div>\r\n\r\n        <!-- 情感筛选 -->\r\n        <div class=\"filter-group\">\r\n          <span class=\"filter-label\">情感：</span>\r\n          <button \r\n            v-for=\"sentiment in sentimentFilters\" \r\n            :key=\"sentiment.value\"\r\n            @click=\"toggleFilter('sentiment', sentiment.value)\"\r\n            :class=\"{active: selectedSentiment === sentiment.value}\"\r\n          >\r\n            {{ sentiment.label }}\r\n          </button>\r\n        </div>\r\n\r\n        <!-- 来源筛选 -->\r\n        <div class=\"filter-group\">\r\n          <span class=\"filter-label\">来源：</span>\r\n          <button\r\n            v-for=\"source in sourceFilters\"\r\n            :key=\"source.value\"\r\n            @click=\"toggleFilter('source', source.value)\"\r\n            :class=\"{active: selectedSources.includes(source.value)}\"\r\n          >\r\n            {{ source.label }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n         <!-- 加载动画 -->\r\n         <div v-if=\"loading\" class=\"loading-overlay\">\r\n          <div class=\"wavy\">\r\n            <span style=\"--i:1;\">l</span>\r\n            <span style=\"--i:2;\">o</span>\r\n            <span style=\"--i:3;\">a</span>\r\n            <span style=\"--i:4;\">d</span>\r\n            <span style=\"--i:5;\">i</span>\r\n            <span style=\"--i:6;\">n</span>\r\n            <span style=\"--i:7;\">g</span>\r\n            <span style=\"--i:8;\">.</span>\r\n            <span style=\"--i:9;\">.</span>\r\n            <span style=\"--i:10;\">.</span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 搜索结果 -->\r\n        <div class=\"searchResult\" v-show=\"searchResult\">\r\n          <div class=\"title\">\r\n            有关{{ key_word }}的话题\r\n            <button @click=\"renderCharts\" class=\"tech-button\">去分析</button>\r\n            <button @click=\"goToDetailPage\" class=\"tech-button\">查看详情</button>\r\n            <div class=\"close\" @click=\"searchResult = false\">\r\n              <i class=\"el-icon-close\"></i>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- 人民网搜索结果 -->\r\n          <div v-if=\"results.renmin\" class=\"renmin_results\">\r\n            <div class=\"result\" v-for=\"(item, index) in filterItems(results.renmin, 'renmin')\" :key=\"index\">\r\n              <!-- <div class=\"result\" v-for=\"(item, index) in results.renmin\" :key=\"index\"> -->\r\n                <div class=\"item-container\">\r\n                  <div class=\"item-title\">\r\n                    <a :href=\"item.url\" target=\"_blank\">{{ item.title }}</a>\r\n                  </div>\r\n                  <div class=\"item-sentiment\" :class=\"getSentimentClass(item.sentiment)\">\r\n                    {{ getSentimentLabel(item.sentiment) }}\r\n                  </div>\r\n                  <div class=\"item-source\">来源: 人民网</div>\r\n                  <div class=\"item-time\">{{ item.displayTime }}</div>\r\n                </div>\r\n              <!-- </div> -->\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- 贴吧搜索结果 -->\r\n          <div v-if=\"results.tieba\" class=\"tieba_results\">\r\n            <div class=\"result\" v-for=\"(item, index) in filterItems(results.tieba, 'tieba')\" :key=\"index\">\r\n              <!-- <div class=\"result\" v-for=\"(item, index) in results.tieba\" :key=\"index\"> -->\r\n                <div class=\"item-container\">\r\n                  <div class=\"item-title\">\r\n                    <a :href=\"item.url\" target=\"_blank\">{{ item.title }}</a>\r\n                  </div>\r\n                  <div class=\"item-sentiment\" :class=\"getSentimentClass(item.sentiment)\">\r\n                    {{ getSentimentLabel(item.sentiment) }}\r\n                  </div>\r\n                  <div class=\"item-source\">来源: 贴吧</div>\r\n                  <div class=\"item-time\">{{ item.time }}</div>\r\n                </div>\r\n              <!-- </div> -->\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 微信搜索结果 -->\r\n          <div v-if=\"results.wechat\" class=\"wechat_results\">\r\n            <div class=\"result\" v-for=\"(item, index) in filterItems(results.wechat, 'wechat')\" :key=\"index\">\r\n              <!-- <div class=\"result\" v-for=\"(item, index) in results.wechat\" :key=\"index\"> -->\r\n                <div class=\"item-container\">\r\n                  <div class=\"item-title\">\r\n                      <a :href=\"`https://weixin.sogou.com${item.url}`\"  target=\"_blank\">{{ item.title }}</a>\r\n                  </div>\r\n                  <div class=\"item-sentiment\" :class=\"getSentimentClass(item.sentiment)\">\r\n                    {{ getSentimentLabel(item.sentiment) }}\r\n                  </div>\r\n                  <div class=\"item-source\">\r\n                      来源: 微信 {{ item.source }}\r\n                  </div>\r\n                  <div class=\"item-time\">{{ item.time }}</div>\r\n                </div>\r\n              <!-- </div> -->\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- 微博搜索结果 -->\r\n          <div v-if=\"results.weibo\" class=\"weibo_results\">\r\n            <div class=\"result\" v-for=\"(item, index) in filterItems(results.weibo, 'weibo')\" :key=\"index\">\r\n              <!-- <div class=\"result\" v-for=\"(item, index) in results.weibo\" :key=\"index\"> -->\r\n                <div class=\"item-container\">\r\n                  <div class=\"item-title\">\r\n                    {{ item.text.slice(0, 20) + \"...\" | snippet }}\r\n                  </div>\r\n                  <div class=\"item-sentiment\" :class=\"getSentimentClass(item.sentiment)\">\r\n                    {{ getSentimentLabel(item.sentiment) }}\r\n                  </div>\r\n                  <div class=\"item-source\">来源: 微博</div>\r\n                  <div class=\"item-time\">{{ item.created_at }}</div>\r\n                </div>\r\n              <!-- </div> -->\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <!-- 分析图表 -->\r\n      <div class=\"analysis-charts\" v-if=\"showAnalysis\">\r\n        <div class=\"close-charts\" @click=\"closeAnalysis\">\r\n          <i class=\"el-icon-circle-close\"></i>\r\n        </div>\r\n        <!-- 信息来源占比图（饼状图） -->\r\n        <div class=\"chart-container\">\r\n          <div ref=\"sourceChart\" style=\"width: 100%; height: 260px;\"></div>\r\n        </div>\r\n\r\n        <!-- 发布时间折线图 -->\r\n        <div class=\"chart-container\">\r\n          <div ref=\"timeLineChart\" style=\"width: 100%; height: 260px;\"></div>\r\n        </div>\r\n\r\n        <!-- 情感分析占比图 -->\r\n        <div class=\"chart-container\">\r\n          <div ref=\"sentimentChart\" style=\"width: 100%; height: 260px;\"></div>\r\n        </div>\r\n\r\n        <!-- 情感分析随时间变化折线图 -->\r\n        <div class=\"chart-container\">\r\n          <div ref=\"sentimentTimeChart\" style=\"width: 100%; height: 260px;\"></div>\r\n        </div>\r\n    </div>\r\n    </div>  \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import SideBorder from \"../components/Side_border\";\r\n  import * as echarts from 'echarts';\r\n  import axios from \"axios\";\r\n\r\n  export default {\r\n    name: \"search\",\r\n    \r\n    data() {\r\n      return {\r\n        key_word: \"\",\r\n        loading: false, // 控制加载状态\r\n        searchResult: true,\r\n        results: {},\r\n        showAnalysis: false, // 用来控制图表的显示\r\n        timeFilters: [\r\n          { label: '一周内', value: 'week' },\r\n          { label: '一个月内', value: 'month' },\r\n          { label: '一年内', value: 'year' }\r\n        ],\r\n        sentimentFilters: [\r\n          { label: '积极', value: 'positive' },\r\n          { label: '中性', value: 'neutral' },\r\n          { label: '消极', value: 'negative' }\r\n        ],\r\n        sourceFilters: [\r\n          { label: '微博', value: 'weibo' },\r\n          { label: '人民网', value: 'renmin' },\r\n          { label: '微信', value: 'wechat' },\r\n          { label: '贴吧', value: 'tieba' }\r\n        ],\r\n        selectedTime: null,\r\n        selectedSentiment: null,\r\n        selectedSources: [],\r\n        //historySearchList: [], // 历史搜索列表\r\n        historySearchTopics: [], // 新的历史搜索主题列表\r\n        currentKeyWord: \"\"\r\n      };\r\n    },\r\n    components: {\r\n      SideBorder,\r\n    },\r\n    // 组件挂载后调用 getHistorySearch 方法\r\n    mounted() {\r\n    this.$nextTick(() => {\r\n        this.getHistorySearch();\r\n    });\r\n    },\r\n    \r\n\r\n    filters: {\r\n      snippet(value) {\r\n        if (value.length > 200) return value.slice(0, 200) + \"...\";\r\n        return value;\r\n      }\r\n    },\r\n    \r\n    methods: {\r\n      goToDetailPage() {\r\n      // 使用 this.$router.push 进行路由跳转并传递话题参数\r\n      this.$router.push({\r\n        path: '/all_detail',\r\n        query: {\r\n          key: this.key_word\r\n        }\r\n      });\r\n    },\r\n    \r\n      // 获取情感标签\r\n      getSentimentLabel(sentiment) {\r\n        if (sentiment > 0.7) return '积极';\r\n        if (sentiment < 0.3) return '消极';\r\n        return '中性';\r\n      },\r\n  \r\n      // 获取情感标签的CSS类\r\n      getSentimentClass(sentiment) {\r\n        if (sentiment > 0.7) return 'positive';\r\n        if (sentiment < 0.3) return 'negative';\r\n        return 'neutral';\r\n      },\r\n  \r\n      async search() {\r\n        this.loading = true; // 开始加载，显示加载动画\r\n        if (!this.key_word) {\r\n          this.$message.error(\"请输入搜索关键词！\");\r\n          return;\r\n        }\r\n  \r\n        // 如果当前关键词和之前的不同，进行搜索\r\n        if (this.key_word !== this.currentKeyWord) {\r\n          this.searchResult = true;\r\n          this.results = {}; // 清空旧结果\r\n          this.currentKeyWord = this.key_word; // 更新当前搜索关键词\r\n          // 添加历史搜索记录\r\n          await this.saveHistorySearch(this.key_word);\r\n          await this.getHistorySearch();\r\n        }\r\n  \r\n        const results = { renmin: [], weibo: [], tieba: [], wechat: [] };\r\n        let cursor = 1; // 从第一页开始\r\n        let hasMoreData = true; // 标记是否还有更多数据\r\n  \r\n        try {\r\n          while (hasMoreData && cursor <= 1) { // 只爬取指定页数\r\n            const response = await this.$axios.get(\r\n              `multi_search?tag=${this.key_word}&cursor=${cursor}`\r\n            );\r\n            const pageData = response.data.data;\r\n            console.log(pageData)\r\n  \r\n            if (!pageData.renmin && !pageData.weibo && !pageData.tieba && !pageData.wechat) {\r\n              this.$message.warning(`第 ${cursor} 页没有更多结果`);\r\n              break;\r\n            }\r\n  \r\n            // 合并数据并添加情感标签\r\n            if (pageData.renmin) {\r\n              pageData.renmin.forEach(item => {\r\n                item.sentiment = item.sentiment || 0; // 获取后端返回的情感得分\r\n              });\r\n              results.renmin.push(...pageData.renmin);\r\n            }\r\n  \r\n            if (pageData.tieba) {\r\n              pageData.tieba.forEach(item => {\r\n                item.sentiment = item.sentiment || 0; // 获取后端返回的情感得分\r\n              });\r\n              results.tieba.push(...pageData.tieba);\r\n            }\r\n\r\n            if (pageData.wechat) {\r\n              pageData.wechat.forEach(item => {\r\n                item.sentiment = item.sentiment || 0; // 获取后端返回的情感得分\r\n              });\r\n              results.wechat.push(...pageData.wechat);\r\n            }\r\n\r\n            if (pageData.weibo?.result) {\r\n              pageData.weibo.result.forEach(item => {\r\n                item.sentiment = item.sentiment || 0; // 获取后端返回的情感得分\r\n              });\r\n              results.weibo.push(...pageData.weibo.result);\r\n            }\r\n  \r\n            // 判断是否继续爬取\r\n            hasMoreData = pageData.renmin?.length > 0 || pageData.weibo?.result?.length > 0 || pageData.tieba?.length > 0 || pageData.wechat?.length > 0;\r\n            cursor++; // 下一页\r\n          }\r\n  \r\n          this.results = results;\r\n          \r\n          if (results.renmin.length === 0 && results.weibo.length === 0 && results.tieba.length === 0 && results.wechat.length === 0) {\r\n            this.$message.error(\"没有找到相关结果\");\r\n          }\r\n         \r\n        } catch (error) {\r\n          console.error(\"搜索失败\", error);\r\n          this.$message.error(\"搜索失败，请稍后再试！\");\r\n        }finally {\r\n        this.loading = false; // 加载完成，隐藏加载动画\r\n      }\r\n      },\r\n       // 获取历史搜索内容\r\n       async getHistorySearch() {\r\n            try {\r\n                const response = await axios.get('/history_topic');\r\n                console.log('response.data.code 的类型：', typeof response.data.code);\r\n                if (response.data.code === 200) {\r\n                  console.log(response.data);\r\n                    // 将获取到的 topic 追加到历史搜索主题列表后面\r\n                    const newTopics = this.historySearchTopics.concat(response.data.data.topic);\r\n                    this.historySearchTopics = [...newTopics];\r\n                    console.log('更新后的 historySearchTopics：', this.historySearchTopics);\r\n                }\r\n            } catch (error) {\r\n                console.error('获取历史搜索内容失败', error);\r\n            }\r\n        },\r\n\r\n    // 保存历史搜索记录到后端\r\n    async saveHistorySearch(tag) {\r\n      try {\r\n        const response = await axios.post('/save_history_search', {\r\n          tag: tag\r\n        });\r\n        if (response.data.message === \"保存成功\") {\r\n          console.log(\"历史搜索记录保存成功\");\r\n        } else {\r\n          console.error(\"历史搜索记录保存失败\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"保存历史搜索记录失败\", error);\r\n      }\r\n    },\r\n\r\n   // 点击展示历史搜索内容\r\n    async searchHistory(tag) {\r\n      this.key_word = tag;\r\n      try {\r\n        const response = await axios.get('/history_search', {\r\n          params: {\r\n            tag: this.key_word\r\n          }\r\n        });\r\n        console.log(response);\r\n        if (response.data.code === 200) {\r\n          // 获取后端返回的数据\r\n          let data = response.data.data;\r\n          // 检查 data 中的 weibo 字段是否为数组，如果不是则将其设为空数组\r\n          if (!Array.isArray(data.weibo)) {\r\n            data.weibo = [];\r\n          }\r\n          this.results = data;\r\n          console.log(this.results);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"获取历史搜索失败\", error);\r\n      }\r\n    },\r\n\r\n    // 删除历史搜索内容\r\n    async deleteHistory(tag) {\r\n      try {\r\n        const response = await axios.get('/history_del', {\r\n          params: {\r\n            tag: tag\r\n          }\r\n        });\r\n        console.log(response);\r\n        if (response.data.code === 200) {\r\n          this.historySearchTopics = this.historySearchTopics.filter(item => item !== tag);\r\n        } else {\r\n          this.$message.error(\"删除历史记录失败\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"删除历史搜索失败\", error);\r\n        this.$message.error(\"删除历史记录失败\");\r\n      }\r\n    },\r\n\r\n      // 筛选切换逻辑\r\n  toggleFilter(type, value) {\r\n    switch(type) {\r\n      case 'time':\r\n        this.selectedTime = this.selectedTime === value ? null : value\r\n        break\r\n      case 'sentiment':\r\n        this.selectedSentiment = this.selectedSentiment === value ? null : value\r\n        break\r\n      case 'source':\r\n        if (this.selectedSources.includes(value)) {\r\n          this.selectedSources = this.selectedSources.filter(s => s !== value)\r\n        } else {\r\n          this.selectedSources = [...this.selectedSources, value]\r\n        }\r\n        break\r\n    }\r\n  },\r\n\r\n  // 过滤逻辑\r\n  filterItems(items, sourceType) {\r\n    const now = new Date()\r\n    return items.filter(item => {\r\n      // 时间过滤\r\n      if (this.selectedTime) {\r\n        const itemDate = new Date(\r\n          sourceType === 'weibo' ? item.created_at : \r\n          sourceType === 'renmin' ? item.displayTime : \r\n          item.time\r\n        )\r\n        const timeDiff = now - itemDate\r\n        \r\n        const ranges = {\r\n          week: 7 * 24 * 60 * 60 * 1000,\r\n          month: 30 * 24 * 60 * 60 * 1000,\r\n          year: 365 * 24 * 60 * 60 * 1000\r\n        }\r\n        if (timeDiff > ranges[this.selectedTime]) return false\r\n      }\r\n\r\n      // 情感过滤\r\n      if (this.selectedSentiment) {\r\n        const sentimentValue = item.sentiment || 0\r\n        const sentimentMap = {\r\n          positive: sentimentValue > 0.7,\r\n          neutral: sentimentValue >= 0.3 && sentimentValue <= 0.7,\r\n          negative: sentimentValue < 0.3\r\n        }\r\n        if (!sentimentMap[this.selectedSentiment]) return false\r\n      }\r\n\r\n      // 来源过滤\r\n      if (this.selectedSources.length > 0 && \r\n          !this.selectedSources.includes(sourceType)) {\r\n        return false\r\n      }\r\n\r\n      return true\r\n    })\r\n  },\r\n\r\n      renderCharts() {\r\n      this.showAnalysis = true; // 显示图表\r\n\r\n      this.$nextTick(() => {\r\n    // 在这里初始化 ECharts 图表\r\n    const renminCount = this.results.renmin? this.results.renmin.length : 0;\r\n    const weiboCount = this.results.weibo? this.results.weibo.length : 0;\r\n    const tiebaCount = this.results.tieba? this.results.tieba.length : 0;\r\n    const wechatCount = this.results.wechat? this.results.wechat.length : 0;\r\n\r\n    const total = renminCount + weiboCount + tiebaCount + wechatCount;\r\n    console.log(this.$refs.sourceChart);\r\n    if (this.$refs.sourceChart) {\r\n      const sourceChart = this.$echarts.init(this.$refs.sourceChart);\r\n      const sourceOption = {\r\n        title: {\r\n          text: '信息来源占比',\r\n          left: 'center',\r\n          top: 'center',\r\n          textStyle: {\r\n            fontSize: 16,\r\n            fontWeight: 'normal',\r\n            color: '#fff'\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n        },\r\n        series: [\r\n          {\r\n            name: '信息来源',\r\n            type: 'pie',\r\n            radius: '50%',\r\n            data: [\r\n              { value: renminCount, name: '人民网' },\r\n              { value: weiboCount, name: '微博' },\r\n              { value: tiebaCount, name: '贴吧' },\r\n              { value: wechatCount, name: '微信' },\r\n            ],\r\n            color: ['#a4e2c6', '#48c0a3', '#549688', '#1685a9'],\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      };\r\n      sourceChart.setOption(sourceOption);\r\n    } else {\r\n      console.error('sourceChart element not found');\r\n    }\r\n\r\n    const timeData = this.calculateTimeData();\r\n    const timeLineChart = this.$echarts.init(this.$refs.timeLineChart);\r\n    const timeLineOption = {\r\n        title: {\r\n            text: '发布时间趋势',\r\n            left: 'center',\r\n            top: 'top',\r\n            textStyle: {\r\n                color: '#fff'\r\n            }\r\n        },\r\n        tooltip: {\r\n            trigger: 'axis'\r\n        },\r\n        legend: {\r\n            data: ['人民网', '微博', '贴吧', '微信'],\r\n            top: '10%',\r\n            textStyle: {\r\n                color: '#fff'\r\n            }\r\n        },\r\n        xAxis: {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: timeData.labels,\r\n            axisLabel: {\r\n                color: '#fff'\r\n            }\r\n        },\r\n        yAxis: {\r\n            type: 'value',\r\n            axisLabel: {\r\n                formatter: '{value} 条',\r\n                color: '#fff'\r\n            },\r\n            axisTick: {\r\n                alignWithLabel: true\r\n            },\r\n            minInterval: 1 // 设置最小刻度间隔为1，确保显示整数\r\n        },\r\n        grid: {\r\n            top: '15%',\r\n            left: '10%',\r\n            right: '8%',\r\n            bottom: '20%'\r\n        },\r\n        series: [\r\n            {\r\n                name: '人民网',\r\n                type: 'line',\r\n                data: timeData.renmin,\r\n                smooth: true,\r\n                color: '#a4e2c6',\r\n                \r\n                areaStyle: {\r\n                    color: {\r\n                        type: 'linear',\r\n                        x: 0,\r\n                        y: 0,\r\n                        x2: 0,\r\n                        y2: 1,\r\n                        colorStops: [\r\n                            {\r\n                                offset: 0,\r\n                                color: 'rgba(164, 226, 198, 0.5)' // 与折线颜色相同，半透明\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: 'rgba(164, 226, 198, 0)' // 完全透明\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                name: '微博',\r\n                type: 'line',\r\n                data: timeData.weibo,\r\n                smooth: true,\r\n                color: '#48c0a3',\r\n                \r\n                areaStyle: {\r\n                    color: {\r\n                        type: 'linear',\r\n                        x: 0,\r\n                        y: 0,\r\n                        x2: 0,\r\n                        y2: 1,\r\n                        colorStops: [\r\n                            {\r\n                                offset: 0,\r\n                                color: 'rgba(72, 192, 163, 0.5)'\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: 'rgba(72, 192, 163, 0)'\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                name: '贴吧',\r\n                type: 'line',\r\n                data: timeData.tieba,\r\n                smooth: true,\r\n                color: '#549688',\r\n                \r\n                areaStyle: {\r\n                    color: {\r\n                        type: 'linear',\r\n                        x: 0,\r\n                        y: 0,\r\n                        x2: 0,\r\n                        y2: 1,\r\n                        colorStops: [\r\n                            {\r\n                                offset: 0,\r\n                                color: 'rgba(84, 150, 136, 0.5)'\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: 'rgba(84, 150, 136, 0)'\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                name: '微信',\r\n                type: 'line',\r\n                data: timeData.wechat,\r\n                smooth: true,\r\n                color: '#1685a9',\r\n                \r\n                areaStyle: {\r\n                    color: {\r\n                        type: 'linear',\r\n                        x: 0,\r\n                        y: 0,\r\n                        x2: 0,\r\n                        y2: 1,\r\n                        colorStops: [\r\n                            {\r\n                                offset: 0,\r\n                                color: 'rgba(22, 133, 169, 0.5)'\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: 'rgba(22, 133, 169, 0)'\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    };\r\n    timeLineChart.setOption(timeLineOption);\r\n\r\n      // 情感分析占比图\r\n    const sentimentData = this.calculateSentimentData();\r\n    const sourceSentimentData = this.calculateSourceSentimentData();\r\n\r\n    const sentimentChart = this.$echarts.init(this.$refs.sentimentChart);\r\n    const sentimentOption = {\r\n        title: {\r\n            text: '情感分析占比',\r\n            left: 'center',\r\n            top: 'center',\r\n            textStyle: {\r\n                fontSize: 16,\r\n                fontWeight: 'normal',\r\n                color: '#fff'\r\n            }\r\n        },\r\n        tooltip: {\r\n            trigger: 'item',\r\n            formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n        },\r\n        series: [\r\n        // 外圈：总的情感占比\r\n        {\r\n            name: '总情感分析',\r\n            type: 'pie',\r\n            radius: ['52%', '65%'],\r\n            data: sentimentData,\r\n            color: ['#56c184', '#32c596', '#42ca7d'],\r\n            emphasis: {\r\n                itemStyle: {\r\n                    shadowBlur: 10,\r\n                    shadowOffsetX: 0,\r\n                    shadowColor: 'rgba(0, 0, 0, 0.5)',\r\n                }\r\n            },\r\n            itemStyle: {\r\n                // 设置边框宽度来实现扇形之间的间隔\r\n                borderWidth: 3, \r\n                // 边框颜色，这里使用白色，可根据背景色调整\r\n                borderColor: '#15bac000', \r\n                // 设置外圈圆环的圆角半径\r\n                borderRadius: 15 \r\n            },\r\n        },\r\n        // 内圈：四个来源的情感占比\r\n        {\r\n            name: '来源情感分析',\r\n            type: 'pie',\r\n            radius: ['42%', '50%'],\r\n            data: sourceSentimentData,\r\n            color: [\r\n                '#a4e2c6', '#48c0a3', '#549688', '#1685a9',\r\n                '#a4e2c6', '#48c0a3', '#549688', '#1685a9',\r\n                '#a4e2c6', '#48c0a3', '#549688', '#1685a9',\r\n            ],\r\n            label: {\r\n                show: false,\r\n                formatter: '{b}',\r\n                position: 'inside',\r\n            },\r\n            emphasis: {\r\n                itemStyle: {\r\n                    shadowBlur: 10,\r\n                    shadowOffsetX: 0,\r\n                    shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                }\r\n            },\r\n        }\r\n    ]\r\n    };\r\n    sentimentChart.setOption(sentimentOption);\r\n        \r\n      // 情感分析随时间变化折线图\r\n      const sentimentTimeData = this.calculateSentimentTimeData();\r\n      const sentimentTimeChart = this.$echarts.init(this.$refs.sentimentTimeChart);\r\n      const sentimentTimeOption = {\r\n          title: {\r\n              text: '情感分析随时间变化',\r\n              left: 'center',\r\n              top: 'top',\r\n              textStyle: {\r\n                  color: '#fff'\r\n              }\r\n          },\r\n          tooltip: {\r\n              trigger: 'axis'\r\n          },\r\n          legend: {\r\n              data: ['积极', '中性', '消极'],\r\n              top: '10%',\r\n              textStyle: {\r\n                  color: '#fff'\r\n              }\r\n          },\r\n          xAxis: {\r\n              type: 'category',\r\n              boundaryGap: false,\r\n              data: sentimentTimeData.labels,\r\n              axisLabel: {\r\n                  color: '#fff'\r\n              }\r\n          },\r\n          yAxis: {\r\n              type: 'value',\r\n              axisLabel: {\r\n                  formatter: '{value} 条',\r\n                  color: '#fff'\r\n              },\r\n              axisTick: {\r\n                  alignWithLabel: true\r\n              },\r\n              minInterval: 1 // 设置最小刻度间隔为1，确保显示整数\r\n          },\r\n          series: [\r\n              {\r\n                  name: '积极',\r\n                  type: 'line',\r\n                  data: sentimentTimeData.positive,\r\n                  smooth: true,\r\n                  color: '#a4e2c6',\r\n                 \r\n                  // 添加阴影色块，使用与折线相同颜色的渐变\r\n                  areaStyle: {\r\n                      color: {\r\n                          type: 'linear',\r\n                          x: 0,\r\n                          y: 0,\r\n                          x2: 0,\r\n                          y2: 1,\r\n                          colorStops: [\r\n                              {\r\n                                  offset: 0,\r\n                                  color: 'rgba(164, 226, 198, 0.5)'\r\n                              },\r\n                              {\r\n                                  offset: 1,\r\n                                  color: 'rgba(164, 226, 198, 0)'\r\n                              }\r\n                          ]\r\n                      }\r\n                  }\r\n              },\r\n              {\r\n                  name: '中性',\r\n                  type: 'line',\r\n                  data: sentimentTimeData.neutral,\r\n                  smooth: true,\r\n                  color: '#48c0a3',\r\n            \r\n                  // 添加阴影色块，使用与折线相同颜色的渐变\r\n                  areaStyle: {\r\n                      color: {\r\n                          type: 'linear',\r\n                          x: 0,\r\n                          y: 0,\r\n                          x2: 0,\r\n                          y2: 1,\r\n                          colorStops: [\r\n                              {\r\n                                  offset: 0,\r\n                                  color: 'rgba(72, 192, 163, 0.5)'\r\n                              },\r\n                              {\r\n                                  offset: 1,\r\n                                  color: 'rgba(72, 192, 163, 0)'\r\n                              }\r\n                          ]\r\n                      }\r\n                  }\r\n              },\r\n              {\r\n                  name: '消极',\r\n                  type: 'line',\r\n                  data: sentimentTimeData.negative,\r\n                  smooth: true,\r\n                  color: '#549688',\r\n                \r\n                  // 添加阴影色块，使用与折线相同颜色的渐变\r\n                  areaStyle: {\r\n                      color: {\r\n                          type: 'linear',\r\n                          x: 0,\r\n                          y: 0,\r\n                          x2: 0,\r\n                          y2: 1,\r\n                          colorStops: [\r\n                              {\r\n                                  offset: 0,\r\n                                  color: 'rgba(84, 150, 136, 0.5)'\r\n                              },\r\n                              {\r\n                                  offset: 1,\r\n                                  color: 'rgba(84, 150, 136, 0)'\r\n                              }\r\n                          ]\r\n                      }\r\n                  }\r\n              }\r\n          ]\r\n      };\r\n      sentimentTimeChart.setOption(sentimentTimeOption);\r\n    });\r\n  },\r\n\r\n    calculateSentimentData() {\r\n      const sentiments = [...this.results.renmin, ...this.results.weibo, ...this.results.tieba, ...this.results.wechat].map(item => item.sentiment);\r\n      const positiveCount = sentiments.filter(sentiment => sentiment > 0.7).length;\r\n      const neutralCount = sentiments.filter(sentiment => sentiment >= 0.3 && sentiment <= 0.7).length;\r\n      const negativeCount = sentiments.filter(sentiment => sentiment < 0.3).length;\r\n\r\n      const totalCount = sentiments.length;\r\n      return [\r\n        { value: positiveCount, name: '积极' },\r\n        { value: neutralCount, name: '中性' },\r\n        { value: negativeCount, name: '消极' }\r\n      ];\r\n    },\r\n\r\n    // 计算四个来源的情感占比\r\n    // 计算四个来源在各情感下的占比\r\n    calculateSourceSentimentData() {\r\n        const sources = ['renmin', 'weibo', 'tieba', 'wechat'];\r\n        const sourceData = [];\r\n\r\n        const allSentiments = {\r\n            positive: [],\r\n            neutral: [],\r\n            negative: []\r\n        };\r\n\r\n        sources.forEach(source => {\r\n            const sentiments = this.results[source].map(item => item.sentiment);\r\n            allSentiments.positive.push(sentiments.filter(sentiment => sentiment > 0.7).length);\r\n            allSentiments.neutral.push(sentiments.filter(sentiment => sentiment >= 0.3 && sentiment <= 0.7).length);\r\n            allSentiments.negative.push(sentiments.filter(sentiment => sentiment < 0.3).length);\r\n        });\r\n\r\n        const addSourceData = (sentimentType, color) => {\r\n            sources.forEach((source, index) => {\r\n                sourceData.push({\r\n                    value: allSentiments[sentimentType][index],\r\n                    name: `${source} - ${sentimentType}`\r\n                });\r\n            });\r\n        };\r\n\r\n        addSourceData('positive', '#a4e2c6');\r\n        addSourceData('neutral', '#48c0a3');\r\n        addSourceData('negative', '#549688');\r\n\r\n        return sourceData;\r\n    },\r\n\r\n    calculateSentimentTimeData() { \r\n    const renminSentimentTimes = this.results.renmin.map(item => ({ time: item.displayTime, sentiment: item.sentiment }));\r\n    console.log(renminSentimentTimes);\r\n    const weiboSentimentTimes = this.results.weibo.map(item => ({ time: item.created_at, sentiment: item.sentiment }));\r\n    const tiebaSentimentTimes = this.results.tieba.map(item => ({ time: item.time, sentiment: item.sentiment }));\r\n    const wechatSentimentTimes = this.results.wechat.map(item => ({ time: item.time, sentiment: item.sentiment }));\r\n\r\n    const allSentiments = [...renminSentimentTimes, ...weiboSentimentTimes, ...tiebaSentimentTimes, ...wechatSentimentTimes];\r\n    \r\n    // 时间格式化为 'YYYY-MM'\r\n    const formatToMonth = (time) => {\r\n        const date = new Date(time);\r\n        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n    };\r\n\r\n    // 格式化所有时间为月份\r\n    const timeLabels = [...new Set(allSentiments.map(item => formatToMonth(item.time)))].sort();\r\n\r\n    const positive = timeLabels.map(label => \r\n        allSentiments.filter(item => formatToMonth(item.time) === label && item.sentiment > 0.7).length\r\n    );\r\n    \r\n    const neutral = timeLabels.map(label => \r\n        allSentiments.filter(item => formatToMonth(item.time) === label && item.sentiment >= 0.3 && item.sentiment <= 0.7).length\r\n    );\r\n    \r\n    const negative = timeLabels.map(label => \r\n        allSentiments.filter(item => formatToMonth(item.time) === label && item.sentiment < 0.3).length\r\n    );\r\n\r\n    return {\r\n        labels: timeLabels,\r\n        positive: positive,\r\n        neutral: neutral,\r\n        negative: negative\r\n    };\r\n    },\r\n\r\n    calculateTimeData() {\r\n    // 将时间转化为月份（'YYYY-MM'）\r\n    const renminTime = this.results.renmin.map(item => item.displayTime);\r\n    console.log(renminTime);\r\n    const weiboTime = this.results.weibo.map(item => item.created_at);\r\n    const tiebaTime = this.results.tieba.map(item => item.time);\r\n    const wechatTime = this.results.wechat.map(item => item.time);\r\n\r\n    // 格式化时间为月份\r\n    const formatToMonth = (time) => {\r\n        const date = new Date(time);\r\n        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n    };\r\n\r\n    // 将所有时间转换为月份\r\n    const timeLabels = [...new Set([...renminTime, ...weiboTime, ...tiebaTime, ...wechatTime].map(formatToMonth))].sort();\r\n\r\n    const renmin = timeLabels.map(label => renminTime.filter(item => formatToMonth(item) === label).length);\r\n    const weibo = timeLabels.map(label => weiboTime.filter(item => formatToMonth(item) === label).length);\r\n    const tieba = timeLabels.map(label => tiebaTime.filter(item => formatToMonth(item) === label).length);\r\n    const wechat = timeLabels.map(label => wechatTime.filter(item => formatToMonth(item) === label).length);\r\n\r\n    return {\r\n        labels: timeLabels,\r\n        renmin: renmin,\r\n        weibo: weibo,\r\n        tieba: tieba,\r\n        wechat: wechat\r\n    };\r\n    },\r\n\r\n    closeAnalysis() {\r\n      this.showAnalysis = false;\r\n    }\r\n  },\r\n  \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.filter-bar {\r\n  height: 5%;\r\n  margin: 15px 0;\r\n  padding: 7px;\r\n  background: #fafafa00;\r\n  border-radius: 4px;\r\n  display: flex; /* 使用 Flexbox 布局 */\r\n  flex-wrap: wrap; /* 允许换行 */\r\n  align-items: center; /* 垂直居中对齐 */\r\n}\r\n\r\n.filter-group {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 10px; /* 调整筛选组之间的间距 */\r\n}\r\n\r\n.filter-label {\r\n  font-weight: 600;\r\n  margin-right: 7px;\r\n  color: #ffffff;\r\n}\r\n\r\nbutton {\r\n  margin: 0 3px;\r\n  padding: 6px 12px;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  background: #ffffffc0;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\nbutton.active {\r\n  background: #4fb17a;\r\n  color: rgb(0, 0, 0);\r\n  border-color: #409eff;\r\n}\r\n\r\nbutton:hover {\r\n  border-color: #c6e2ff;\r\n  background-color: #ecf5ff;\r\n}\r\n\r\n.tech-button {\r\n    \r\n    /* 布局 */\r\n    padding: 12px 20px;\r\n    position: relative;\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    \r\n    /* 文字 */\r\n    font-size: 15px;\r\n    font-weight: 500;\r\n    letter-spacing: 0.5px;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    \r\n    /* 背景与边框 */\r\n    background: linear-gradient(135deg, #15bac0 0%, #2663be 100%);\r\n    border: none;\r\n    border-radius: 8px;\r\n    \r\n    /* 光影效果 */\r\n    box-shadow: \r\n        0 4px 20px rgba(5, 40, 108, 0.3),\r\n        inset 0 2px 4px rgba(255, 255, 255, 0.1);\r\n    \r\n    /* 交互效果 */\r\n    cursor: pointer;\r\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n    overflow: hidden;\r\n}\r\n\r\n/* 悬停状态 */\r\n.tech-button:hover {\r\n    transform: translateY(-1px);\r\n    background: linear-gradient(135deg, #2663be 0%, #15bac0 100%);\r\n    box-shadow: \r\n        0 6px 24px rgba(5, 40, 108, 0.4),\r\n        inset 0 3px 6px rgba(255, 255, 255, 0.15);\r\n}\r\n\r\n/* 点击状态 */\r\n.tech-button:active {\r\n    transform: translateY(1px);\r\n    box-shadow: \r\n        0 2px 12px rgba(5, 40, 108, 0.2),\r\n        inset 0 1px 2px rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n/* 科技感边框高光 (可选) */\r\n.tech-button::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    border-radius: 6px;\r\n    border: 1px solid rgba(255, 255, 255, 0.15);\r\n    pointer-events: none;\r\n}\r\n\r\n/* 动态流光效果 (可选) */\r\n.tech-button::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -50%;\r\n    left: -50%;\r\n    width: 200%;\r\n    height: 200%;\r\n    background: linear-gradient(\r\n        45deg,\r\n        transparent 25%,\r\n        rgba(255, 255, 255, 0.1) 50%,\r\n        transparent 75%\r\n    );\r\n    animation: techFlow 4s infinite linear;\r\n    opacity: 0.3;\r\n}\r\n\r\n@keyframes techFlow {\r\n    0% { transform: translateX(-25%) translateY(-25%); }\r\n    100% { transform: translateX(25%) translateY(25%); }\r\n}\r\n.loading-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.7); /* 半透明黑色背景 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 999; /* 确保在最上层 */\r\n}\r\n\r\n.wavy {\r\n  position: relative;\r\n  -webkit-box-reflect: below -12px linear-gradient(transparent, rgba(0, 0, 0, 0.2));\r\n}\r\n\r\n.wavy span {\r\n  position: relative;\r\n  display: inline-block;\r\n  color: #fff;\r\n  font-size: 50px;\r\n  text-transform: uppercase;\r\n  letter-spacing: 8px;\r\n  animation: wavyAnimate 1s ease-in-out infinite;\r\n  animation-delay: calc(0.1s * var(--i));\r\n}\r\n\r\n@keyframes wavyAnimate {\r\n  0% {\r\n    transform: translateY(0);\r\n  }\r\n  20% {\r\n    transform: translateY(-20px);\r\n  }\r\n  40%,\r\n  100% {\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n/* 去分析按钮样式 */\r\n.analysis-btn {\r\n  padding: 10px 20px; /* 增加左右内边距 */\r\n  background-color: #3498db;\r\n  color: white;\r\n  display: inline-block;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 15px;\r\n  font-size: 16px;\r\n}\r\n\r\n.analysis-btn:hover {\r\n  background-color: #2980b9; /* 鼠标悬浮时的背景色 */\r\n}\r\n/* 分析图表容器样式 */\r\n.analysis-charts {\r\n  left: 0%;\r\n  margin-top: 1%;\r\n  width: 93%;\r\n  height: 75%;\r\n  position: relative; \r\n  background-color: rgba(59, 61, 62, 0.685); /* 背景色稍透明，突出图表 */\r\n  backdrop-filter: blur(10px); /* 添加磨砂玻璃效果 */\r\n  border: 11px outset #17cbd899;\r\n  z-index: 100; /* 确保图表位于搜索结果之上 */\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n}\r\n\r\n/* 每个图表容器 */\r\n.chart-container {\r\n  width: 45%; /* 宽度充满父容器 */\r\n  height: 40%;\r\n  margin-bottom: 10px; /* 每个图表之间的间距 */\r\n}\r\n\r\n/* 设置图表具体的容器 */\r\n.chart-container div {\r\n  width: 100%; /* 宽度占满容器 */\r\n  height: 100%; /* 高度占满容器 */\r\n}\r\n\r\n.close-charts {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  cursor: pointer;\r\n  font-size: 30px;\r\n  color:rgb(24, 245, 204);\r\n}\r\n.close-charts:hover {\r\n  color: rgb(223, 12, 12); /* 改变颜色为红色 */\r\n}\r\n\r\n.main-content {\r\n  margin-left: 150px; /* 留出侧边栏的空间 */\r\n  flex: 1;\r\n  padding: 20px;\r\n  background-color: #fbfbfb00;\r\n}\r\n\r\n.all_view {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100vh; /* 使用 vh 单位确保占满整个视口高度 */\r\n  background: linear-gradient(45deg, #1e5959,  #247b7b, #27aeb0);\r\n  background-size: 400% 400%;\r\n  animation: gradient 8s ease infinite;\r\n}\r\n\r\n@keyframes gradient {\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n}\r\n\r\n/* 搜索区域样式 */\r\n.search-area {\r\n  margin-bottom: 20px;\r\n  position: relative;\r\n}\r\n\r\n/* 历史搜索面板 */\r\n.history-panel {\r\n  width: 400px;\r\n  top: 0px;\r\n  background: rgba(40, 50, 60, 0.612);\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.2);\r\n  backdrop-filter: blur(10px);\r\n  position: absolute;\r\n  right: 140px;\r\n  margin-top: 10px;\r\n  margin-left: 10px;\r\n  /* z-index: 100; */\r\n}\r\n\r\n.history-header {\r\n  padding: 12px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgba(255,255,255,0.1);\r\n  color: #26c6da;\r\n}\r\n\r\n.history-header i {\r\n  cursor: pointer;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.history-header i:hover {\r\n  color: #ff4757;\r\n}\r\n\r\n.history-list {\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n  padding: 8px;\r\n  display: flex; /* 使用 flex 布局 */\r\n  flex-wrap: wrap; /* 允许换行 */\r\n  gap: 8px; /* 元素之间的间距 */\r\n}\r\n\r\n.history-item {\r\n  display: inline-block; /* 改为 inline-block 使元素可以并排显示 */\r\n  padding: 5px 8px;\r\n  border-radius: 4px;\r\n  background: rgba(255,255,255,0.05);\r\n  transition: all 0.3s;\r\n  cursor: pointer;\r\n  white-space: nowrap; /* 防止文本换行 */\r\n}\r\n\r\n.history-item:hover {\r\n  background: rgba(38,198,218,0.15);\r\n  transform: translateY(-2px); /* 稍微上移 */\r\n}\r\n\r\n.history-item span {\r\n  flex: 1;\r\n  color: #f8f9fa;\r\n  font-size: 13px;\r\n}\r\n\r\n.history-item i {\r\n  color: #a4b0be;\r\n  font-size: 12px;\r\n  margin-left: 8px;\r\n  padding: 2px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.history-item i:hover {\r\n  color: #ff4757;\r\n  transform: scale(1.2);\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.input-wrapper {\r\n  display: flex;\r\n  align-items: center; /* 让输入框和按钮水平对齐 */\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.input {\r\n  margin-right: 10px;\r\n  background-color: #ffffff00;\r\n  width: 50%;\r\n  height: 8%;\r\n}\r\n\r\n.key {\r\n  padding: 10px;\r\n  width: 100%;\r\n}\r\n.key::placeholder {\r\n  color: white; /* 设置占位符文本的颜色为白色 */\r\n}\r\n.search_button button {\r\n  padding: 10px 20px;\r\n  background-color: #3498db;\r\n  color: white;\r\n  display: flex;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.searchResult {\r\n  margin-top: 10%;\r\n  margin-right: 0%;\r\n  width: 75%;\r\n  height: 65%;\r\n  overflow-y: auto;\r\n  background-color: #ffffff00;\r\n  background: linear-gradient(to right, #296a7500, #2d66ac00);\r\n  z-index: 99;\r\n  overflow: auto;\r\n  color:white; padding: 1rem;\r\n    box-shadow: 0 0 3rem rgba(100,200,255,.5) inset;\r\n    background: rgba(106, 150, 148, 0.216);\r\n    border-radius: 10px;\r\n}\r\n\r\n.result {\r\n    padding: 2px;\r\n    margin-bottom: 0px;\r\n    /* border: 1px solid #6c6161cf; */\r\n    background-color: #ffffff00;\r\n    height: 40px;\r\n}\r\n\r\n.item-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: row;\r\n}\r\n\r\n.item-title,\r\n.item-source,\r\n.item-time {\r\n    margin-top: 10px;\r\n    margin-left: 20px;\r\n    margin-right: 20px;\r\n    font-size: 16px;\r\n    font-family: Arial, sans-serif;\r\n    color: #fff;\r\n}\r\n\r\n.item-sentiment {\r\n  margin-top: 11px;\r\n  font-size: 12px;\r\n  padding: 2px 8px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.item-sentiment.positive {\r\n  background-color: #268f3f;\r\n  color: #fff;\r\n}\r\n\r\n.item-sentiment.neutral {\r\n  background-color: #3d5162;\r\n  color: #fff;\r\n}\r\n\r\n.item-sentiment.negative {\r\n  background-color: #d15662;\r\n  color: #fff;\r\n}\r\n.item-title {\r\n    flex: 1;\r\n    font-weight: bold;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.item-time {\r\n    margin-left: 10px;\r\n}\r\n\r\n.item-source {\r\n    margin-left: 10px;\r\n}\r\n\r\n.close {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    cursor: pointer;\r\n}\r\na:link {\r\n    color: rgb(253, 248, 249);\r\n    text-decoration: none;\r\n}\r\n\r\na:visited {\r\n    color: rgb(83, 237, 183);\r\n    text-decoration: none;\r\n}\r\n\r\na:hover {\r\n    color: rgb(37, 238, 145);\r\n    text-decoration: none;\r\n}\r\n\r\na:active {\r\n    color: rgb(65, 240, 138);\r\n    text-decoration: none;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n .all_view {\r\n        flex-direction: column;\r\n    }\r\n\r\n .input {\r\n        width: 100%;\r\n    }\r\n\r\n .searchResult{\r\n        width: 100%;\r\n    }\r\n}\r\n@keyframes spin {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;;;;;AA+MA,OAAAA,UAAA;AACA,YAAAC,OAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACA;MACAC,QAAA;MACAC,OAAA;MAAA;MACAC,YAAA;MACAC,OAAA;MACAC,YAAA;MAAA;MACAC,WAAA,GACA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,EACA;MACAC,gBAAA,GACA;QAAAF,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,EACA;MACAE,aAAA,GACA;QAAAH,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,EACA;MACAG,YAAA;MACAC,iBAAA;MACAC,eAAA;MACA;MACAC,mBAAA;MAAA;MACAC,cAAA;IACA;EACA;EACAC,UAAA;IACApB;EACA;EACA;EACAqB,QAAA;IACA,KAAAC,SAAA;MACA,KAAAC,gBAAA;IACA;EACA;EAGAC,OAAA;IACAC,QAAAb,KAAA;MACA,IAAAA,KAAA,CAAAc,MAAA,eAAAd,KAAA,CAAAe,KAAA;MACA,OAAAf,KAAA;IACA;EACA;EAEAgB,OAAA;IACAC,eAAA;MACA;MACA,KAAAC,OAAA,CAAAC,IAAA;QACAC,IAAA;QACAC,KAAA;UACAC,GAAA,OAAA7B;QACA;MACA;IACA;IAEA;IACA8B,kBAAAC,SAAA;MACA,IAAAA,SAAA;MACA,IAAAA,SAAA;MACA;IACA;IAEA;IACAC,kBAAAD,SAAA;MACA,IAAAA,SAAA;MACA,IAAAA,SAAA;MACA;IACA;IAEA,MAAAE,OAAA;MACA,KAAAhC,OAAA;MACA,UAAAD,QAAA;QACA,KAAAkC,QAAA,CAAAC,KAAA;QACA;MACA;;MAEA;MACA,SAAAnC,QAAA,UAAAc,cAAA;QACA,KAAAZ,YAAA;QACA,KAAAC,OAAA;QACA,KAAAW,cAAA,QAAAd,QAAA;QACA;QACA,WAAAoC,iBAAA,MAAApC,QAAA;QACA,WAAAkB,gBAAA;MACA;MAEA,MAAAf,OAAA;QAAAkC,MAAA;QAAAC,KAAA;QAAAC,KAAA;QAAAC,MAAA;MAAA;MACA,IAAAC,MAAA;MACA,IAAAC,WAAA;;MAEA;QACA,OAAAA,WAAA,IAAAD,MAAA;UAAA,IAAAE,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,eAAA,EAAAC,gBAAA;UAAA;UACA,MAAAC,QAAA,cAAAC,MAAA,CAAAC,GAAA,CACA,yBAAAlD,QAAA,WAAAyC,MAAA,EACA;UACA,MAAAU,QAAA,GAAAH,QAAA,CAAAjD,IAAA,CAAAA,IAAA;UACAqD,OAAA,CAAAC,GAAA,CAAAF,QAAA;UAEA,KAAAA,QAAA,CAAAd,MAAA,KAAAc,QAAA,CAAAb,KAAA,KAAAa,QAAA,CAAAZ,KAAA,KAAAY,QAAA,CAAAX,MAAA;YACA,KAAAN,QAAA,CAAAoB,OAAA,MAAAb,MAAA;YACA;UACA;;UAEA;UACA,IAAAU,QAAA,CAAAd,MAAA;YACAc,QAAA,CAAAd,MAAA,CAAAkB,OAAA,CAAAC,IAAA;cACAA,IAAA,CAAAzB,SAAA,GAAAyB,IAAA,CAAAzB,SAAA;YACA;YACA5B,OAAA,CAAAkC,MAAA,CAAAX,IAAA,IAAAyB,QAAA,CAAAd,MAAA;UACA;UAEA,IAAAc,QAAA,CAAAZ,KAAA;YACAY,QAAA,CAAAZ,KAAA,CAAAgB,OAAA,CAAAC,IAAA;cACAA,IAAA,CAAAzB,SAAA,GAAAyB,IAAA,CAAAzB,SAAA;YACA;YACA5B,OAAA,CAAAoC,KAAA,CAAAb,IAAA,IAAAyB,QAAA,CAAAZ,KAAA;UACA;UAEA,IAAAY,QAAA,CAAAX,MAAA;YACAW,QAAA,CAAAX,MAAA,CAAAe,OAAA,CAAAC,IAAA;cACAA,IAAA,CAAAzB,SAAA,GAAAyB,IAAA,CAAAzB,SAAA;YACA;YACA5B,OAAA,CAAAqC,MAAA,CAAAd,IAAA,IAAAyB,QAAA,CAAAX,MAAA;UACA;UAEA,KAAAG,eAAA,GAAAQ,QAAA,CAAAb,KAAA,cAAAK,eAAA,eAAAA,eAAA,CAAAc,MAAA;YACAN,QAAA,CAAAb,KAAA,CAAAmB,MAAA,CAAAF,OAAA,CAAAC,IAAA;cACAA,IAAA,CAAAzB,SAAA,GAAAyB,IAAA,CAAAzB,SAAA;YACA;YACA5B,OAAA,CAAAmC,KAAA,CAAAZ,IAAA,IAAAyB,QAAA,CAAAb,KAAA,CAAAmB,MAAA;UACA;;UAEA;UACAf,WAAA,KAAAE,gBAAA,GAAAO,QAAA,CAAAd,MAAA,cAAAO,gBAAA,uBAAAA,gBAAA,CAAAvB,MAAA,WAAAwB,gBAAA,GAAAM,QAAA,CAAAb,KAAA,cAAAO,gBAAA,gBAAAA,gBAAA,GAAAA,gBAAA,CAAAY,MAAA,cAAAZ,gBAAA,uBAAAA,gBAAA,CAAAxB,MAAA,WAAAyB,eAAA,GAAAK,QAAA,CAAAZ,KAAA,cAAAO,eAAA,uBAAAA,eAAA,CAAAzB,MAAA,WAAA0B,gBAAA,GAAAI,QAAA,CAAAX,MAAA,cAAAO,gBAAA,uBAAAA,gBAAA,CAAA1B,MAAA;UACAoB,MAAA;QACA;QAEA,KAAAtC,OAAA,GAAAA,OAAA;QAEA,IAAAA,OAAA,CAAAkC,MAAA,CAAAhB,MAAA,UAAAlB,OAAA,CAAAmC,KAAA,CAAAjB,MAAA,UAAAlB,OAAA,CAAAoC,KAAA,CAAAlB,MAAA,UAAAlB,OAAA,CAAAqC,MAAA,CAAAnB,MAAA;UACA,KAAAa,QAAA,CAAAC,KAAA;QACA;MAEA,SAAAA,KAAA;QACAiB,OAAA,CAAAjB,KAAA,SAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;QACA,KAAAlC,OAAA;MACA;IACA;IACA;IACA,MAAAiB,iBAAA;MACA;QACA,MAAA8B,QAAA,SAAAnD,KAAA,CAAAqD,GAAA;QACAE,OAAA,CAAAC,GAAA,mCAAAL,QAAA,CAAAjD,IAAA,CAAA2D,IAAA;QACA,IAAAV,QAAA,CAAAjD,IAAA,CAAA2D,IAAA;UACAN,OAAA,CAAAC,GAAA,CAAAL,QAAA,CAAAjD,IAAA;UACA;UACA,MAAA4D,SAAA,QAAA9C,mBAAA,CAAA+C,MAAA,CAAAZ,QAAA,CAAAjD,IAAA,CAAAA,IAAA,CAAA8D,KAAA;UACA,KAAAhD,mBAAA,OAAA8C,SAAA;UACAP,OAAA,CAAAC,GAAA,mCAAAxC,mBAAA;QACA;MACA,SAAAsB,KAAA;QACAiB,OAAA,CAAAjB,KAAA,eAAAA,KAAA;MACA;IACA;IAEA;IACA,MAAAC,kBAAA0B,GAAA;MACA;QACA,MAAAd,QAAA,SAAAnD,KAAA,CAAAkE,IAAA;UACAD,GAAA,EAAAA;QACA;QACA,IAAAd,QAAA,CAAAjD,IAAA,CAAAiE,OAAA;UACAZ,OAAA,CAAAC,GAAA;QACA;UACAD,OAAA,CAAAjB,KAAA;QACA;MACA,SAAAA,KAAA;QACAiB,OAAA,CAAAjB,KAAA,eAAAA,KAAA;MACA;IACA;IAEA;IACA,MAAA8B,cAAAH,GAAA;MACA,KAAA9D,QAAA,GAAA8D,GAAA;MACA;QACA,MAAAd,QAAA,SAAAnD,KAAA,CAAAqD,GAAA;UACAgB,MAAA;YACAJ,GAAA,OAAA9D;UACA;QACA;QACAoD,OAAA,CAAAC,GAAA,CAAAL,QAAA;QACA,IAAAA,QAAA,CAAAjD,IAAA,CAAA2D,IAAA;UACA;UACA,IAAA3D,IAAA,GAAAiD,QAAA,CAAAjD,IAAA,CAAAA,IAAA;UACA;UACA,KAAAoE,KAAA,CAAAC,OAAA,CAAArE,IAAA,CAAAuC,KAAA;YACAvC,IAAA,CAAAuC,KAAA;UACA;UACA,KAAAnC,OAAA,GAAAJ,IAAA;UACAqD,OAAA,CAAAC,GAAA,MAAAlD,OAAA;QACA;MACA,SAAAgC,KAAA;QACAiB,OAAA,CAAAjB,KAAA,aAAAA,KAAA;MACA;IACA;IAEA;IACA,MAAAkC,cAAAP,GAAA;MACA;QACA,MAAAd,QAAA,SAAAnD,KAAA,CAAAqD,GAAA;UACAgB,MAAA;YACAJ,GAAA,EAAAA;UACA;QACA;QACAV,OAAA,CAAAC,GAAA,CAAAL,QAAA;QACA,IAAAA,QAAA,CAAAjD,IAAA,CAAA2D,IAAA;UACA,KAAA7C,mBAAA,QAAAA,mBAAA,CAAAyD,MAAA,CAAAd,IAAA,IAAAA,IAAA,KAAAM,GAAA;QACA;UACA,KAAA5B,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACAiB,OAAA,CAAAjB,KAAA,aAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IAEA;IACAoC,aAAAC,IAAA,EAAAjE,KAAA;MACA,QAAAiE,IAAA;QACA;UACA,KAAA9D,YAAA,QAAAA,YAAA,KAAAH,KAAA,UAAAA,KAAA;UACA;QACA;UACA,KAAAI,iBAAA,QAAAA,iBAAA,KAAAJ,KAAA,UAAAA,KAAA;UACA;QACA;UACA,SAAAK,eAAA,CAAA6D,QAAA,CAAAlE,KAAA;YACA,KAAAK,eAAA,QAAAA,eAAA,CAAA0D,MAAA,CAAAI,CAAA,IAAAA,CAAA,KAAAnE,KAAA;UACA;YACA,KAAAK,eAAA,YAAAA,eAAA,EAAAL,KAAA;UACA;UACA;MACA;IACA;IAEA;IACAoE,YAAAC,KAAA,EAAAC,UAAA;MACA,MAAAC,GAAA,OAAAC,IAAA;MACA,OAAAH,KAAA,CAAAN,MAAA,CAAAd,IAAA;QACA;QACA,SAAA9C,YAAA;UACA,MAAAsE,QAAA,OAAAD,IAAA,CACAF,UAAA,eAAArB,IAAA,CAAAyB,UAAA,GACAJ,UAAA,gBAAArB,IAAA,CAAA0B,WAAA,GACA1B,IAAA,CAAA2B,IACA;UACA,MAAAC,QAAA,GAAAN,GAAA,GAAAE,QAAA;UAEA,MAAAK,MAAA;YACAC,IAAA;YACAC,KAAA;YACAC,IAAA;UACA;UACA,IAAAJ,QAAA,GAAAC,MAAA,MAAA3E,YAAA;QACA;;QAEA;QACA,SAAAC,iBAAA;UACA,MAAA8E,cAAA,GAAAjC,IAAA,CAAAzB,SAAA;UACA,MAAA2D,YAAA;YACAC,QAAA,EAAAF,cAAA;YACAG,OAAA,EAAAH,cAAA,WAAAA,cAAA;YACAI,QAAA,EAAAJ,cAAA;UACA;UACA,KAAAC,YAAA,MAAA/E,iBAAA;QACA;;QAEA;QACA,SAAAC,eAAA,CAAAS,MAAA,QACA,MAAAT,eAAA,CAAA6D,QAAA,CAAAI,UAAA;UACA;QACA;QAEA;MACA;IACA;IAEAiB,aAAA;MACA,KAAA1F,YAAA;;MAEA,KAAAa,SAAA;QACA;QACA,MAAA8E,WAAA,QAAA5F,OAAA,CAAAkC,MAAA,QAAAlC,OAAA,CAAAkC,MAAA,CAAAhB,MAAA;QACA,MAAA2E,UAAA,QAAA7F,OAAA,CAAAmC,KAAA,QAAAnC,OAAA,CAAAmC,KAAA,CAAAjB,MAAA;QACA,MAAA4E,UAAA,QAAA9F,OAAA,CAAAoC,KAAA,QAAApC,OAAA,CAAAoC,KAAA,CAAAlB,MAAA;QACA,MAAA6E,WAAA,QAAA/F,OAAA,CAAAqC,MAAA,QAAArC,OAAA,CAAAqC,MAAA,CAAAnB,MAAA;QAEA,MAAA8E,KAAA,GAAAJ,WAAA,GAAAC,UAAA,GAAAC,UAAA,GAAAC,WAAA;QACA9C,OAAA,CAAAC,GAAA,MAAA+C,KAAA,CAAAC,WAAA;QACA,SAAAD,KAAA,CAAAC,WAAA;UACA,MAAAA,WAAA,QAAAC,QAAA,CAAAC,IAAA,MAAAH,KAAA,CAAAC,WAAA;UACA,MAAAG,YAAA;YACAC,KAAA;cACAC,IAAA;cACAC,IAAA;cACAC,GAAA;cACAC,SAAA;gBACAC,QAAA;gBACAC,UAAA;gBACAC,KAAA;cACA;YACA;YACAC,OAAA;cACAC,OAAA;cACAC,SAAA;YACA;YACAC,MAAA,GACA;cACAtH,IAAA;cACA0E,IAAA;cACA6C,MAAA;cACAtH,IAAA,GACA;gBAAAQ,KAAA,EAAAwF,WAAA;gBAAAjG,IAAA;cAAA,GACA;gBAAAS,KAAA,EAAAyF,UAAA;gBAAAlG,IAAA;cAAA,GACA;gBAAAS,KAAA,EAAA0F,UAAA;gBAAAnG,IAAA;cAAA,GACA;gBAAAS,KAAA,EAAA2F,WAAA;gBAAApG,IAAA;cAAA,EACA;cACAkH,KAAA;cACAM,QAAA;gBACAC,SAAA;kBACAC,UAAA;kBACAC,aAAA;kBACAC,WAAA;gBACA;cACA;YACA;UAEA;UACArB,WAAA,CAAAsB,SAAA,CAAAnB,YAAA;QACA;UACApD,OAAA,CAAAjB,KAAA;QACA;QAEA,MAAAyF,QAAA,QAAAC,iBAAA;QACA,MAAAC,aAAA,QAAAxB,QAAA,CAAAC,IAAA,MAAAH,KAAA,CAAA0B,aAAA;QACA,MAAAC,cAAA;UACAtB,KAAA;YACAC,IAAA;YACAC,IAAA;YACAC,GAAA;YACAC,SAAA;cACAG,KAAA;YACA;UACA;UACAC,OAAA;YACAC,OAAA;UACA;UACAc,MAAA;YACAjI,IAAA;YACA6G,GAAA;YACAC,SAAA;cACAG,KAAA;YACA;UACA;UACAiB,KAAA;YACAzD,IAAA;YACA0D,WAAA;YACAnI,IAAA,EAAA6H,QAAA,CAAAO,MAAA;YACAC,SAAA;cACApB,KAAA;YACA;UACA;UACAqB,KAAA;YACA7D,IAAA;YACA4D,SAAA;cACAjB,SAAA;cACAH,KAAA;YACA;YACAsB,QAAA;cACAC,cAAA;YACA;YACAC,WAAA;UACA;UACAC,IAAA;YACA7B,GAAA;YACAD,IAAA;YACA+B,KAAA;YACAC,MAAA;UACA;UACAvB,MAAA,GACA;YACAtH,IAAA;YACA0E,IAAA;YACAzE,IAAA,EAAA6H,QAAA,CAAAvF,MAAA;YACAuG,MAAA;YACA5B,KAAA;YAEA6B,SAAA;cACA7B,KAAA;gBACAxC,IAAA;gBACAsE,CAAA;gBACAC,CAAA;gBACAC,EAAA;gBACAC,EAAA;gBACAC,UAAA,GACA;kBACAC,MAAA;kBACAnC,KAAA;gBACA,GACA;kBACAmC,MAAA;kBACAnC,KAAA;gBACA;cAEA;YACA;UACA,GACA;YACAlH,IAAA;YACA0E,IAAA;YACAzE,IAAA,EAAA6H,QAAA,CAAAtF,KAAA;YACAsG,MAAA;YACA5B,KAAA;YAEA6B,SAAA;cACA7B,KAAA;gBACAxC,IAAA;gBACAsE,CAAA;gBACAC,CAAA;gBACAC,EAAA;gBACAC,EAAA;gBACAC,UAAA,GACA;kBACAC,MAAA;kBACAnC,KAAA;gBACA,GACA;kBACAmC,MAAA;kBACAnC,KAAA;gBACA;cAEA;YACA;UACA,GACA;YACAlH,IAAA;YACA0E,IAAA;YACAzE,IAAA,EAAA6H,QAAA,CAAArF,KAAA;YACAqG,MAAA;YACA5B,KAAA;YAEA6B,SAAA;cACA7B,KAAA;gBACAxC,IAAA;gBACAsE,CAAA;gBACAC,CAAA;gBACAC,EAAA;gBACAC,EAAA;gBACAC,UAAA,GACA;kBACAC,MAAA;kBACAnC,KAAA;gBACA,GACA;kBACAmC,MAAA;kBACAnC,KAAA;gBACA;cAEA;YACA;UACA,GACA;YACAlH,IAAA;YACA0E,IAAA;YACAzE,IAAA,EAAA6H,QAAA,CAAApF,MAAA;YACAoG,MAAA;YACA5B,KAAA;YAEA6B,SAAA;cACA7B,KAAA;gBACAxC,IAAA;gBACAsE,CAAA;gBACAC,CAAA;gBACAC,EAAA;gBACAC,EAAA;gBACAC,UAAA,GACA;kBACAC,MAAA;kBACAnC,KAAA;gBACA,GACA;kBACAmC,MAAA;kBACAnC,KAAA;gBACA;cAEA;YACA;UACA;QAEA;QACAc,aAAA,CAAAH,SAAA,CAAAI,cAAA;;QAEA;QACA,MAAAqB,aAAA,QAAAC,sBAAA;QACA,MAAAC,mBAAA,QAAAC,4BAAA;QAEA,MAAAC,cAAA,QAAAlD,QAAA,CAAAC,IAAA,MAAAH,KAAA,CAAAoD,cAAA;QACA,MAAAC,eAAA;UACAhD,KAAA;YACAC,IAAA;YACAC,IAAA;YACAC,GAAA;YACAC,SAAA;cACAC,QAAA;cACAC,UAAA;cACAC,KAAA;YACA;UACA;UACAC,OAAA;YACAC,OAAA;YACAC,SAAA;UACA;UACAC,MAAA;UACA;UACA;YACAtH,IAAA;YACA0E,IAAA;YACA6C,MAAA;YACAtH,IAAA,EAAAqJ,aAAA;YACApC,KAAA;YACAM,QAAA;cACAC,SAAA;gBACAC,UAAA;gBACAC,aAAA;gBACAC,WAAA;cACA;YACA;YACAH,SAAA;cACA;cACAmC,WAAA;cACA;cACAC,WAAA;cACA;cACAC,YAAA;YACA;UACA;UACA;UACA;YACA9J,IAAA;YACA0E,IAAA;YACA6C,MAAA;YACAtH,IAAA,EAAAuJ,mBAAA;YACAtC,KAAA,GACA,4CACA,4CACA,2CACA;YACA1G,KAAA;cACAuJ,IAAA;cACA1C,SAAA;cACA2C,QAAA;YACA;YACAxC,QAAA;cACAC,SAAA;gBACAC,UAAA;gBACAC,aAAA;gBACAC,WAAA;cACA;YACA;UACA;QAEA;QACA8B,cAAA,CAAA7B,SAAA,CAAA8B,eAAA;;QAEA;QACA,MAAAM,iBAAA,QAAAC,0BAAA;QACA,MAAAC,kBAAA,QAAA3D,QAAA,CAAAC,IAAA,MAAAH,KAAA,CAAA6D,kBAAA;QACA,MAAAC,mBAAA;UACAzD,KAAA;YACAC,IAAA;YACAC,IAAA;YACAC,GAAA;YACAC,SAAA;cACAG,KAAA;YACA;UACA;UACAC,OAAA;YACAC,OAAA;UACA;UACAc,MAAA;YACAjI,IAAA;YACA6G,GAAA;YACAC,SAAA;cACAG,KAAA;YACA;UACA;UACAiB,KAAA;YACAzD,IAAA;YACA0D,WAAA;YACAnI,IAAA,EAAAgK,iBAAA,CAAA5B,MAAA;YACAC,SAAA;cACApB,KAAA;YACA;UACA;UACAqB,KAAA;YACA7D,IAAA;YACA4D,SAAA;cACAjB,SAAA;cACAH,KAAA;YACA;YACAsB,QAAA;cACAC,cAAA;YACA;YACAC,WAAA;UACA;UACApB,MAAA,GACA;YACAtH,IAAA;YACA0E,IAAA;YACAzE,IAAA,EAAAgK,iBAAA,CAAApE,QAAA;YACAiD,MAAA;YACA5B,KAAA;YAEA;YACA6B,SAAA;cACA7B,KAAA;gBACAxC,IAAA;gBACAsE,CAAA;gBACAC,CAAA;gBACAC,EAAA;gBACAC,EAAA;gBACAC,UAAA,GACA;kBACAC,MAAA;kBACAnC,KAAA;gBACA,GACA;kBACAmC,MAAA;kBACAnC,KAAA;gBACA;cAEA;YACA;UACA,GACA;YACAlH,IAAA;YACA0E,IAAA;YACAzE,IAAA,EAAAgK,iBAAA,CAAAnE,OAAA;YACAgD,MAAA;YACA5B,KAAA;YAEA;YACA6B,SAAA;cACA7B,KAAA;gBACAxC,IAAA;gBACAsE,CAAA;gBACAC,CAAA;gBACAC,EAAA;gBACAC,EAAA;gBACAC,UAAA,GACA;kBACAC,MAAA;kBACAnC,KAAA;gBACA,GACA;kBACAmC,MAAA;kBACAnC,KAAA;gBACA;cAEA;YACA;UACA,GACA;YACAlH,IAAA;YACA0E,IAAA;YACAzE,IAAA,EAAAgK,iBAAA,CAAAlE,QAAA;YACA+C,MAAA;YACA5B,KAAA;YAEA;YACA6B,SAAA;cACA7B,KAAA;gBACAxC,IAAA;gBACAsE,CAAA;gBACAC,CAAA;gBACAC,EAAA;gBACAC,EAAA;gBACAC,UAAA,GACA;kBACAC,MAAA;kBACAnC,KAAA;gBACA,GACA;kBACAmC,MAAA;kBACAnC,KAAA;gBACA;cAEA;YACA;UACA;QAEA;QACAiD,kBAAA,CAAAtC,SAAA,CAAAuC,mBAAA;MACA;IACA;IAEAb,uBAAA;MACA,MAAAc,UAAA,YAAAhK,OAAA,CAAAkC,MAAA,UAAAlC,OAAA,CAAAmC,KAAA,UAAAnC,OAAA,CAAAoC,KAAA,UAAApC,OAAA,CAAAqC,MAAA,EAAA4H,GAAA,CAAA5G,IAAA,IAAAA,IAAA,CAAAzB,SAAA;MACA,MAAAsI,aAAA,GAAAF,UAAA,CAAA7F,MAAA,CAAAvC,SAAA,IAAAA,SAAA,QAAAV,MAAA;MACA,MAAAiJ,YAAA,GAAAH,UAAA,CAAA7F,MAAA,CAAAvC,SAAA,IAAAA,SAAA,WAAAA,SAAA,SAAAV,MAAA;MACA,MAAAkJ,aAAA,GAAAJ,UAAA,CAAA7F,MAAA,CAAAvC,SAAA,IAAAA,SAAA,QAAAV,MAAA;MAEA,MAAAmJ,UAAA,GAAAL,UAAA,CAAA9I,MAAA;MACA,QACA;QAAAd,KAAA,EAAA8J,aAAA;QAAAvK,IAAA;MAAA,GACA;QAAAS,KAAA,EAAA+J,YAAA;QAAAxK,IAAA;MAAA,GACA;QAAAS,KAAA,EAAAgK,aAAA;QAAAzK,IAAA;MAAA,EACA;IACA;IAEA;IACA;IACAyJ,6BAAA;MACA,MAAAkB,OAAA;MACA,MAAAC,UAAA;MAEA,MAAAC,aAAA;QACAhF,QAAA;QACAC,OAAA;QACAC,QAAA;MACA;MAEA4E,OAAA,CAAAlH,OAAA,CAAAqH,MAAA;QACA,MAAAT,UAAA,QAAAhK,OAAA,CAAAyK,MAAA,EAAAR,GAAA,CAAA5G,IAAA,IAAAA,IAAA,CAAAzB,SAAA;QACA4I,aAAA,CAAAhF,QAAA,CAAAjE,IAAA,CAAAyI,UAAA,CAAA7F,MAAA,CAAAvC,SAAA,IAAAA,SAAA,QAAAV,MAAA;QACAsJ,aAAA,CAAA/E,OAAA,CAAAlE,IAAA,CAAAyI,UAAA,CAAA7F,MAAA,CAAAvC,SAAA,IAAAA,SAAA,WAAAA,SAAA,SAAAV,MAAA;QACAsJ,aAAA,CAAA9E,QAAA,CAAAnE,IAAA,CAAAyI,UAAA,CAAA7F,MAAA,CAAAvC,SAAA,IAAAA,SAAA,QAAAV,MAAA;MACA;MAEA,MAAAwJ,aAAA,GAAAA,CAAAC,aAAA,EAAA9D,KAAA;QACAyD,OAAA,CAAAlH,OAAA,EAAAqH,MAAA,EAAAG,KAAA;UACAL,UAAA,CAAAhJ,IAAA;YACAnB,KAAA,EAAAoK,aAAA,CAAAG,aAAA,EAAAC,KAAA;YACAjL,IAAA,KAAA8K,MAAA,MAAAE,aAAA;UACA;QACA;MACA;MAEAD,aAAA;MACAA,aAAA;MACAA,aAAA;MAEA,OAAAH,UAAA;IACA;IAEAV,2BAAA;MACA,MAAAgB,oBAAA,QAAA7K,OAAA,CAAAkC,MAAA,CAAA+H,GAAA,CAAA5G,IAAA;QAAA2B,IAAA,EAAA3B,IAAA,CAAA0B,WAAA;QAAAnD,SAAA,EAAAyB,IAAA,CAAAzB;MAAA;MACAqB,OAAA,CAAAC,GAAA,CAAA2H,oBAAA;MACA,MAAAC,mBAAA,QAAA9K,OAAA,CAAAmC,KAAA,CAAA8H,GAAA,CAAA5G,IAAA;QAAA2B,IAAA,EAAA3B,IAAA,CAAAyB,UAAA;QAAAlD,SAAA,EAAAyB,IAAA,CAAAzB;MAAA;MACA,MAAAmJ,mBAAA,QAAA/K,OAAA,CAAAoC,KAAA,CAAA6H,GAAA,CAAA5G,IAAA;QAAA2B,IAAA,EAAA3B,IAAA,CAAA2B,IAAA;QAAApD,SAAA,EAAAyB,IAAA,CAAAzB;MAAA;MACA,MAAAoJ,oBAAA,QAAAhL,OAAA,CAAAqC,MAAA,CAAA4H,GAAA,CAAA5G,IAAA;QAAA2B,IAAA,EAAA3B,IAAA,CAAA2B,IAAA;QAAApD,SAAA,EAAAyB,IAAA,CAAAzB;MAAA;MAEA,MAAA4I,aAAA,OAAAK,oBAAA,KAAAC,mBAAA,KAAAC,mBAAA,KAAAC,oBAAA;;MAEA;MACA,MAAAC,aAAA,GAAAjG,IAAA;QACA,MAAAkG,IAAA,OAAAtG,IAAA,CAAAI,IAAA;QACA,UAAAkG,IAAA,CAAAC,WAAA,MAAAC,MAAA,CAAAF,IAAA,CAAAG,QAAA,QAAAC,QAAA;MACA;;MAEA;MACA,MAAAC,UAAA,WAAAC,GAAA,CAAAhB,aAAA,CAAAP,GAAA,CAAA5G,IAAA,IAAA4H,aAAA,CAAA5H,IAAA,CAAA2B,IAAA,KAAAyG,IAAA;MAEA,MAAAjG,QAAA,GAAA+F,UAAA,CAAAtB,GAAA,CAAA9J,KAAA,IACAqK,aAAA,CAAArG,MAAA,CAAAd,IAAA,IAAA4H,aAAA,CAAA5H,IAAA,CAAA2B,IAAA,MAAA7E,KAAA,IAAAkD,IAAA,CAAAzB,SAAA,QAAAV,MACA;MAEA,MAAAuE,OAAA,GAAA8F,UAAA,CAAAtB,GAAA,CAAA9J,KAAA,IACAqK,aAAA,CAAArG,MAAA,CAAAd,IAAA,IAAA4H,aAAA,CAAA5H,IAAA,CAAA2B,IAAA,MAAA7E,KAAA,IAAAkD,IAAA,CAAAzB,SAAA,WAAAyB,IAAA,CAAAzB,SAAA,SAAAV,MACA;MAEA,MAAAwE,QAAA,GAAA6F,UAAA,CAAAtB,GAAA,CAAA9J,KAAA,IACAqK,aAAA,CAAArG,MAAA,CAAAd,IAAA,IAAA4H,aAAA,CAAA5H,IAAA,CAAA2B,IAAA,MAAA7E,KAAA,IAAAkD,IAAA,CAAAzB,SAAA,QAAAV,MACA;MAEA;QACA8G,MAAA,EAAAuD,UAAA;QACA/F,QAAA,EAAAA,QAAA;QACAC,OAAA,EAAAA,OAAA;QACAC,QAAA,EAAAA;MACA;IACA;IAEAgC,kBAAA;MACA;MACA,MAAAgE,UAAA,QAAA1L,OAAA,CAAAkC,MAAA,CAAA+H,GAAA,CAAA5G,IAAA,IAAAA,IAAA,CAAA0B,WAAA;MACA9B,OAAA,CAAAC,GAAA,CAAAwI,UAAA;MACA,MAAAC,SAAA,QAAA3L,OAAA,CAAAmC,KAAA,CAAA8H,GAAA,CAAA5G,IAAA,IAAAA,IAAA,CAAAyB,UAAA;MACA,MAAA8G,SAAA,QAAA5L,OAAA,CAAAoC,KAAA,CAAA6H,GAAA,CAAA5G,IAAA,IAAAA,IAAA,CAAA2B,IAAA;MACA,MAAA6G,UAAA,QAAA7L,OAAA,CAAAqC,MAAA,CAAA4H,GAAA,CAAA5G,IAAA,IAAAA,IAAA,CAAA2B,IAAA;;MAEA;MACA,MAAAiG,aAAA,GAAAjG,IAAA;QACA,MAAAkG,IAAA,OAAAtG,IAAA,CAAAI,IAAA;QACA,UAAAkG,IAAA,CAAAC,WAAA,MAAAC,MAAA,CAAAF,IAAA,CAAAG,QAAA,QAAAC,QAAA;MACA;;MAEA;MACA,MAAAC,UAAA,WAAAC,GAAA,KAAAE,UAAA,KAAAC,SAAA,KAAAC,SAAA,KAAAC,UAAA,EAAA5B,GAAA,CAAAgB,aAAA,IAAAQ,IAAA;MAEA,MAAAvJ,MAAA,GAAAqJ,UAAA,CAAAtB,GAAA,CAAA9J,KAAA,IAAAuL,UAAA,CAAAvH,MAAA,CAAAd,IAAA,IAAA4H,aAAA,CAAA5H,IAAA,MAAAlD,KAAA,EAAAe,MAAA;MACA,MAAAiB,KAAA,GAAAoJ,UAAA,CAAAtB,GAAA,CAAA9J,KAAA,IAAAwL,SAAA,CAAAxH,MAAA,CAAAd,IAAA,IAAA4H,aAAA,CAAA5H,IAAA,MAAAlD,KAAA,EAAAe,MAAA;MACA,MAAAkB,KAAA,GAAAmJ,UAAA,CAAAtB,GAAA,CAAA9J,KAAA,IAAAyL,SAAA,CAAAzH,MAAA,CAAAd,IAAA,IAAA4H,aAAA,CAAA5H,IAAA,MAAAlD,KAAA,EAAAe,MAAA;MACA,MAAAmB,MAAA,GAAAkJ,UAAA,CAAAtB,GAAA,CAAA9J,KAAA,IAAA0L,UAAA,CAAA1H,MAAA,CAAAd,IAAA,IAAA4H,aAAA,CAAA5H,IAAA,MAAAlD,KAAA,EAAAe,MAAA;MAEA;QACA8G,MAAA,EAAAuD,UAAA;QACArJ,MAAA,EAAAA,MAAA;QACAC,KAAA,EAAAA,KAAA;QACAC,KAAA,EAAAA,KAAA;QACAC,MAAA,EAAAA;MACA;IACA;IAEAyJ,cAAA;MACA,KAAA7L,YAAA;IACA;EACA;AAEA","ignoreList":[]}]}