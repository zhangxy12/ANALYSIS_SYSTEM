{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\@jiaminghi\\data-view\\lib\\components\\borderBox8\\src\\main.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\@jiaminghi\\data-view\\lib\\components\\borderBox8\\src\\main.vue","mtime":1741680180009},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\babel.config.js","mtime":1732591727371},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1733210776367},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":1733210776030},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF1dG9SZXNpemUgZnJvbSAnLi4vLi4vLi4vbWl4aW4vYXV0b1Jlc2l6ZSc7CmltcG9ydCB7IHV1aWQgfSBmcm9tICcuLi8uLi8uLi91dGlsL2luZGV4JzsKaW1wb3J0IHsgZGVlcE1lcmdlIH0gZnJvbSAnQGppYW1pbmdoaS9jaGFydHMvbGliL3V0aWwvaW5kZXgnOwppbXBvcnQgeyBkZWVwQ2xvbmUgfSBmcm9tICdAamlhbWluZ2hpL2MtcmVuZGVyL2xpYi9wbHVnaW4vdXRpbCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRHZCb3JkZXJCb3g4JywKICBtaXhpbnM6IFthdXRvUmVzaXplXSwKICBwcm9wczogewogICAgY29sb3I6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdCiAgICB9LAogICAgZHVyOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMwogICAgfSwKICAgIGJhY2tncm91bmRDb2xvcjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICd0cmFuc3BhcmVudCcKICAgIH0sCiAgICByZXZlcnNlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgY29uc3QgaWQgPSB1dWlkKCk7CiAgICByZXR1cm4gewogICAgICByZWY6ICdib3JkZXItYm94LTgnLAogICAgICBwYXRoOiBgYm9yZGVyLWJveC04LXBhdGgtJHtpZH1gLAogICAgICBncmFkaWVudDogYGJvcmRlci1ib3gtOC1ncmFkaWVudC0ke2lkfWAsCiAgICAgIG1hc2s6IGBib3JkZXItYm94LTgtbWFzay0ke2lkfWAsCiAgICAgIGRlZmF1bHRDb2xvcjogWycjMjM1ZmE3JywgJyM0ZmQyZGQnXSwKICAgICAgbWVyZ2VkQ29sb3I6IFtdCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGxlbmd0aCgpIHsKICAgICAgY29uc3QgewogICAgICAgIHdpZHRoLAogICAgICAgIGhlaWdodAogICAgICB9ID0gdGhpczsKICAgICAgcmV0dXJuICh3aWR0aCArIGhlaWdodCAtIDUpICogMjsKICAgIH0sCiAgICBwYXRoRCgpIHsKICAgICAgY29uc3QgewogICAgICAgIHJldmVyc2UsCiAgICAgICAgd2lkdGgsCiAgICAgICAgaGVpZ2h0CiAgICAgIH0gPSB0aGlzOwogICAgICBpZiAocmV2ZXJzZSkgcmV0dXJuIGBNIDIuNSwgMi41IEwgMi41LCAke2hlaWdodCAtIDIuNX0gTCAke3dpZHRoIC0gMi41fSwgJHtoZWlnaHQgLSAyLjV9IEwgJHt3aWR0aCAtIDIuNX0sIDIuNSBMIDIuNSwgMi41YDsKICAgICAgcmV0dXJuIGBNMi41LCAyLjUgTCR7d2lkdGggLSAyLjV9LCAyLjUgTCR7d2lkdGggLSAyLjV9LCAke2hlaWdodCAtIDIuNX0gTDIuNSwgJHtoZWlnaHQgLSAyLjV9IEwyLjUsIDIuNWA7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgY29sb3IoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBtZXJnZUNvbG9yCiAgICAgIH0gPSB0aGlzOwogICAgICBtZXJnZUNvbG9yKCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBtZXJnZUNvbG9yKCkgewogICAgICBjb25zdCB7CiAgICAgICAgY29sb3IsCiAgICAgICAgZGVmYXVsdENvbG9yCiAgICAgIH0gPSB0aGlzOwogICAgICB0aGlzLm1lcmdlZENvbG9yID0gZGVlcE1lcmdlKGRlZXBDbG9uZShkZWZhdWx0Q29sb3IsIHRydWUpLCBjb2xvciB8fCBbXSk7CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgY29uc3QgewogICAgICBtZXJnZUNvbG9yCiAgICB9ID0gdGhpczsKICAgIG1lcmdlQ29sb3IoKTsKICB9Cn07"},{"version":3,"names":["autoResize","uuid","deepMerge","deepClone","name","mixins","props","color","type","Array","default","dur","Number","backgroundColor","String","reverse","Boolean","data","id","ref","path","gradient","mask","defaultColor","mergedColor","computed","length","width","height","pathD","watch","mergeColor","methods","mounted"],"sources":["node_modules/@jiaminghi/data-view/lib/components/borderBox8/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-border-box-8\" :ref=\"ref\">\n    <svg class=\"dv-border-svg-container\" :width=\"width\" :height=\"height\">\n      <defs>\n        <path\n          :id=\"path\"\n          :d=\"pathD\"\n          fill=\"transparent\"\n        />\n        <radialGradient\n          :id=\"gradient\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n        </radialGradient>\n\n        <mask :id=\"mask\">\n          <circle cx=\"0\" cy=\"0\" r=\"150\" :fill=\"`url(#${gradient})`\">\n            <animateMotion\n              :dur=\"`${dur}s`\"\n              :path=\"pathD\"\n              rotate=\"auto\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n        </mask>\n      </defs>\n\n      <polygon :fill=\"backgroundColor\" :points=\"`5, 5 ${width - 5}, 5 ${width - 5} ${height - 5} 5, ${height - 5}`\" />\n\n      <use\n        :stroke=\"mergedColor[0]\"\n        stroke-width=\"1\"\n        :xlink:href=\"`#${path}`\"\n      />\n\n      <use\n        :stroke=\"mergedColor[1]\"\n        stroke-width=\"3\"\n        :xlink:href=\"`#${path}`\"\n        :mask=\"`url(#${mask})`\"\n      >\n        <animate\n          attributeName=\"stroke-dasharray\"\n          :from=\"`0, ${length}`\"\n          :to=\"`${length}, 0`\"\n          :dur=\"`${dur}s`\"\n          repeatCount=\"indefinite\"\n        />\n      </use>\n    </svg>\n\n    <div class=\"border-box-content\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\nimport { uuid } from '../../../util/index'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvBorderBox8',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    dur: {\n      type: Number,\n      default: 3\n    },\n    backgroundColor: {\n      type: String,\n      default: 'transparent'\n    },\n    reverse: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    const id = uuid()\n    return {\n      ref: 'border-box-8',\n      path: `border-box-8-path-${id}`,\n      gradient: `border-box-8-gradient-${id}`,\n      mask: `border-box-8-mask-${id}`,\n\n      defaultColor: ['#235fa7', '#4fd2dd'],\n\n      mergedColor: []\n    }\n  },\n  computed: {\n    length () {\n      const { width, height } = this\n\n      return (width + height - 5) * 2\n    },\n    pathD () {\n      const { reverse, width, height } = this\n\n      if (reverse) return `M 2.5, 2.5 L 2.5, ${height - 2.5} L ${width - 2.5}, ${height - 2.5} L ${width - 2.5}, 2.5 L 2.5, 2.5`\n\n      return `M2.5, 2.5 L${width - 2.5}, 2.5 L${width - 2.5}, ${height - 2.5} L2.5, ${height - 2.5} L2.5, 2.5`\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"],"mappings":"AAkEA,OAAAA,UAAA;AACA,SAAAC,IAAA;AAEA,SAAAC,SAAA;AAEA,SAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAL,UAAA;EACAM,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,OAAA,EAAAA,CAAA;IACA;IACAC,GAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,OAAA;IACA;IACAG,eAAA;MACAL,IAAA,EAAAM,MAAA;MACAJ,OAAA;IACA;IACAK,OAAA;MACAP,IAAA,EAAAQ,OAAA;MACAN,OAAA;IACA;EACA;EACAO,KAAA;IACA,MAAAC,EAAA,GAAAjB,IAAA;IACA;MACAkB,GAAA;MACAC,IAAA,uBAAAF,EAAA;MACAG,QAAA,2BAAAH,EAAA;MACAI,IAAA,uBAAAJ,EAAA;MAEAK,YAAA;MAEAC,WAAA;IACA;EACA;EACAC,QAAA;IACAC,OAAA;MACA;QAAAC,KAAA;QAAAC;MAAA;MAEA,QAAAD,KAAA,GAAAC,MAAA;IACA;IACAC,MAAA;MACA;QAAAd,OAAA;QAAAY,KAAA;QAAAC;MAAA;MAEA,IAAAb,OAAA,8BAAAa,MAAA,YAAAD,KAAA,WAAAC,MAAA,YAAAD,KAAA;MAEA,qBAAAA,KAAA,gBAAAA,KAAA,WAAAC,MAAA,gBAAAA,MAAA;IACA;EACA;EACAE,KAAA;IACAvB,MAAA;MACA;QAAAwB;MAAA;MAEAA,UAAA;IACA;EACA;EACAC,OAAA;IACAD,WAAA;MACA;QAAAxB,KAAA;QAAAgB;MAAA;MAEA,KAAAC,WAAA,GAAAtB,SAAA,CAAAC,SAAA,CAAAoB,YAAA,SAAAhB,KAAA;IACA;EACA;EACA0B,QAAA;IACA;MAAAF;IAAA;IAEAA,UAAA;EACA;AACA","ignoreList":[]}]}