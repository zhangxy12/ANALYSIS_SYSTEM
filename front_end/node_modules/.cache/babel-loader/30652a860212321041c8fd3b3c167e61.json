{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollBoard\\src\\main.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollBoard\\src\\main.vue","mtime":1741680180026},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\babel.config.js","mtime":1732591727371},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1733210776367},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":1733210776030},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["autoResize","deepMerge","deepClone","name","mixins","props","config","type","Object","default","data","ref","defaultConfig","header","rowNum","headerBGC","oddRowBGC","evenRowBGC","waitTime","headerHeight","columnWidth","align","index","indexHeader","carousel","hoverPause","mergedConfig","rowsData","rows","widths","heights","avgHeight","aligns","animationIndex","animationHandler","updater","needCalc","watch","stopAnimation","calcData","methods","handleHover","enter","ri","ci","row","ceil","emitEvent","animation","afterAutoResizeMixinInit","onResize","calcWidths","calcHeights","mergeConfig","calcHeaderData","calcRowsData","calcAligns","length","unshift","map","i","indexTag","ceils","rowIndex","rowLength","d","scroll","width","usedWidth","reduce","all","w","columnNum","avgWidth","Array","fill","onresize","height","allHeight","start","Promise","resolve","setTimeout","animationNum","slice","push","splice","back","clearTimeout","$emit","columnIndex","updateRows","destroyed"],"sources":["node_modules/@jiaminghi/data-view/lib/components/scrollBoard/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-scroll-board\" :ref=\"ref\">\n    <div class=\"header\" v-if=\"header.length && mergedConfig\" :style=\"`background-color: ${mergedConfig.headerBGC};`\">\n      <div\n        class=\"header-item\"\n        v-for=\"(headerItem, i) in header\"\n        :key=\"`${headerItem}${i}`\"\n        :style=\"`\n          height: ${mergedConfig.headerHeight}px;\n          line-height: ${mergedConfig.headerHeight}px;\n          width: ${widths[i]}px;\n        `\"\n        :align=\"aligns[i]\"\n        v-html=\"headerItem\"\n      />\n    </div>\n\n    <div\n      v-if=\"mergedConfig\"\n      class=\"rows\"\n      :style=\"`height: ${height - (header.length ? mergedConfig.headerHeight : 0)}px;`\"\n    >\n      <div\n        class=\"row-item\"\n        v-for=\"(row, ri) in rows\"\n        :key=\"`${row.toString()}${row.scroll}`\"\n        :style=\"`\n          height: ${heights[ri]}px;\n          line-height: ${heights[ri]}px;\n          background-color: ${mergedConfig[row.rowIndex % 2 === 0 ? 'evenRowBGC' : 'oddRowBGC']};\n        `\"\n      >\n        <div\n          class=\"ceil\"\n          v-for=\"(ceil, ci) in row.ceils\"\n          :key=\"`${ceil}${ri}${ci}`\"\n          :style=\"`width: ${widths[ci]}px;`\"\n          :align=\"aligns[ci]\"\n          v-html=\"ceil\"\n          @click=\"emitEvent('click', ri, ci, row, ceil)\"\n          @mouseenter=\"handleHover(true, ri, ci, row, ceil)\"\n          @mouseleave=\"handleHover(false)\"\n        />\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvScrollBoard',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      ref: 'scroll-board',\n\n      defaultConfig: {\n        /**\n         * @description Board header\n         * @type {Array<String>}\n         * @default header = []\n         * @example header = ['column1', 'column2', 'column3']\n         */\n        header: [],\n        /**\n         * @description Board data\n         * @type {Array<Array>}\n         * @default data = []\n         */\n        data: [],\n        /**\n         * @description Row num\n         * @type {Number}\n         * @default rowNum = 5\n         */\n        rowNum: 5,\n        /**\n         * @description Header background color\n         * @type {String}\n         * @default headerBGC = '#00BAFF'\n         */\n        headerBGC: '#00BAFF',\n        /**\n         * @description Odd row background color\n         * @type {String}\n         * @default oddRowBGC = '#003B51'\n         */\n        oddRowBGC: '#003B51',\n        /**\n         * @description Even row background color\n         * @type {String}\n         * @default evenRowBGC = '#003B51'\n         */\n        evenRowBGC: '#0A2732',\n        /**\n         * @description Scroll wait time\n         * @type {Number}\n         * @default waitTime = 2000\n         */\n        waitTime: 2000,\n        /**\n         * @description Header height\n         * @type {Number}\n         * @default headerHeight = 35\n         */\n        headerHeight: 35,\n        /**\n         * @description Column width\n         * @type {Array<Number>}\n         * @default columnWidth = []\n         */\n        columnWidth: [],\n        /**\n         * @description Column align\n         * @type {Array<String>}\n         * @default align = []\n         * @example align = ['left', 'center', 'right']\n         */\n        align: [],\n        /**\n         * @description Show index\n         * @type {Boolean}\n         * @default index = false\n         */\n        index: false,\n        /**\n         * @description index Header\n         * @type {String}\n         * @default indexHeader = '#'\n         */\n        indexHeader: '#',\n        /**\n         * @description Carousel type\n         * @type {String}\n         * @default carousel = 'single'\n         * @example carousel = 'single' | 'page'\n         */\n        carousel: 'single',\n        /**\n         * @description Pause scroll when mouse hovered\n         * @type {Boolean}\n         * @default hoverPause = true\n         * @example hoverPause = true | false\n         */\n        hoverPause: true\n      },\n\n      mergedConfig: null,\n\n      header: [],\n\n      rowsData: [],\n\n      rows: [],\n\n      widths: [],\n\n      heights: [],\n\n      avgHeight: 0,\n\n      aligns: [],\n\n      animationIndex: 0,\n\n      animationHandler: '',\n\n      updater: 0,\n\n      needCalc: false\n    }\n  },\n  watch: {\n    config () {\n      const { stopAnimation, calcData } = this\n\n      stopAnimation()\n\n      this.animationIndex = 0\n\n      calcData()\n    }\n  },\n  methods: {\n    handleHover(enter, ri, ci, row, ceil){\n      const { mergedConfig, emitEvent, stopAnimation, animation } = this\n\n      if (enter) emitEvent('mouseover', ri, ci, row, ceil)\n      if (!mergedConfig.hoverPause) return\n\n      if (enter) {\n        stopAnimation()\n      } else {\n        animation(true)\n      }\n    },\n    afterAutoResizeMixinInit () {\n      const { calcData } = this\n\n      calcData()\n    },\n    onResize () {\n      const { mergedConfig, calcWidths, calcHeights } = this\n\n      if (!mergedConfig) return\n\n      calcWidths()\n\n      calcHeights()\n    },\n    calcData () {\n      const { mergeConfig, calcHeaderData, calcRowsData } = this\n\n      mergeConfig()\n\n      calcHeaderData()\n\n      calcRowsData()\n\n      const { calcWidths, calcHeights, calcAligns } = this\n\n      calcWidths()\n\n      calcHeights()\n\n      calcAligns()\n\n      const { animation } = this\n\n      animation(true)\n    },\n    mergeConfig () {\n      let { config, defaultConfig } = this\n\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n    },\n    calcHeaderData () {\n      let { header, index, indexHeader} = this.mergedConfig\n\n      if (!header.length) {\n        this.header = []\n\n        return\n      }\n\n      header = [...header]\n\n      if (index) header.unshift(indexHeader)\n\n      this.header = header\n    },\n    calcRowsData () {\n      let { data, index, headerBGC, rowNum } = this.mergedConfig\n\n      if (index) {\n        data = data.map((row, i) => {\n          row = [...row]\n\n          const indexTag = `<span class=\"index\" style=\"background-color: ${headerBGC};\">${i + 1}</span>`\n\n          row.unshift(indexTag)\n\n          return row\n        })\n      }\n\n      data = data.map((ceils, i) => ({ ceils, rowIndex: i }))\n\n      const rowLength = data.length\n\n      if (rowLength > rowNum && rowLength < 2 * rowNum) {\n        data = [...data, ...data]\n      }\n\n      data = data.map((d, i) => ({ ...d, scroll: i }))\n\n      this.rowsData = data\n      this.rows = data\n    },\n    calcWidths () {\n      const { width, mergedConfig, rowsData } = this\n\n      const { columnWidth, header } = mergedConfig\n\n      const usedWidth = columnWidth.reduce((all, w) => all + w, 0)\n\n      let columnNum = 0\n      if (rowsData[0]) {\n        columnNum = rowsData[0].ceils.length\n      } else if (header.length) {\n        columnNum = header.length\n      }\n\n      const avgWidth = (width - usedWidth) / (columnNum - columnWidth.length)\n\n      const widths = new Array(columnNum).fill(avgWidth)\n\n      this.widths = deepMerge(widths, columnWidth)\n    },\n    calcHeights (onresize = false) {\n      const { height, mergedConfig, header } = this\n\n      const { headerHeight, rowNum, data } = mergedConfig\n\n      let allHeight = height\n\n      if (header.length) allHeight -= headerHeight\n\n      const avgHeight = allHeight / rowNum\n\n      this.avgHeight = avgHeight\n\n      if (!onresize) this.heights = new Array(data.length).fill(avgHeight)\n    },\n    calcAligns () {\n      const { header, mergedConfig } = this\n\n      const columnNum = header.length\n\n      let aligns = new Array(columnNum).fill('left')\n\n      const { align } = mergedConfig\n\n      this.aligns = deepMerge(aligns, align)\n    },\n    async animation (start = false) {\n      const { needCalc, calcHeights, calcRowsData } = this\n\n      if (needCalc) {\n        calcRowsData()\n        calcHeights()\n        this.needCalc = false\n      }\n\n      let { avgHeight, animationIndex, mergedConfig, rowsData, animation, updater } = this\n\n      const { waitTime, carousel, rowNum } = mergedConfig\n\n      const rowLength = rowsData.length\n\n      if (rowNum >= rowLength) return\n\n      if (start) {\n        await new Promise(resolve => setTimeout(resolve, waitTime))\n        if (updater !== this.updater) return\n      }\n\n      const animationNum = carousel === 'single' ? 1 : rowNum\n\n      let rows = rowsData.slice(animationIndex)\n      rows.push(...rowsData.slice(0, animationIndex))\n\n      this.rows = rows.slice(0, carousel === 'page' ? rowNum * 2 : rowNum + 1)\n      this.heights = new Array(rowLength).fill(avgHeight)\n\n      await new Promise(resolve => setTimeout(resolve, 300))\n      if (updater !== this.updater) return\n\n      this.heights.splice(0, animationNum, ...new Array(animationNum).fill(0))\n\n      animationIndex += animationNum\n\n      const back = animationIndex - rowLength\n      if (back >= 0) animationIndex = back\n\n      this.animationIndex = animationIndex\n      this.animationHandler = setTimeout(animation, waitTime - 300)\n    },\n    stopAnimation () {\n      const { animationHandler, updater } = this\n\n      this.updater = (updater + 1) % 999999\n\n      if (!animationHandler) return\n\n      clearTimeout(animationHandler)\n    },\n    emitEvent (type, ri, ci, row, ceil) {\n      const { ceils, rowIndex } = row\n\n      this.$emit(type, {\n        row: ceils,\n        ceil,\n        rowIndex,\n        columnIndex: ci\n      })\n    },\n    updateRows(rows, animationIndex) {\n      const { mergedConfig, animationHandler, animation } = this\n\n      this.mergedConfig = {\n        ...mergedConfig,\n        data: [...rows]\n      }\n\n      this.needCalc = true\n\n      if (typeof animationIndex === 'number') this.animationIndex = animationIndex\n      if (!animationHandler) animation(true)\n    }\n  },\n  destroyed () {\n    const { stopAnimation } = this\n\n    stopAnimation()\n  }\n}\n</script>"],"mappings":";;;;;AAkDA,OAAAA,UAAA;AAEA,SAAAC,SAAA;AAEA,SAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAJ,UAAA;EACAK,KAAA;IACAC,MAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA,EAAAA,CAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,GAAA;MAEAC,aAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,MAAA;QACA;AACA;AACA;AACA;AACA;QACAH,IAAA;QACA;AACA;AACA;AACA;AACA;QACAI,MAAA;QACA;AACA;AACA;AACA;AACA;QACAC,SAAA;QACA;AACA;AACA;AACA;AACA;QACAC,SAAA;QACA;AACA;AACA;AACA;AACA;QACAC,UAAA;QACA;AACA;AACA;AACA;AACA;QACAC,QAAA;QACA;AACA;AACA;AACA;AACA;QACAC,YAAA;QACA;AACA;AACA;AACA;AACA;QACAC,WAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,KAAA;QACA;AACA;AACA;AACA;AACA;QACAC,KAAA;QACA;AACA;AACA;AACA;AACA;QACAC,WAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,QAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,UAAA;MACA;MAEAC,YAAA;MAEAb,MAAA;MAEAc,QAAA;MAEAC,IAAA;MAEAC,MAAA;MAEAC,OAAA;MAEAC,SAAA;MAEAC,MAAA;MAEAC,cAAA;MAEAC,gBAAA;MAEAC,OAAA;MAEAC,QAAA;IACA;EACA;EACAC,KAAA;IACA/B,OAAA;MACA;QAAAgC,aAAA;QAAAC;MAAA;MAEAD,aAAA;MAEA,KAAAL,cAAA;MAEAM,QAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAAC,KAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,GAAA,EAAAC,IAAA;MACA;QAAApB,YAAA;QAAAqB,SAAA;QAAAT,aAAA;QAAAU;MAAA;MAEA,IAAAN,KAAA,EAAAK,SAAA,cAAAJ,EAAA,EAAAC,EAAA,EAAAC,GAAA,EAAAC,IAAA;MACA,KAAApB,YAAA,CAAAD,UAAA;MAEA,IAAAiB,KAAA;QACAJ,aAAA;MACA;QACAU,SAAA;MACA;IACA;IACAC,yBAAA;MACA;QAAAV;MAAA;MAEAA,QAAA;IACA;IACAW,SAAA;MACA;QAAAxB,YAAA;QAAAyB,UAAA;QAAAC;MAAA;MAEA,KAAA1B,YAAA;MAEAyB,UAAA;MAEAC,WAAA;IACA;IACAb,SAAA;MACA;QAAAc,WAAA;QAAAC,cAAA;QAAAC;MAAA;MAEAF,WAAA;MAEAC,cAAA;MAEAC,YAAA;MAEA;QAAAJ,UAAA;QAAAC,WAAA;QAAAI;MAAA;MAEAL,UAAA;MAEAC,WAAA;MAEAI,UAAA;MAEA;QAAAR;MAAA;MAEAA,SAAA;IACA;IACAK,YAAA;MACA;QAAA/C,MAAA;QAAAM;MAAA;MAEA,KAAAc,YAAA,GAAAzB,SAAA,CAAAC,SAAA,CAAAU,aAAA,SAAAN,MAAA;IACA;IACAgD,eAAA;MACA;QAAAzC,MAAA;QAAAS,KAAA;QAAAC;MAAA,SAAAG,YAAA;MAEA,KAAAb,MAAA,CAAA4C,MAAA;QACA,KAAA5C,MAAA;QAEA;MACA;MAEAA,MAAA,OAAAA,MAAA;MAEA,IAAAS,KAAA,EAAAT,MAAA,CAAA6C,OAAA,CAAAnC,WAAA;MAEA,KAAAV,MAAA,GAAAA,MAAA;IACA;IACA0C,aAAA;MACA;QAAA7C,IAAA;QAAAY,KAAA;QAAAP,SAAA;QAAAD;MAAA,SAAAY,YAAA;MAEA,IAAAJ,KAAA;QACAZ,IAAA,GAAAA,IAAA,CAAAiD,GAAA,EAAAd,GAAA,EAAAe,CAAA;UACAf,GAAA,OAAAA,GAAA;UAEA,MAAAgB,QAAA,mDAAA9C,SAAA,MAAA6C,CAAA;UAEAf,GAAA,CAAAa,OAAA,CAAAG,QAAA;UAEA,OAAAhB,GAAA;QACA;MACA;MAEAnC,IAAA,GAAAA,IAAA,CAAAiD,GAAA,EAAAG,KAAA,EAAAF,CAAA;QAAAE,KAAA;QAAAC,QAAA,EAAAH;MAAA;MAEA,MAAAI,SAAA,GAAAtD,IAAA,CAAA+C,MAAA;MAEA,IAAAO,SAAA,GAAAlD,MAAA,IAAAkD,SAAA,OAAAlD,MAAA;QACAJ,IAAA,OAAAA,IAAA,KAAAA,IAAA;MACA;MAEAA,IAAA,GAAAA,IAAA,CAAAiD,GAAA,EAAAM,CAAA,EAAAL,CAAA;QAAA,GAAAK,CAAA;QAAAC,MAAA,EAAAN;MAAA;MAEA,KAAAjC,QAAA,GAAAjB,IAAA;MACA,KAAAkB,IAAA,GAAAlB,IAAA;IACA;IACAyC,WAAA;MACA;QAAAgB,KAAA;QAAAzC,YAAA;QAAAC;MAAA;MAEA;QAAAP,WAAA;QAAAP;MAAA,IAAAa,YAAA;MAEA,MAAA0C,SAAA,GAAAhD,WAAA,CAAAiD,MAAA,EAAAC,GAAA,EAAAC,CAAA,KAAAD,GAAA,GAAAC,CAAA;MAEA,IAAAC,SAAA;MACA,IAAA7C,QAAA;QACA6C,SAAA,GAAA7C,QAAA,IAAAmC,KAAA,CAAAL,MAAA;MACA,WAAA5C,MAAA,CAAA4C,MAAA;QACAe,SAAA,GAAA3D,MAAA,CAAA4C,MAAA;MACA;MAEA,MAAAgB,QAAA,IAAAN,KAAA,GAAAC,SAAA,KAAAI,SAAA,GAAApD,WAAA,CAAAqC,MAAA;MAEA,MAAA5B,MAAA,OAAA6C,KAAA,CAAAF,SAAA,EAAAG,IAAA,CAAAF,QAAA;MAEA,KAAA5C,MAAA,GAAA5B,SAAA,CAAA4B,MAAA,EAAAT,WAAA;IACA;IACAgC,YAAAwB,QAAA;MACA;QAAAC,MAAA;QAAAnD,YAAA;QAAAb;MAAA;MAEA;QAAAM,YAAA;QAAAL,MAAA;QAAAJ;MAAA,IAAAgB,YAAA;MAEA,IAAAoD,SAAA,GAAAD,MAAA;MAEA,IAAAhE,MAAA,CAAA4C,MAAA,EAAAqB,SAAA,IAAA3D,YAAA;MAEA,MAAAY,SAAA,GAAA+C,SAAA,GAAAhE,MAAA;MAEA,KAAAiB,SAAA,GAAAA,SAAA;MAEA,KAAA6C,QAAA,OAAA9C,OAAA,OAAA4C,KAAA,CAAAhE,IAAA,CAAA+C,MAAA,EAAAkB,IAAA,CAAA5C,SAAA;IACA;IACAyB,WAAA;MACA;QAAA3C,MAAA;QAAAa;MAAA;MAEA,MAAA8C,SAAA,GAAA3D,MAAA,CAAA4C,MAAA;MAEA,IAAAzB,MAAA,OAAA0C,KAAA,CAAAF,SAAA,EAAAG,IAAA;MAEA;QAAAtD;MAAA,IAAAK,YAAA;MAEA,KAAAM,MAAA,GAAA/B,SAAA,CAAA+B,MAAA,EAAAX,KAAA;IACA;IACA,MAAA2B,UAAA+B,KAAA;MACA;QAAA3C,QAAA;QAAAgB,WAAA;QAAAG;MAAA;MAEA,IAAAnB,QAAA;QACAmB,YAAA;QACAH,WAAA;QACA,KAAAhB,QAAA;MACA;MAEA;QAAAL,SAAA;QAAAE,cAAA;QAAAP,YAAA;QAAAC,QAAA;QAAAqB,SAAA;QAAAb;MAAA;MAEA;QAAAjB,QAAA;QAAAM,QAAA;QAAAV;MAAA,IAAAY,YAAA;MAEA,MAAAsC,SAAA,GAAArC,QAAA,CAAA8B,MAAA;MAEA,IAAA3C,MAAA,IAAAkD,SAAA;MAEA,IAAAe,KAAA;QACA,UAAAC,OAAA,CAAAC,OAAA,IAAAC,UAAA,CAAAD,OAAA,EAAA/D,QAAA;QACA,IAAAiB,OAAA,UAAAA,OAAA;MACA;MAEA,MAAAgD,YAAA,GAAA3D,QAAA,oBAAAV,MAAA;MAEA,IAAAc,IAAA,GAAAD,QAAA,CAAAyD,KAAA,CAAAnD,cAAA;MACAL,IAAA,CAAAyD,IAAA,IAAA1D,QAAA,CAAAyD,KAAA,IAAAnD,cAAA;MAEA,KAAAL,IAAA,GAAAA,IAAA,CAAAwD,KAAA,IAAA5D,QAAA,cAAAV,MAAA,OAAAA,MAAA;MACA,KAAAgB,OAAA,OAAA4C,KAAA,CAAAV,SAAA,EAAAW,IAAA,CAAA5C,SAAA;MAEA,UAAAiD,OAAA,CAAAC,OAAA,IAAAC,UAAA,CAAAD,OAAA;MACA,IAAA9C,OAAA,UAAAA,OAAA;MAEA,KAAAL,OAAA,CAAAwD,MAAA,IAAAH,YAAA,SAAAT,KAAA,CAAAS,YAAA,EAAAR,IAAA;MAEA1C,cAAA,IAAAkD,YAAA;MAEA,MAAAI,IAAA,GAAAtD,cAAA,GAAA+B,SAAA;MACA,IAAAuB,IAAA,OAAAtD,cAAA,GAAAsD,IAAA;MAEA,KAAAtD,cAAA,GAAAA,cAAA;MACA,KAAAC,gBAAA,GAAAgD,UAAA,CAAAlC,SAAA,EAAA9B,QAAA;IACA;IACAoB,cAAA;MACA;QAAAJ,gBAAA;QAAAC;MAAA;MAEA,KAAAA,OAAA,IAAAA,OAAA;MAEA,KAAAD,gBAAA;MAEAsD,YAAA,CAAAtD,gBAAA;IACA;IACAa,UAAAxC,IAAA,EAAAoC,EAAA,EAAAC,EAAA,EAAAC,GAAA,EAAAC,IAAA;MACA;QAAAgB,KAAA;QAAAC;MAAA,IAAAlB,GAAA;MAEA,KAAA4C,KAAA,CAAAlF,IAAA;QACAsC,GAAA,EAAAiB,KAAA;QACAhB,IAAA;QACAiB,QAAA;QACA2B,WAAA,EAAA9C;MACA;IACA;IACA+C,WAAA/D,IAAA,EAAAK,cAAA;MACA;QAAAP,YAAA;QAAAQ,gBAAA;QAAAc;MAAA;MAEA,KAAAtB,YAAA;QACA,GAAAA,YAAA;QACAhB,IAAA,MAAAkB,IAAA;MACA;MAEA,KAAAQ,QAAA;MAEA,WAAAH,cAAA,oBAAAA,cAAA,GAAAA,cAAA;MACA,KAAAC,gBAAA,EAAAc,SAAA;IACA;EACA;EACA4C,UAAA;IACA;MAAAtD;IAAA;IAEAA,aAAA;EACA;AACA","ignoreList":[]}]}