{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\TBAnalyze\\post.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\TBAnalyze\\post.vue","mtime":1737709334212},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\babel.config.js","mtime":1732591727371},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":1733210776030},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lml0ZXJhdG9yLm1hcC5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAicG9zdCIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRheV90aW1lOiBbXSwKICAgICAgLy8g5a2Y5YKo5aSp5pWw5o2uCiAgICAgIGRheV9jb3VudDogW10sCiAgICAgIC8vIOWtmOWCqOWkqee7n+iuoeaVsOaNrgogICAgICBtb250aF90aW1lOiBbXSwKICAgICAgLy8g5a2Y5YKo5pyI5pWw5o2uCiAgICAgIG1vbnRoX2NvdW50OiBbXSwKICAgICAgLy8g5a2Y5YKo5pyI57uf6K6h5pWw5o2uCiAgICAgIG15Q2hhcnQ6IG51bGwsCiAgICAgIC8vIEVDaGFydHPlrp7kvosKICAgICAgcmFkaW86IDEgLy8g6buY6K6k6YCJ5oupICLlpKkiCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIHJhZGlvKG5ld3JhZGlvKSB7CiAgICAgIHRoaXMuY2hhbmdlbGluZShuZXdyYWRpbyk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDojrflj5bor53popjlj5HljZrml7bpl7Tnu5/orqHmlbDmja4KICAgIGdldFRvcGljRGF0YShpZCkgewogICAgICB0aGlzLiRheGlvcy5nZXQoYC9wb3N0X3RpbWVfc3RhdGlzdGljc19ybT90YWdfdGFza19pZD0ke2lkfWApLnRoZW4ocmVzID0+IHsKICAgICAgICBjb25zdCBkYXRhID0gcmVzLmRhdGEuZGF0YS5kYXRhOwoKICAgICAgICAvLyDnoa7kv50gZGF0YSDlkowgZGF0YS5kYXkg5LiN5Li656m6CiAgICAgICAgaWYgKGRhdGEgJiYgZGF0YS5kYXkpIHsKICAgICAgICAgIC8vIOabtOaWsOWkqeaVsOaNruW5tuaOkuW6jwogICAgICAgICAgdGhpcy5kYXlfdGltZSA9IE9iamVjdC5rZXlzKGRhdGEuZGF5KS5zb3J0KChhLCBiKSA9PiBhLmxvY2FsZUNvbXBhcmUoYikpOyAvLyDmm7Tnsr7noa7lnLDmjInml6XmnJ/ljYfluo/mjpLluo8KICAgICAgICAgIHRoaXMuZGF5X2NvdW50ID0gdGhpcy5kYXlfdGltZS5tYXAodGltZSA9PiBkYXRhLmRheVt0aW1lXSk7CgogICAgICAgICAgLy8g5pu05paw5pyI5pWw5o2u5bm25o6S5bqPCiAgICAgICAgICB0aGlzLm1vbnRoX3RpbWUgPSBPYmplY3Qua2V5cyhkYXRhLm1vbnRoKS5zb3J0KChhLCBiKSA9PiBhLmxvY2FsZUNvbXBhcmUoYikpOwogICAgICAgICAgdGhpcy5tb250aF9jb3VudCA9IHRoaXMubW9udGhfdGltZS5tYXAodGltZSA9PiBkYXRhLm1vbnRoW3RpbWVdKTsKCiAgICAgICAgICAvLyDpu5jorqTmmL7npLrlpKnmlbDmja4KICAgICAgICAgIHRoaXMubXlMaW5lQ2hhcnQodGhpcy5kYXlfdGltZSwgdGhpcy5kYXlfY291bnQpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zb2xlLmVycm9yKCfmlbDmja7moLzlvI/kuI3mraPnoa7miJbnvLrlsJEgZGF5IOaVsOaNricpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy8g5riy5p+T5oqY57q/5Zu+CiAgICBteUxpbmVDaGFydCh0aW1lLCBjb3VudCkgewogICAgICBsZXQgb3B0aW9uOwogICAgICBpZiAodGhpcy5teUNoYXJ0KSB7CiAgICAgICAgdGhpcy5teUNoYXJ0LmRpc3Bvc2UoKTsgLy8g6Kej5YazZWNoYXJ0cyBkb23lt7LliqDovb3nmoTmiqXplJkKICAgICAgfQogICAgICB0aGlzLm15Q2hhcnQgPSB0aGlzLiRlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImxpbmVDaGFydCIpKTsKICAgICAgb3B0aW9uID0gewogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICJheGlzIiwKICAgICAgICAgIHBvc2l0aW9uOiAiY2VudGVyIiwKICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgIHR5cGU6ICJjcm9zcyIsCiAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAiIzZhNzk4NSIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIHR5cGU6ICJjYXRlZ29yeSIsCiAgICAgICAgICBkYXRhOiB0aW1lLAogICAgICAgICAgLy8g5bey5o6S5bqP55qE5pe26Ze05pWw5o2uCiAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgY29sb3I6ICJ3aGl0ZSIgLy8g6K6+572u5qiq5Z2Q5qCH55qE5a2X5L2T6aKc6Imy5Li655m96ImyCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgdHlwZTogInZhbHVlIiwKICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICBjb2xvcjogIndoaXRlIiwKICAgICAgICAgICAgLy8g6K6+572u57q15Z2Q5qCH55qE5a2X5L2T6aKc6Imy5Li655m96ImyCiAgICAgICAgICAgIGZvcm1hdHRlcjogdmFsdWUgPT4gewogICAgICAgICAgICAgIC8vIOS/neivgee6teWdkOagh+WPquaYvuekuuaVtOaVsAogICAgICAgICAgICAgIHJldHVybiBNYXRoLmZsb29yKHZhbHVlKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgZGF0YTogY291bnQsCiAgICAgICAgICB0eXBlOiAibGluZSIsCiAgICAgICAgICBzbW9vdGg6IHRydWUsCiAgICAgICAgICAvLyDlubPmu5Hmm7Lnur8KICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICBjb2xvcjogIiMwMEZGRkYiIC8vIOe6v+adoeminOiJsgogICAgICAgICAgfSwKICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICBjb2xvcjogIiMwMEZGRkYiIC8vIOeCueeahOminOiJsgogICAgICAgICAgfSwKICAgICAgICAgIGFyZWFTdHlsZTogewogICAgICAgICAgICBjb2xvcjogInJnYmEoMCwgMjU1LCAyNTUsIDAuMykiIC8vIOiDjOaZr+WMuuWfn+eahOminOiJsgogICAgICAgICAgfQogICAgICAgIH1dCiAgICAgIH07CiAgICAgIHRoaXMubXlDaGFydC5zZXRPcHRpb24ob3B0aW9uKTsKICAgIH0sCiAgICAvLyDmoLnmja7pgInkuK3nmoTnspLluqbliIfmjaLmipjnur/lm77mlbDmja4KICAgIGNoYW5nZWxpbmUobGluZSkgewogICAgICBpZiAobGluZSA9PT0gMSkgewogICAgICAgIC8vIOaYvuekuuWkqeaVsOaNrgogICAgICAgIHRoaXMubXlMaW5lQ2hhcnQodGhpcy5kYXlfdGltZSwgdGhpcy5kYXlfY291bnQpOwogICAgICB9IGVsc2UgaWYgKGxpbmUgPT09IDIpIHsKICAgICAgICAvLyDmmL7npLrmnIjmlbDmja4KICAgICAgICB0aGlzLm15TGluZUNoYXJ0KHRoaXMubW9udGhfdGltZSwgdGhpcy5tb250aF9jb3VudCk7CiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICAvLyDnm5HlkKzniLbnu4Tku7bkvKDpgJLnmoQgdGFnX3Rhc2tfaWQg5bm26I635Y+W6K+d6aKY5pWw5o2uCiAgICB0aGlzLiRidXMuJG9uKCJzZW5kX3RhZ190YXNrX2lkIiwgdGFnX3Rhc2tfaWQgPT4gewogICAgICB0aGlzLmdldFRvcGljRGF0YSh0YWdfdGFza19pZCk7CiAgICB9KTsKICB9LAogIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLiRidXMuJG9mZigic2VuZF90YWdfdGFza19pZCIpOwogIH0KfTs="},{"version":3,"names":["name","data","day_time","day_count","month_time","month_count","myChart","radio","watch","newradio","changeline","methods","getTopicData","id","$axios","get","then","res","day","Object","keys","sort","a","b","localeCompare","map","time","month","myLineChart","console","error","count","option","dispose","$echarts","init","document","getElementById","tooltip","trigger","position","axisPointer","type","label","backgroundColor","xAxis","axisLabel","color","yAxis","formatter","value","Math","floor","series","smooth","lineStyle","itemStyle","areaStyle","setOption","line","mounted","$bus","$on","tag_task_id","beforeDestroy","$off"],"sources":["src/components/RmAnalyze/post.vue"],"sourcesContent":["<template> \r\n    <div class=\"post\">\r\n      <div class=\"post_top\">\r\n        <svg class=\"icon\" aria-hidden=\"true\">\r\n          <use xlink:href=\"#icon-redu\"></use>\r\n        </svg>\r\n        <span class=\"stat-title\">人民网发布统计</span>\r\n        <div class=\"radio\">\r\n          <el-radio-group v-model=\"radio\">\r\n            <el-radio :label=\"1\">天</el-radio>\r\n            <el-radio :label=\"2\">月</el-radio>\r\n          </el-radio-group>\r\n        </div>\r\n      </div>\r\n      <div id=\"lineChart\"></div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: \"post\",\r\n    data() {\r\n      return {\r\n        day_time: [], // 存储天数据\r\n        day_count: [], // 存储天统计数据\r\n        month_time: [], // 存储月数据\r\n        month_count: [], // 存储月统计数据\r\n        myChart: null, // ECharts实例\r\n        radio: 1, // 默认选择 \"天\"\r\n      };\r\n    },\r\n    watch: {\r\n      radio(newradio) {\r\n        this.changeline(newradio);\r\n      },\r\n    },\r\n    methods: {\r\n      // 获取话题发博时间统计数据\r\n      getTopicData(id) {\r\n        this.$axios.get(`/post_time_statistics_rm?tag_task_id=${id}`).then((res) => {\r\n          const data = res.data.data.data;\r\n        \r\n          // 确保 data 和 data.day 不为空\r\n            if (data && data.day) {\r\n            // 更新天数据并排序\r\n            this.day_time = Object.keys(data.day).sort((a, b) => a.localeCompare(b)); // 更精确地按日期升序排序\r\n            this.day_count = this.day_time.map(time => data.day[time]);\r\n\r\n            // 更新月数据并排序\r\n            this.month_time = Object.keys(data.month).sort((a, b) => a.localeCompare(b));\r\n            this.month_count = this.month_time.map(time => data.month[time]);\r\n\r\n            // 默认显示天数据\r\n            this.myLineChart(this.day_time, this.day_count);\r\n            } else {\r\n            console.error('数据格式不正确或缺少 day 数据');\r\n            }\r\n        });\r\n      },\r\n  \r\n      // 渲染折线图\r\n      myLineChart(time, count) {\r\n        let option;\r\n        if (this.myChart) {\r\n          this.myChart.dispose(); // 解决echarts dom已加载的报错\r\n        }\r\n        this.myChart = this.$echarts.init(document.getElementById(\"lineChart\"));\r\n        option = {\r\n          tooltip: {\r\n            trigger: \"axis\",\r\n            position: \"center\",\r\n            axisPointer: {\r\n              type: \"cross\",\r\n              label: {\r\n                backgroundColor: \"#6a7985\",\r\n              },\r\n            },\r\n          },\r\n          xAxis: {\r\n            type: \"category\",\r\n            data: time, // 已排序的时间数据\r\n            axisLabel: {\r\n              color: \"white\", // 设置横坐标的字体颜色为白色\r\n            },\r\n          },\r\n          yAxis: {\r\n            type: \"value\",\r\n            axisLabel: {\r\n              color: \"white\", // 设置纵坐标的字体颜色为白色\r\n              formatter: (value) => {\r\n                // 保证纵坐标只显示整数\r\n                return Math.floor(value);\r\n              },\r\n            },\r\n          },\r\n          series: [\r\n            {\r\n              data: count,\r\n              type: \"line\",\r\n              smooth: true, // 平滑曲线\r\n              lineStyle: {\r\n                color: \"#00FFFF\", // 线条颜色\r\n              },\r\n              itemStyle: {\r\n                color: \"#00FFFF\", // 点的颜色\r\n              },\r\n              areaStyle: {\r\n                color: \"rgba(0, 255, 255, 0.3)\", // 背景区域的颜色\r\n              },\r\n            },\r\n          ],\r\n        };\r\n        this.myChart.setOption(option);\r\n      },\r\n  \r\n      // 根据选中的粒度切换折线图数据\r\n      changeline(line) {\r\n        if (line === 1) {\r\n          // 显示天数据\r\n          this.myLineChart(this.day_time, this.day_count);\r\n        } else if (line === 2) {\r\n          // 显示月数据\r\n          this.myLineChart(this.month_time, this.month_count);\r\n        }\r\n      },\r\n    },\r\n  \r\n    mounted() {\r\n      // 监听父组件传递的 tag_task_id 并获取话题数据\r\n      this.$bus.$on(\"send_tag_task_id\", (tag_task_id) => {\r\n        this.getTopicData(tag_task_id);\r\n      });\r\n    },\r\n  \r\n    beforeDestroy() {\r\n      this.$bus.$off(\"send_tag_task_id\");\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .post {\r\n    \r\n    color: #ffffff;\r\n    /* border-radius: 8px; */\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* 添加阴影效果 */\r\n    border: 2px solid #669ef3a5; /* 深色边框 */\r\n    border-radius: 10px;\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  .post:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: -2px;\r\n    left: -2px;\r\n    right: -2px;\r\n    bottom: -2px;\r\n    border-radius: 12px;\r\n    border: 3px solid rgba(255, 255, 255, 0); /* 外部细边框 */\r\n    z-index: -1;\r\n    animation: borderAnimation 4s ease-in-out infinite;\r\n  }\r\n  \r\n  #lineChart {\r\n    width: 105%; /* 使图表宽度适应父容器 */\r\n    height: 270px; /* 调整图表高度，使其更加合适 */\r\n    color: white;\r\n  }\r\n  \r\n  .post_top {\r\n    height: 10%;\r\n    margin-left: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start; /* 使\"发布统计\"在左边 */\r\n    color: white;\r\n  }\r\n  \r\n  .post_top .radio {\r\n    position: relative;\r\n    margin-right: 20px;\r\n    top: 5px;\r\n    margin-left: auto; /* 使单选按钮组对齐到右边 */\r\n    color: white;\r\n  }\r\n  \r\n  .el-radio {\r\n    z-index: 1;\r\n    color: white;\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    .post {\r\n      height: 10%; /* 在小屏幕上减小高度 */\r\n    }\r\n    #lineChart {\r\n      height: 200px; /* 调整图表高度 */\r\n    }\r\n  }\r\n  </style>\r\n  "],"mappings":";AAmBA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MAAA;MACAC,SAAA;MAAA;MACAC,UAAA;MAAA;MACAC,WAAA;MAAA;MACAC,OAAA;MAAA;MACAC,KAAA;IACA;EACA;EACAC,KAAA;IACAD,MAAAE,QAAA;MACA,KAAAC,UAAA,CAAAD,QAAA;IACA;EACA;EACAE,OAAA;IACA;IACAC,aAAAC,EAAA;MACA,KAAAC,MAAA,CAAAC,GAAA,yCAAAF,EAAA,IAAAG,IAAA,CAAAC,GAAA;QACA,MAAAhB,IAAA,GAAAgB,GAAA,CAAAhB,IAAA,CAAAA,IAAA,CAAAA,IAAA;;QAEA;QACA,IAAAA,IAAA,IAAAA,IAAA,CAAAiB,GAAA;UACA;UACA,KAAAhB,QAAA,GAAAiB,MAAA,CAAAC,IAAA,CAAAnB,IAAA,CAAAiB,GAAA,EAAAG,IAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAD,CAAA,CAAAE,aAAA,CAAAD,CAAA;UACA,KAAApB,SAAA,QAAAD,QAAA,CAAAuB,GAAA,CAAAC,IAAA,IAAAzB,IAAA,CAAAiB,GAAA,CAAAQ,IAAA;;UAEA;UACA,KAAAtB,UAAA,GAAAe,MAAA,CAAAC,IAAA,CAAAnB,IAAA,CAAA0B,KAAA,EAAAN,IAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAD,CAAA,CAAAE,aAAA,CAAAD,CAAA;UACA,KAAAlB,WAAA,QAAAD,UAAA,CAAAqB,GAAA,CAAAC,IAAA,IAAAzB,IAAA,CAAA0B,KAAA,CAAAD,IAAA;;UAEA;UACA,KAAAE,WAAA,MAAA1B,QAAA,OAAAC,SAAA;QACA;UACA0B,OAAA,CAAAC,KAAA;QACA;MACA;IACA;IAEA;IACAF,YAAAF,IAAA,EAAAK,KAAA;MACA,IAAAC,MAAA;MACA,SAAA1B,OAAA;QACA,KAAAA,OAAA,CAAA2B,OAAA;MACA;MACA,KAAA3B,OAAA,QAAA4B,QAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACAL,MAAA;QACAM,OAAA;UACAC,OAAA;UACAC,QAAA;UACAC,WAAA;YACAC,IAAA;YACAC,KAAA;cACAC,eAAA;YACA;UACA;QACA;QACAC,KAAA;UACAH,IAAA;UACAzC,IAAA,EAAAyB,IAAA;UAAA;UACAoB,SAAA;YACAC,KAAA;UACA;QACA;QACAC,KAAA;UACAN,IAAA;UACAI,SAAA;YACAC,KAAA;YAAA;YACAE,SAAA,EAAAC,KAAA;cACA;cACA,OAAAC,IAAA,CAAAC,KAAA,CAAAF,KAAA;YACA;UACA;QACA;QACAG,MAAA,GACA;UACApD,IAAA,EAAA8B,KAAA;UACAW,IAAA;UACAY,MAAA;UAAA;UACAC,SAAA;YACAR,KAAA;UACA;UACAS,SAAA;YACAT,KAAA;UACA;UACAU,SAAA;YACAV,KAAA;UACA;QACA;MAEA;MACA,KAAAzC,OAAA,CAAAoD,SAAA,CAAA1B,MAAA;IACA;IAEA;IACAtB,WAAAiD,IAAA;MACA,IAAAA,IAAA;QACA;QACA,KAAA/B,WAAA,MAAA1B,QAAA,OAAAC,SAAA;MACA,WAAAwD,IAAA;QACA;QACA,KAAA/B,WAAA,MAAAxB,UAAA,OAAAC,WAAA;MACA;IACA;EACA;EAEAuD,QAAA;IACA;IACA,KAAAC,IAAA,CAAAC,GAAA,qBAAAC,WAAA;MACA,KAAAnD,YAAA,CAAAmD,WAAA;IACA;EACA;EAEAC,cAAA;IACA,KAAAH,IAAA,CAAAI,IAAA;EACA;AACA","ignoreList":[]}]}