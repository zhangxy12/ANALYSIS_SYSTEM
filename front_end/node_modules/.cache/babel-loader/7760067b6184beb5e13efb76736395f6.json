{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration5\\src\\main.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration5\\src\\main.vue","mtime":1741680180018},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\babel.config.js","mtime":1732591727371},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1733210776367},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":1733210776030},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lml0ZXJhdG9yLm1hcC5qcyI7CmltcG9ydCBhdXRvUmVzaXplIGZyb20gJy4uLy4uLy4uL21peGluL2F1dG9SZXNpemUnOwppbXBvcnQgeyBnZXRQb2x5bGluZUxlbmd0aCB9IGZyb20gJ0BqaWFtaW5naGkvY2hhcnRzL2xpYi91dGlsJzsKaW1wb3J0IHsgZGVlcE1lcmdlIH0gZnJvbSAnQGppYW1pbmdoaS9jaGFydHMvbGliL3V0aWwvaW5kZXgnOwppbXBvcnQgeyBkZWVwQ2xvbmUgfSBmcm9tICdAamlhbWluZ2hpL2MtcmVuZGVyL2xpYi9wbHVnaW4vdXRpbCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRHZEZWNvcmF0aW9uNScsCiAgbWl4aW5zOiBbYXV0b1Jlc2l6ZV0sCiAgcHJvcHM6IHsKICAgIGNvbG9yOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiAoKSA9PiBbXQogICAgfSwKICAgIGR1cjogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDEuMgogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlZjogJ2RlY29yYXRpb24tNScsCiAgICAgIGxpbmUxUG9pbnRzOiAnJywKICAgICAgbGluZTJQb2ludHM6ICcnLAogICAgICBsaW5lMUxlbmd0aDogMCwKICAgICAgbGluZTJMZW5ndGg6IDAsCiAgICAgIGRlZmF1bHRDb2xvcjogWycjM2Y5NmE1JywgJyMzZjk2YTUnXSwKICAgICAgbWVyZ2VkQ29sb3I6IFtdCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIGNvbG9yKCkgewogICAgICBjb25zdCB7CiAgICAgICAgbWVyZ2VDb2xvcgogICAgICB9ID0gdGhpczsKICAgICAgbWVyZ2VDb2xvcigpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYWZ0ZXJBdXRvUmVzaXplTWl4aW5Jbml0KCkgewogICAgICBjb25zdCB7CiAgICAgICAgY2FsY1NWR0RhdGEKICAgICAgfSA9IHRoaXM7CiAgICAgIGNhbGNTVkdEYXRhKCk7CiAgICB9LAogICAgY2FsY1NWR0RhdGEoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICB3aWR0aCwKICAgICAgICBoZWlnaHQKICAgICAgfSA9IHRoaXM7CiAgICAgIGxldCBsaW5lMVBvaW50cyA9IFtbMCwgaGVpZ2h0ICogMC4yXSwgW3dpZHRoICogMC4xOCwgaGVpZ2h0ICogMC4yXSwgW3dpZHRoICogMC4yLCBoZWlnaHQgKiAwLjRdLCBbd2lkdGggKiAwLjI1LCBoZWlnaHQgKiAwLjRdLCBbd2lkdGggKiAwLjI3LCBoZWlnaHQgKiAwLjZdLCBbd2lkdGggKiAwLjcyLCBoZWlnaHQgKiAwLjZdLCBbd2lkdGggKiAwLjc1LCBoZWlnaHQgKiAwLjRdLCBbd2lkdGggKiAwLjgsIGhlaWdodCAqIDAuNF0sIFt3aWR0aCAqIDAuODIsIGhlaWdodCAqIDAuMl0sIFt3aWR0aCwgaGVpZ2h0ICogMC4yXV07CiAgICAgIGxldCBsaW5lMlBvaW50cyA9IFtbd2lkdGggKiAwLjMsIGhlaWdodCAqIDAuOF0sIFt3aWR0aCAqIDAuNywgaGVpZ2h0ICogMC44XV07CiAgICAgIGNvbnN0IGxpbmUxTGVuZ3RoID0gZ2V0UG9seWxpbmVMZW5ndGgobGluZTFQb2ludHMpOwogICAgICBjb25zdCBsaW5lMkxlbmd0aCA9IGdldFBvbHlsaW5lTGVuZ3RoKGxpbmUyUG9pbnRzKTsKICAgICAgbGluZTFQb2ludHMgPSBsaW5lMVBvaW50cy5tYXAocG9pbnQgPT4gcG9pbnQuam9pbignLCcpKS5qb2luKCcgJyk7CiAgICAgIGxpbmUyUG9pbnRzID0gbGluZTJQb2ludHMubWFwKHBvaW50ID0+IHBvaW50LmpvaW4oJywnKSkuam9pbignICcpOwogICAgICB0aGlzLmxpbmUxUG9pbnRzID0gbGluZTFQb2ludHM7CiAgICAgIHRoaXMubGluZTJQb2ludHMgPSBsaW5lMlBvaW50czsKICAgICAgdGhpcy5saW5lMUxlbmd0aCA9IGxpbmUxTGVuZ3RoOwogICAgICB0aGlzLmxpbmUyTGVuZ3RoID0gbGluZTJMZW5ndGg7CiAgICB9LAogICAgb25SZXNpemUoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBjYWxjU1ZHRGF0YQogICAgICB9ID0gdGhpczsKICAgICAgY2FsY1NWR0RhdGEoKTsKICAgIH0sCiAgICBtZXJnZUNvbG9yKCkgewogICAgICBjb25zdCB7CiAgICAgICAgY29sb3IsCiAgICAgICAgZGVmYXVsdENvbG9yCiAgICAgIH0gPSB0aGlzOwogICAgICB0aGlzLm1lcmdlZENvbG9yID0gZGVlcE1lcmdlKGRlZXBDbG9uZShkZWZhdWx0Q29sb3IsIHRydWUpLCBjb2xvciB8fCBbXSk7CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgY29uc3QgewogICAgICBtZXJnZUNvbG9yCiAgICB9ID0gdGhpczsKICAgIG1lcmdlQ29sb3IoKTsKICB9Cn07"},{"version":3,"names":["autoResize","getPolylineLength","deepMerge","deepClone","name","mixins","props","color","type","Array","default","dur","Number","data","ref","line1Points","line2Points","line1Length","line2Length","defaultColor","mergedColor","watch","mergeColor","methods","afterAutoResizeMixinInit","calcSVGData","width","height","map","point","join","onResize","mounted"],"sources":["node_modules/@jiaminghi/data-view/lib/components/decoration5/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-decoration-5\" :ref=\"ref\">\n    <svg :width=\"width\" :height=\"height\">\n      <polyline\n        fill=\"transparent\"\n        :stroke=\"mergedColor[0]\"\n        stroke-width=\"3\"\n        :points=\"line1Points\"\n      >\n        <animate\n          attributeName=\"stroke-dasharray\"\n          attributeType=\"XML\"\n          :from=\"`0, ${line1Length / 2}, 0, ${line1Length / 2}`\"\n          :to=\"`0, 0, ${line1Length}, 0`\"\n          :dur=\"`${dur}s`\"\n          begin=\"0s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;1\"\n          keySplines=\"0.4,1,0.49,0.98\"\n          repeatCount=\"indefinite\"\n        />\n      </polyline>\n      <polyline\n        fill=\"transparent\"\n        :stroke=\"mergedColor[1]\"\n        stroke-width=\"2\"\n        :points=\"line2Points\"\n      >\n        <animate\n          attributeName=\"stroke-dasharray\"\n          attributeType=\"XML\"\n          :from=\"`0, ${line2Length / 2}, 0, ${line2Length / 2}`\"\n          :to=\"`0, 0, ${line2Length}, 0`\"\n          :dur=\"`${dur}s`\"\n          begin=\"0s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;1\"\n          keySplines=\".4,1,.49,.98\"\n          repeatCount=\"indefinite\"\n        />\n      </polyline>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { getPolylineLength } from '@jiaminghi/charts/lib/util'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDecoration5',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    dur: {\n      type: Number,\n      default: 1.2\n    }\n  },\n  data () {\n    return {\n      ref: 'decoration-5',\n\n      line1Points: '',\n      line2Points: '',\n\n      line1Length: 0,\n      line2Length: 0,\n\n      defaultColor: ['#3f96a5', '#3f96a5'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    calcSVGData () {\n      const { width, height } = this\n\n      let line1Points = [\n        [0, height * 0.2], [width * 0.18, height * 0.2], [width * 0.2, height * 0.4], [width * 0.25, height * 0.4],\n        [width * 0.27, height * 0.6], [width * 0.72, height * 0.6], [width * 0.75, height * 0.4],\n        [width * 0.8, height * 0.4], [width * 0.82, height * 0.2], [width, height * 0.2]\n      ]\n\n      let line2Points = [\n        [width * 0.3, height * 0.8], [width * 0.7, height * 0.8]\n      ]\n\n      const line1Length = getPolylineLength(line1Points)\n      const line2Length = getPolylineLength(line2Points)\n\n      line1Points = line1Points.map(point => point.join(',')).join(' ')\n      line2Points = line2Points.map(point => point.join(',')).join(' ')\n\n      this.line1Points = line1Points\n      this.line2Points = line2Points\n\n      this.line1Length = line1Length\n      this.line2Length = line2Length\n    },\n    onResize () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"],"mappings":";AA8CA,OAAAA,UAAA;AAEA,SAAAC,iBAAA;AAEA,SAAAC,SAAA;AAEA,SAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAL,UAAA;EACAM,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,OAAA,EAAAA,CAAA;IACA;IACAC,GAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,OAAA;IACA;EACA;EACAG,KAAA;IACA;MACAC,GAAA;MAEAC,WAAA;MACAC,WAAA;MAEAC,WAAA;MACAC,WAAA;MAEAC,YAAA;MAEAC,WAAA;IACA;EACA;EACAC,KAAA;IACAd,MAAA;MACA;QAAAe;MAAA;MAEAA,UAAA;IACA;EACA;EACAC,OAAA;IACAC,yBAAA;MACA;QAAAC;MAAA;MAEAA,WAAA;IACA;IACAA,YAAA;MACA;QAAAC,KAAA;QAAAC;MAAA;MAEA,IAAAZ,WAAA,IACA,IAAAY,MAAA,UAAAD,KAAA,SAAAC,MAAA,UAAAD,KAAA,QAAAC,MAAA,UAAAD,KAAA,SAAAC,MAAA,SACA,CAAAD,KAAA,SAAAC,MAAA,UAAAD,KAAA,SAAAC,MAAA,UAAAD,KAAA,SAAAC,MAAA,SACA,CAAAD,KAAA,QAAAC,MAAA,UAAAD,KAAA,SAAAC,MAAA,UAAAD,KAAA,EAAAC,MAAA,QACA;MAEA,IAAAX,WAAA,IACA,CAAAU,KAAA,QAAAC,MAAA,UAAAD,KAAA,QAAAC,MAAA,QACA;MAEA,MAAAV,WAAA,GAAAhB,iBAAA,CAAAc,WAAA;MACA,MAAAG,WAAA,GAAAjB,iBAAA,CAAAe,WAAA;MAEAD,WAAA,GAAAA,WAAA,CAAAa,GAAA,CAAAC,KAAA,IAAAA,KAAA,CAAAC,IAAA,OAAAA,IAAA;MACAd,WAAA,GAAAA,WAAA,CAAAY,GAAA,CAAAC,KAAA,IAAAA,KAAA,CAAAC,IAAA,OAAAA,IAAA;MAEA,KAAAf,WAAA,GAAAA,WAAA;MACA,KAAAC,WAAA,GAAAA,WAAA;MAEA,KAAAC,WAAA,GAAAA,WAAA;MACA,KAAAC,WAAA,GAAAA,WAAA;IACA;IACAa,SAAA;MACA;QAAAN;MAAA;MAEAA,WAAA;IACA;IACAH,WAAA;MACA;QAAAf,KAAA;QAAAY;MAAA;MAEA,KAAAC,WAAA,GAAAlB,SAAA,CAAAC,SAAA,CAAAgB,YAAA,SAAAZ,KAAA;IACA;EACA;EACAyB,QAAA;IACA;MAAAV;IAAA;IAEAA,UAAA;EACA;AACA","ignoreList":[]}]}