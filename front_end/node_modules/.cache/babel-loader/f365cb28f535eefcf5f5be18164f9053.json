{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\blog_detail\\location.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\blog_detail\\location.vue","mtime":1742892893090},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\babel.config.js","mtime":1732591727371},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":1733210776030},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZXJyb3IuY2F1c2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQuaXRlcmF0b3IuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQuaXRlcmF0b3IuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQuaXRlcmF0b3IubWFwLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBncmFwaERhdGE6IFtdLAogICAgICBkaWFsb2dWaXNpYmxlOiBmYWxzZSwKICAgICAgbWFwQ29uZmlnOiB7CiAgICAgICAgYXVkaXRObzogJ0dTKDIwMjQpMDY1MOWPtycsCiAgICAgICAgc291cmNlOiAn5Zu95a625Zyw55CG5L+h5oGv5YWs5YWx5pyN5Yqh5bmz5Y+wJwogICAgICB9LAogICAgICAvLyDnibnmrorooYzmlL/ljLrliJLmmKDlsITooajvvIjkuI3pnIDopoHliqAi55yBIueahOWcsOWMuu+8iQogICAgICBzcGVjaWFsUmVnaW9uczogewogICAgICAgICfljJfkuqwnOiAn5YyX5Lqs5biCJywKICAgICAgICAn5aSp5rSlJzogJ+Wkqea0peW4gicsCiAgICAgICAgJ+S4iua1tyc6ICfkuIrmtbfluIInLAogICAgICAgICfph43luoYnOiAn6YeN5bqG5biCJywKICAgICAgICAn5YaF6JKZ5Y+kJzogJ+WGheiSmeWPpOiHquayu+WMuicsCiAgICAgICAgJ+W5v+ilvyc6ICflub/opb/lo67ml4/oh6rmsrvljLonLAogICAgICAgICfopb/ol48nOiAn6KW/6JeP6Ieq5rK75Yy6JywKICAgICAgICAn5a6B5aSPJzogJ+WugeWkj+WbnuaXj+iHquayu+WMuicsCiAgICAgICAgJ+aWsOeWhic6ICfmlrDnlobnu7TlkL7lsJToh6rmsrvljLonLAogICAgICAgICfpppnmuK8nOiAn6aaZ5riv54m55Yir6KGM5pS/5Yy6JywKICAgICAgICAn5r6z6ZeoJzogJ+a+s+mXqOeJueWIq+ihjOaUv+WMuicsCiAgICAgICAgJ+WPsOa5vic6ICflj7Dmub7nnIEnCiAgICAgIH0KICAgIH07CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5mZXRjaERhdGFBbmREcmF3TWFwKCdsb2NhdGlvbl9ncmFwaCcpOwogIH0sCiAgbWV0aG9kczogewogICAgLy8g6KeE6IyD5YyW5Zyw5Yy65ZCN56ewCiAgICBub3JtYWxpemVSZWdpb25OYW1lKG5hbWUpIHsKICAgICAgLy8g5aaC5p6c5bey57uP5piv5a6M5pW05ZCN56ew77yI5bim55yBL+W4gi/ljLrvvInliJnnm7TmjqXov5Tlm54KICAgICAgaWYgKG5hbWUuZW5kc1dpdGgoJ+ecgScpIHx8IG5hbWUuZW5kc1dpdGgoJ+W4gicpIHx8IG5hbWUuZW5kc1dpdGgoJ+iHquayu+WMuicpIHx8IG5hbWUuZW5kc1dpdGgoJ+eJueWIq+ihjOaUv+WMuicpKSB7CiAgICAgICAgcmV0dXJuIG5hbWU7CiAgICAgIH0KCiAgICAgIC8vIOajgOafpeeJueauiuihjOaUv+WMugogICAgICBpZiAodGhpcy5zcGVjaWFsUmVnaW9uc1tuYW1lXSkgewogICAgICAgIHJldHVybiB0aGlzLnNwZWNpYWxSZWdpb25zW25hbWVdOwogICAgICB9CgogICAgICAvLyDmma7pgJrnnIHku73liqDkuIoi55yBIuWQjue8gAogICAgICByZXR1cm4gbmFtZSArICfnnIEnOwogICAgfSwKICAgIGFzeW5jIGZldGNoRGF0YUFuZERyYXdNYXAoY29udGFpbmVySWQpIHsKICAgICAgdHJ5IHsKICAgICAgICAvLyAxLiDliqDovb0gY2hpbmEuZ2VvanNvbiDmlofku7YKICAgICAgICBjb25zdCBnZW9Kc29uUmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2dlb2pzb24vY2hpbmEuZ2VvanNvbicpOwogICAgICAgIGlmICghZ2VvSnNvblJlc3BvbnNlLm9rKSB0aHJvdyBuZXcgRXJyb3IoJ+WcsOWbvuaWh+S7tuWKoOi9veWksei0pScpOwogICAgICAgIGNvbnN0IGNoaW5hR2VvSlNPTiA9IGF3YWl0IGdlb0pzb25SZXNwb25zZS5qc29uKCk7CiAgICAgICAgdGhpcy4kZWNoYXJ0cy5yZWdpc3Rlck1hcCgnY2hpbmEnLCBjaGluYUdlb0pTT04pOwoKICAgICAgICAvLyAyLiDojrflj5bkuJrliqHmlbDmja7lubbop4TojIPljJblnLDljLrlkI3np7AKICAgICAgICBsZXQgcXVlcnkgPSB0aGlzLiRyb3V0ZS5xdWVyeTsKICAgICAgICBjb25zdCByZXMgPSBhd2FpdCB0aGlzLiRheGlvcy5nZXQoYC9jb21tZW50L2xvY2F0aW9uP3RhZ190YXNrX2lkPSR7cXVlcnkudGFnX3Rhc2tfaWR9JndlaWJvX2lkPSR7cXVlcnkud2VpYm9faWR9YCk7CiAgICAgICAgY29uc3QgbG9jYXRpb25EYXRhID0gcmVzLmRhdGEuZGF0YS5sb2NhdGlvbl9kYXRhOwoKICAgICAgICAvLyDlr7nmlbDmja7ov5vooYzogZrlkIjvvIjnm7jlkIzlnLDljLrlkIjlubborqHmlbDvvIkKICAgICAgICBjb25zdCBkYXRhTWFwID0ge307CiAgICAgICAgbG9jYXRpb25EYXRhLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICBjb25zdCBub3JtYWxpemVkTmFtZSA9IHRoaXMubm9ybWFsaXplUmVnaW9uTmFtZShpdGVtLmxvY2F0aW9uKTsKICAgICAgICAgIGRhdGFNYXBbbm9ybWFsaXplZE5hbWVdID0gKGRhdGFNYXBbbm9ybWFsaXplZE5hbWVdIHx8IDApICsgaXRlbS5jb3VudDsKICAgICAgICB9KTsKCiAgICAgICAgLy8g6L2s5o2i5Li6IGVjaGFydHMg6ZyA6KaB55qE5qC85byPCiAgICAgICAgdGhpcy5ncmFwaERhdGEgPSBPYmplY3Qua2V5cyhkYXRhTWFwKS5tYXAobmFtZSA9PiAoewogICAgICAgICAgbmFtZSwKICAgICAgICAgIHZhbHVlOiBkYXRhTWFwW25hbWVdCiAgICAgICAgfSkpOwogICAgICAgIHRoaXMuZHJhd01hcChjb250YWluZXJJZCk7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcign5Yid5aeL5YyW5aSx6LSlOicsIGVycm9yKTsKICAgICAgfQogICAgfSwKICAgIGRyYXdNYXAoY29udGFpbmVySWQpIHsKICAgICAgY29uc3QgbXlDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb250YWluZXJJZCkpOwogICAgICBjb25zdCBtYXhDb3VudCA9IE1hdGgubWF4KC4uLnRoaXMuZ3JhcGhEYXRhLm1hcChpdGVtID0+IGl0ZW0udmFsdWUpKTsKICAgICAgY29uc3Qgb3B0aW9uID0gewogICAgICAgIC8vIHRpdGxlOiB7CgogICAgICAgIC8vICAgbGVmdDogJ2NlbnRlcicsCiAgICAgICAgLy8gICB0ZXh0U3R5bGU6IHsKICAgICAgICAvLyAgICAgY29sb3I6ICcjZmZmZmZmJywKICAgICAgICAvLyAgICAgZm9udFNpemU6IDE4LAogICAgICAgIC8vICAgICBmb250V2VpZ2h0OiAnYm9sZCcKICAgICAgICAvLyAgIH0KICAgICAgICAvLyB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICdpdGVtJywKICAgICAgICAgIGZvcm1hdHRlcjogJ3tifToge2N9IOivhOiuuicsCiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDAsIDAsIDAsIDAuOCknLAogICAgICAgICAgYm9yZGVyQ29sb3I6ICcjNDBhOWZmJywKICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICBjb2xvcjogJyNmZmZmZmYnLAogICAgICAgICAgICBmb250U2l6ZTogMTIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHZpc3VhbE1hcDogewogICAgICAgICAgbGVmdDogMjAsCiAgICAgICAgICBib3R0b206IDIwLAogICAgICAgICAgbWluOiAwLAogICAgICAgICAgbWF4OiBtYXhDb3VudCwKICAgICAgICAgIGluUmFuZ2U6IHsKICAgICAgICAgICAgY29sb3I6IFsnI2UwZjdlMCcsICcjMjhkYTdlJ10KICAgICAgICAgIH0sCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgY29sb3I6ICcjZmZmJwogICAgICAgICAgfSwKICAgICAgICAgIGl0ZW1XaWR0aDogMTAsCiAgICAgICAgICBpdGVtSGVpZ2h0OiAxMDAsCiAgICAgICAgICBjYWxjdWxhYmxlOiB0cnVlCiAgICAgICAgfSwKICAgICAgICBncmFwaGljOiB7CiAgICAgICAgICB0eXBlOiAndGV4dCcsCiAgICAgICAgICBsZWZ0OiA1MCwKICAgICAgICAgIGJvdHRvbTogMCwKICAgICAgICAgIHo6IDEwMCwKICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgIHRleHQ6IGDlrqHlm77lj7fvvJoke3RoaXMubWFwQ29uZmlnLmF1ZGl0Tm99IOadpea6kO+8miR7dGhpcy5tYXBDb25maWcuc291cmNlfWAsCiAgICAgICAgICAgIGZvbnQ6ICcxMnB4IE1pY3Jvc29mdCBZYUhlaScsCiAgICAgICAgICAgIGZpbGw6ICcjZmZmJywKICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgwLDAsMCwwKScsCiAgICAgICAgICAgIHBhZGRpbmc6IFs2LCAxMF0sCiAgICAgICAgICAgIGJvcmRlclJhZGl1czogNAogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgbmFtZTogJ+WcsOeQhuS9jee9ruWIhuW4gycsCiAgICAgICAgICB0eXBlOiAnbWFwJywKICAgICAgICAgIG1hcDogJ2NoaW5hJywKICAgICAgICAgIHJvYW06IHRydWUsCiAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICBzaG93OiBmYWxzZSwKICAgICAgICAgICAgLy8g5LiN5pi+56S655yB5Lu95paH5a2XCiAgICAgICAgICAgIGNvbG9yOiAnIzAwMCcsCiAgICAgICAgICAgIGZvbnRTaXplOiAxMAogICAgICAgICAgfSwKICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICBib3JkZXJDb2xvcjogJyM0MGE5ZmYnLAogICAgICAgICAgICBib3JkZXJXaWR0aDogMSwKICAgICAgICAgICAgYXJlYUNvbG9yOiAnIzQyYWNlOWM4JwogICAgICAgICAgfSwKICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjZmZmJywKICAgICAgICAgICAgICBmb250U2l6ZTogMTIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgICAgYXJlYUNvbG9yOiAnIzg5Y2Q0NScKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGxheW91dENlbnRlcjogWyc1MCUnLCAnNTAlJ10sCiAgICAgICAgICAvLyDlnLDlm77lsYXkuK3mmL7npLoKICAgICAgICAgIGxheW91dFNpemU6ICcxMDAlJywKICAgICAgICAgIC8vIOWcsOWbvumAguW6lOeItue7hOS7tuWkp+WwjwogICAgICAgICAgZGF0YTogdGhpcy5ncmFwaERhdGEKICAgICAgICB9XQogICAgICB9OwogICAgICBteUNoYXJ0LnNldE9wdGlvbihvcHRpb24pOwogICAgICBjb25zdCByZXNpemVIYW5kbGVyID0gKCkgPT4gbXlDaGFydC5yZXNpemUoKTsKICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHJlc2l6ZUhhbmRsZXIpOwogICAgICB0aGlzLiRvbmNlKCdob29rOmJlZm9yZURlc3Ryb3knLCAoKSA9PiB7CiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHJlc2l6ZUhhbmRsZXIpOwogICAgICAgIG15Q2hhcnQuZGlzcG9zZSgpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDmmL7npLrlnLDlm74KICAgIHNob3coKSB7CiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWU7CiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICB0aGlzLmZldGNoRGF0YUFuZERyYXdNYXAoJ21hcENoYXJ0Jyk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"names":["data","graphData","dialogVisible","mapConfig","auditNo","source","specialRegions","mounted","fetchDataAndDrawMap","methods","normalizeRegionName","name","endsWith","containerId","geoJsonResponse","fetch","ok","Error","chinaGeoJSON","json","$echarts","registerMap","query","$route","res","$axios","get","tag_task_id","weibo_id","locationData","location_data","dataMap","forEach","item","normalizedName","location","count","Object","keys","map","value","drawMap","error","console","myChart","init","document","getElementById","maxCount","Math","max","option","tooltip","trigger","formatter","backgroundColor","borderColor","textStyle","color","fontSize","visualMap","left","bottom","min","inRange","itemWidth","itemHeight","calculable","graphic","type","z","style","text","font","fill","padding","borderRadius","series","roam","label","show","itemStyle","borderWidth","areaColor","emphasis","layoutCenter","layoutSize","setOption","resizeHandler","resize","window","addEventListener","$once","removeEventListener","dispose","$nextTick"],"sources":["src/components/blog_detail/location.vue"],"sourcesContent":["<template>\r\n  <div class=\"location\">\r\n    <div class=\"location_title\">评论地理位置分布</div>\r\n    <!-- <el-button type=\"text\" @click=\"show\" class=\"maxTree\">点击打开地图</el-button> -->\r\n    <div id=\"location_graph\"></div>\r\n    <!-- <el-dialog title=\"地理位置大图\" :visible.sync=\"dialogVisible\" fullscreen=\"true\">\r\n      <div id=\"mapChart\"></div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"dialogVisible = false\">确 定</el-button>\r\n      </span>\r\n    </el-dialog> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      graphData: [],\r\n      dialogVisible: false,\r\n      mapConfig: {\r\n        auditNo: 'GS(2024)0650号',\r\n        source: '国家地理信息公共服务平台'\r\n      },\r\n      // 特殊行政区划映射表（不需要加\"省\"的地区）\r\n      specialRegions: {\r\n        '北京': '北京市',\r\n        '天津': '天津市',\r\n        '上海': '上海市',\r\n        '重庆': '重庆市',\r\n        '内蒙古': '内蒙古自治区',\r\n        '广西': '广西壮族自治区',\r\n        '西藏': '西藏自治区',\r\n        '宁夏': '宁夏回族自治区',\r\n        '新疆': '新疆维吾尔自治区',\r\n        '香港': '香港特别行政区',\r\n        '澳门': '澳门特别行政区',\r\n        '台湾': '台湾省'\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchDataAndDrawMap('location_graph');\r\n  },\r\n  methods: {\r\n    // 规范化地区名称\r\n    normalizeRegionName(name) {\r\n      // 如果已经是完整名称（带省/市/区）则直接返回\r\n      if (name.endsWith('省') || name.endsWith('市') || name.endsWith('自治区') || name.endsWith('特别行政区')) {\r\n        return name;\r\n      }\r\n\r\n      // 检查特殊行政区\r\n      if (this.specialRegions[name]) {\r\n        return this.specialRegions[name];\r\n      }\r\n\r\n      // 普通省份加上\"省\"后缀\r\n      return name + '省';\r\n    },\r\n\r\n    async fetchDataAndDrawMap(containerId) {\r\n      try {\r\n        // 1. 加载 china.geojson 文件\r\n        const geoJsonResponse = await fetch('/geojson/china.geojson');\r\n        if (!geoJsonResponse.ok) throw new Error('地图文件加载失败');\r\n        const chinaGeoJSON = await geoJsonResponse.json();\r\n        this.$echarts.registerMap('china', chinaGeoJSON);\r\n\r\n        // 2. 获取业务数据并规范化地区名称\r\n        let query = this.$route.query;\r\n        const res = await this.$axios.get(`/comment/location?tag_task_id=${query.tag_task_id}&weibo_id=${query.weibo_id}`);\r\n        const locationData = res.data.data.location_data;\r\n\r\n        // 对数据进行聚合（相同地区合并计数）\r\n        const dataMap = {};\r\n        locationData.forEach(item => {\r\n          const normalizedName = this.normalizeRegionName(item.location);\r\n          dataMap[normalizedName] = (dataMap[normalizedName] || 0) + item.count;\r\n        });\r\n\r\n        // 转换为 echarts 需要的格式\r\n        this.graphData = Object.keys(dataMap).map(name => ({\r\n          name,\r\n          value: dataMap[name]\r\n        }));\r\n\r\n        this.drawMap(containerId);\r\n      } catch (error) {\r\n        console.error('初始化失败:', error);\r\n      }\r\n    },\r\n\r\n    drawMap(containerId) {\r\n      const myChart = this.$echarts.init(document.getElementById(containerId));\r\n      const maxCount = Math.max(...this.graphData.map(item => item.value));\r\n\r\n      const option = {\r\n        // title: {\r\n          \r\n        //   left: 'center',\r\n        //   textStyle: {\r\n        //     color: '#ffffff',\r\n        //     fontSize: 18,\r\n        //     fontWeight: 'bold'\r\n        //   }\r\n        // },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{b}: {c} 评论',\r\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n          borderColor: '#40a9ff',\r\n          textStyle: {\r\n            color: '#ffffff',\r\n            fontSize: 12\r\n          }\r\n        },\r\n        visualMap: {\r\n          left: 20,\r\n          bottom: 20,\r\n          min: 0,\r\n          max: maxCount,\r\n          inRange: {\r\n            color: ['#e0f7e0', '#28da7e']\r\n          },\r\n          textStyle: {\r\n            color: '#fff'\r\n          },\r\n          itemWidth: 10,\r\n          itemHeight: 100,\r\n          calculable: true\r\n        },\r\n        graphic: {\r\n          type: 'text',\r\n          left: 50,\r\n          bottom: 0,\r\n          z: 100,\r\n          style: {\r\n            text: `审图号：${this.mapConfig.auditNo} 来源：${this.mapConfig.source}`,\r\n            font: '12px Microsoft YaHei',\r\n            fill: '#fff',\r\n            backgroundColor: 'rgba(0,0,0,0)',\r\n            padding: [6, 10],\r\n            borderRadius: 4\r\n          }\r\n        },\r\n        series: [{\r\n          name: '地理位置分布',\r\n          type: 'map',\r\n          map: 'china',\r\n          roam: true,\r\n          label: {\r\n            show: false, // 不显示省份文字\r\n            color: '#000',\r\n            fontSize: 10\r\n          },\r\n          itemStyle: {\r\n            borderColor: '#40a9ff',\r\n            borderWidth: 1,\r\n            areaColor: '#42ace9c8'\r\n          },\r\n          emphasis: {\r\n            label: {\r\n              color: '#fff',\r\n              fontSize: 12\r\n            },\r\n            itemStyle: {\r\n              areaColor: '#89cd45'\r\n            }\r\n          },\r\n          layoutCenter: ['50%', '50%'],  // 地图居中显示\r\n          layoutSize: '100%',  // 地图适应父组件大小\r\n          data: this.graphData\r\n        }]\r\n      };\r\n\r\n      myChart.setOption(option);\r\n\r\n      const resizeHandler = () => myChart.resize();\r\n      window.addEventListener('resize', resizeHandler);\r\n      this.$once('hook:beforeDestroy', () => {\r\n        window.removeEventListener('resize', resizeHandler);\r\n        myChart.dispose();\r\n      });\r\n    },\r\n\r\n    // 显示地图\r\n    show() {\r\n      this.dialogVisible = true;\r\n      this.$nextTick(() => {\r\n        this.fetchDataAndDrawMap('mapChart');\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.location {\r\n  position: relative;\r\n  top: 1%;\r\n  width: 100%;\r\n  height: 65%;\r\n  background-color: #ffffff00;\r\n  color: #ffff;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  /* border: 2px solid #669ef3a5; 深色边框 */\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n  backdrop-filter: blur(3px);\r\n  -webkit-backdrop-filter: blur(10px);\r\n  overflow: hidden;\r\n}\r\n.location_title {\r\n  margin-left: 20px;\r\n  padding: 5px;\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n}\r\n#location_graph {\r\n  width: 450px;\r\n  height: 340px;\r\n  top: 30px;\r\n  margin-left: 10%;\r\n  margin-bottom: 7%;\r\n}\r\n#mapChart {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 88%;\r\n}\r\n</style>    "],"mappings":"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","ignoreList":[]}]}