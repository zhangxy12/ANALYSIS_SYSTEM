{"remainingRequest":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\blog_detail\\knowledge_graph.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\src\\components\\blog_detail\\knowledge_graph.vue","mtime":1734925219859},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\babel.config.js","mtime":1732591727371},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":1733210776030},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733210776394},{"path":"D:\\dasanshang\\NLP\\1\\Topic_and_user_profile_analysis_system\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1733210773580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lml0ZXJhdG9yLm1hcC5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAia25vd2xlZGdlX2dyYXBoIiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGltZXI6ICIiLAogICAgICBteUNoYXJ0OiAiIiwKICAgICAga25vd2xlZGdlX2dyYXBoX2RhdGE6IHsKICAgICAgICBlbnRpdGllczogW10sCiAgICAgICAgcmVsYXRpb25zaGlwczogW10KICAgICAgfQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldEtub3dsZWRnZUdyYXBoKCkgewogICAgICBsZXQgcXVlcnkgPSB0aGlzLiRyb3V0ZS5xdWVyeTsKICAgICAgdGhpcy4kYXhpb3MuZ2V0KCJjb21tZW50L2tub3dsZWRnZV9ncmFwaD90YWdfdGFza19pZD0iICsgcXVlcnkudGFnX3Rhc2tfaWQgKyAiJndlaWJvX2lkPSIgKyBxdWVyeS53ZWlib19pZCkudGhlbihyZXMgPT4gewogICAgICAgIHRoaXMua25vd2xlZGdlX2dyYXBoX2RhdGEgPSByZXMuZGF0YS5kYXRhOwogICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhLmRhdGEpOwogICAgICAgIHRoaXMubXlLbm93bGVkZ2VHcmFwaCgpOwogICAgICB9KTsKICAgIH0sCiAgICBteUtub3dsZWRnZUdyYXBoKCkgewogICAgICBsZXQgb3B0aW9uOwogICAgICBpZiAodGhpcy5teUNoYXJ0ICE9IG51bGwgJiYgdGhpcy5teUNoYXJ0ICE9PSAiIiAmJiB0aGlzLm15Q2hhcnQgIT09IHVuZGVmaW5lZCkgewogICAgICAgIHRoaXMubXlDaGFydC5kaXNwb3NlKCk7IC8v6Kej5YazZWNoYXJ0cyBkb23lt7Lnu4/liqDovb3nmoTmiqXplJkKICAgICAgfQogICAgICAvLyDln7rkuo7lh4blpIflpb3nmoRkb23vvIzliJ3lp4vljJZlY2hhcnRz5a6e5L6LCiAgICAgIHRoaXMubXlDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZ3JhcGhfa25vd2xlZGdlIikpOwoKICAgICAgLy8g5p6E6YCg6IqC54K5aWTmmKDlsIQKICAgICAgY29uc3QgZW50aXRpZXMgPSB0aGlzLmtub3dsZWRnZV9ncmFwaF9kYXRhLmVudGl0aWVzOwogICAgICBjb25zdCBlbnRpdHlNYXAgPSB7fTsKICAgICAgY29uc3Qgbm9kZXMgPSBlbnRpdGllcy5tYXAoKGVudGl0eSwgaW5kZXgpID0+IHsKICAgICAgICBlbnRpdHlNYXBbZW50aXR5Lm5hbWVdID0gaW5kZXg7IC8vIOS9v+eUqCBuYW1lIOaYoOWwhCBpZAogICAgICAgIHJldHVybiB7CiAgICAgICAgICBpZDogaW5kZXgsCiAgICAgICAgICBuYW1lOiBlbnRpdHkubmFtZSwKICAgICAgICAgIGNhdGVnb3J5OiBlbnRpdHkudHlwZSwKICAgICAgICAgIC8vIOWPr+agueaNruexu+Wei+i/m+ihjOWIhue7hAogICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgcG9zaXRpb246ICJyaWdodCIsCiAgICAgICAgICAgIGZvcm1hdHRlcjogIntifSIgLy8g6IqC54K55ZCN56ewCiAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgfSk7CgogICAgICAvLyDlsIYgcmVsYXRpb25zaGlwcyDnmoQgc291cmNlIOWSjCB0YXJnZXQg5pig5bCE5Yiw5q2j56Gu55qEIGlkCiAgICAgIGNvbnN0IGxpbmtzID0gdGhpcy5rbm93bGVkZ2VfZ3JhcGhfZGF0YS5yZWxhdGlvbnNoaXBzLm1hcChyZWwgPT4gewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBzb3VyY2U6IGVudGl0eU1hcFtyZWwuc291cmNlXSwKICAgICAgICAgIC8vIOS7jiBlbnRpdHlNYXAg5Lit6I635Y+WIGlkCiAgICAgICAgICB0YXJnZXQ6IGVudGl0eU1hcFtyZWwudGFyZ2V0XSwKICAgICAgICAgIC8vIOS7jiBlbnRpdHlNYXAg5Lit6I635Y+WIGlkCiAgICAgICAgICB2YWx1ZTogcmVsLnZhbHVlLAogICAgICAgICAgLy8g6I635Y+W6L6555qE5YWz57O7CiAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICBmb3JtYXR0ZXI6ICJ7Y30iLAogICAgICAgICAgICAvLyDmmL7npLrlhbPns7sKICAgICAgICAgICAgcG9zaXRpb246ICJtaWRkbGUiLAogICAgICAgICAgICAvLyDmmL7npLrlnKjovrnnmoTkuK3pl7QKICAgICAgICAgICAgZm9udFNpemU6IDEyLAogICAgICAgICAgICAvLyDorr7nva7ovrnkuIrmoIfnrb7nmoTlrZfkvZPlpKflsI8KICAgICAgICAgICAgY29sb3I6ICIjMzMzIiAvLyDorr7nva7ovrnkuIrmoIfnrb7nmoTpopzoibIKICAgICAgICAgIH0KICAgICAgICB9OwogICAgICB9KTsKCiAgICAgIC8vIOWbvuihqOeahOmFjee9rumhuQogICAgICBvcHRpb24gPSB7CiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgYW5pbWF0aW9uOiB0cnVlLAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIHR5cGU6ICJncmFwaCIsCiAgICAgICAgICBsYXlvdXQ6ICJmb3JjZSIsCiAgICAgICAgICAvLyDlvLrliLbluIPlsYAKICAgICAgICAgIHJvYW06IHRydWUsCiAgICAgICAgICAvLyDmmK/lkKblhYHorrjmi5bmi70KICAgICAgICAgIHN5bWJvbFNpemU6IDUwLAogICAgICAgICAgLy8g6IqC54K55aSn5bCPCiAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICBwb3NpdGlvbjogInJpZ2h0IiwKICAgICAgICAgICAgZm9ybWF0dGVyOiAie2J9IiAvLyDoioLngrnlkI3np7AKICAgICAgICAgIH0sCiAgICAgICAgICBlZGdlU3ltYm9sOiBbIm5vbmUiLCAiYXJyb3ciXSwKICAgICAgICAgIC8vIOiuvue9rui+ueeahOagt+W8j++8jOeureWktAogICAgICAgICAgZWRnZVN5bWJvbFNpemU6IFs0LCAxMF0sCiAgICAgICAgICBmb3JjZTogewogICAgICAgICAgICByZXB1bHNpb246IDIwMCwKICAgICAgICAgICAgLy8g6IqC54K55LmL6Ze055qE5pal5YqbCiAgICAgICAgICAgIGVkZ2VMZW5ndGg6IDE1MCAvLyDovrnnmoTplb/luqYKICAgICAgICAgIH0sCiAgICAgICAgICBkYXRhOiBub2RlcywKICAgICAgICAgIGxpbmtzOiBsaW5rcywKICAgICAgICAgIGNhdGVnb3JpZXM6IFt7CiAgICAgICAgICAgIG5hbWU6ICJCbG9nIgogICAgICAgICAgfSwgewogICAgICAgICAgICBuYW1lOiAiVXNlciIKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbmFtZTogIkNvbW1lbnQiCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIG5hbWU6ICJTZW50aW1lbnQiCiAgICAgICAgICB9XSwKICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgIGZvY3VzOiAiYWRqYWNlbmN5IiAvLyDpvKDmoIfmgqzlgZzml7bpq5jkuq7ov57mjqXnmoToioLngrkKICAgICAgICAgIH0sCiAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgY29sb3I6ICIjYWFhIiwKICAgICAgICAgICAgd2lkdGg6IDEsCiAgICAgICAgICAgIGN1cnZlbmVzczogMC4zCiAgICAgICAgICB9CiAgICAgICAgfV0KICAgICAgfTsKICAgICAgdGhpcy5teUNoYXJ0LnNldE9wdGlvbihvcHRpb24pOwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0S25vd2xlZGdlR3JhcGgoKTsKICAgIHRoaXMudGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7CiAgICAgIHRoaXMubXlLbm93bGVkZ2VHcmFwaCgpOwogICAgfSwgNTAwMCk7IC8vIOWumuaXtuabtOaWsOWbvuihqAogIH0sCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcik7CiAgICB0aGlzLnRpbWVyID0gbnVsbDsKICB9Cn07"},{"version":3,"names":["name","data","timer","myChart","knowledge_graph_data","entities","relationships","methods","getKnowledgeGraph","query","$route","$axios","get","tag_task_id","weibo_id","then","res","console","log","myKnowledgeGraph","option","undefined","dispose","$echarts","init","document","getElementById","entityMap","nodes","map","entity","index","id","category","type","label","show","position","formatter","links","rel","source","target","value","fontSize","color","tooltip","animation","series","layout","roam","symbolSize","edgeSymbol","edgeSymbolSize","force","repulsion","edgeLength","categories","emphasis","focus","lineStyle","width","curveness","setOption","mounted","setInterval","beforeDestroy","clearInterval"],"sources":["src/components/blog_detail/knowledge_graph.vue"],"sourcesContent":["<template>\r\n    <div class=\"knowledge_graph\">\r\n      <div class=\"knowledge_graph_title\">博客评论知识图谱</div>\r\n      <div id=\"graph_knowledge\"></div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: \"knowledge_graph\",\r\n    data() {\r\n      return {\r\n        timer: \"\",\r\n        myChart: \"\",\r\n        knowledge_graph_data: {\r\n          entities: [],\r\n          relationships: [],\r\n        },\r\n      };\r\n    },\r\n    methods: {\r\n      getKnowledgeGraph() {\r\n        let query = this.$route.query;\r\n        this.$axios\r\n          .get(\r\n            \"comment/knowledge_graph?tag_task_id=\" +\r\n              query.tag_task_id +\r\n              \"&weibo_id=\" +\r\n              query.weibo_id\r\n          )\r\n          .then((res) => {\r\n            this.knowledge_graph_data = res.data.data;\r\n            console.log(res.data.data);\r\n            this.myKnowledgeGraph();\r\n          });\r\n      },\r\n      myKnowledgeGraph() {\r\n    let option;\r\n    if (this.myChart != null && this.myChart !== \"\" && this.myChart !== undefined) {\r\n        this.myChart.dispose(); //解决echarts dom已经加载的报错\r\n    }\r\n    // 基于准备好的dom，初始化echarts实例\r\n    this.myChart = this.$echarts.init(document.getElementById(\"graph_knowledge\"));\r\n\r\n    // 构造节点id映射\r\n    const entities = this.knowledge_graph_data.entities;\r\n    const entityMap = {};\r\n    const nodes = entities.map((entity, index) => {\r\n        entityMap[entity.name] = index; // 使用 name 映射 id\r\n        return {\r\n            id: index,\r\n            name: entity.name,\r\n            category: entity.type, // 可根据类型进行分组\r\n            label: {\r\n                show: true,\r\n                position: \"right\",\r\n                formatter: \"{b}\", // 节点名称\r\n            },\r\n        };\r\n    });\r\n\r\n    // 将 relationships 的 source 和 target 映射到正确的 id\r\n    const links = this.knowledge_graph_data.relationships.map((rel) => {\r\n        return {\r\n            source: entityMap[rel.source], // 从 entityMap 中获取 id\r\n            target: entityMap[rel.target], // 从 entityMap 中获取 id\r\n            value: rel.value, // 获取边的关系\r\n            label: {\r\n                show: true,\r\n                formatter: \"{c}\", // 显示关系\r\n                position: \"middle\", // 显示在边的中间\r\n                fontSize: 12, // 设置边上标签的字体大小\r\n                color: \"#333\", // 设置边上标签的颜色\r\n            },\r\n        };\r\n    });\r\n\r\n    // 图表的配置项\r\n    option = {\r\n        tooltip: {\r\n            show: true,\r\n        },\r\n        animation: true,\r\n        series: [\r\n            {\r\n                type: \"graph\",\r\n                layout: \"force\", // 强制布局\r\n                roam: true, // 是否允许拖拽\r\n                symbolSize: 50, // 节点大小\r\n                label: {\r\n                    show: true,\r\n                    position: \"right\",\r\n                    formatter: \"{b}\", // 节点名称\r\n                },\r\n                edgeSymbol: [\"none\", \"arrow\"], // 设置边的样式，箭头\r\n                edgeSymbolSize: [4, 10],\r\n                force: {\r\n                    repulsion: 200, // 节点之间的斥力\r\n                    edgeLength: 150, // 边的长度\r\n                },\r\n                data: nodes,\r\n                links: links,\r\n                categories: [\r\n                    { name: \"Blog\" },\r\n                    { name: \"User\" },\r\n                    { name: \"Comment\" },\r\n                    { name: \"Sentiment\" },\r\n                ],\r\n                emphasis: {\r\n                    focus: \"adjacency\", // 鼠标悬停时高亮连接的节点\r\n                },\r\n                lineStyle: {\r\n                    color: \"#aaa\",\r\n                    width: 1,\r\n                    curveness: 0.3,\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    this.myChart.setOption(option);\r\n},\r\n    },\r\n    mounted() {\r\n      this.getKnowledgeGraph();\r\n      this.timer = setInterval(() => {\r\n        this.myKnowledgeGraph();\r\n      }, 5000); // 定时更新图表\r\n    },\r\n    beforeDestroy() {\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .knowledge_graph {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 5%;\r\n    background-color: #ffffff00;\r\n  color:#ffff;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* 添加阴影效果 */\r\n  border: 2px solid #669ef3a5; /* 深色边框 */\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n  \r\n  backdrop-filter: blur(10px); /* 添加磨砂玻璃效果 */\r\n  -webkit-backdrop-filter: blur(10px); /* Safari 兼容 */\r\n  overflow: hidden;\r\n  }\r\n  .knowledge_graph_title {\r\n    margin: 10px 20px;\r\n    padding: 5px;\r\n    font-weight: 600;\r\n    letter-spacing: 1px;\r\n  }\r\n  #graph_knowledge {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  </style>\r\n  "],"mappings":";AAQA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA;MACAC,oBAAA;QACAC,QAAA;QACAC,aAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,kBAAA;MACA,IAAAC,KAAA,QAAAC,MAAA,CAAAD,KAAA;MACA,KAAAE,MAAA,CACAC,GAAA,CACA,yCACAH,KAAA,CAAAI,WAAA,GACA,eACAJ,KAAA,CAAAK,QACA,EACAC,IAAA,CAAAC,GAAA;QACA,KAAAZ,oBAAA,GAAAY,GAAA,CAAAf,IAAA,CAAAA,IAAA;QACAgB,OAAA,CAAAC,GAAA,CAAAF,GAAA,CAAAf,IAAA,CAAAA,IAAA;QACA,KAAAkB,gBAAA;MACA;IACA;IACAA,iBAAA;MACA,IAAAC,MAAA;MACA,SAAAjB,OAAA,iBAAAA,OAAA,gBAAAA,OAAA,KAAAkB,SAAA;QACA,KAAAlB,OAAA,CAAAmB,OAAA;MACA;MACA;MACA,KAAAnB,OAAA,QAAAoB,QAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,cAAA;;MAEA;MACA,MAAArB,QAAA,QAAAD,oBAAA,CAAAC,QAAA;MACA,MAAAsB,SAAA;MACA,MAAAC,KAAA,GAAAvB,QAAA,CAAAwB,GAAA,EAAAC,MAAA,EAAAC,KAAA;QACAJ,SAAA,CAAAG,MAAA,CAAA9B,IAAA,IAAA+B,KAAA;QACA;UACAC,EAAA,EAAAD,KAAA;UACA/B,IAAA,EAAA8B,MAAA,CAAA9B,IAAA;UACAiC,QAAA,EAAAH,MAAA,CAAAI,IAAA;UAAA;UACAC,KAAA;YACAC,IAAA;YACAC,QAAA;YACAC,SAAA;UACA;QACA;MACA;;MAEA;MACA,MAAAC,KAAA,QAAAnC,oBAAA,CAAAE,aAAA,CAAAuB,GAAA,CAAAW,GAAA;QACA;UACAC,MAAA,EAAAd,SAAA,CAAAa,GAAA,CAAAC,MAAA;UAAA;UACAC,MAAA,EAAAf,SAAA,CAAAa,GAAA,CAAAE,MAAA;UAAA;UACAC,KAAA,EAAAH,GAAA,CAAAG,KAAA;UAAA;UACAR,KAAA;YACAC,IAAA;YACAE,SAAA;YAAA;YACAD,QAAA;YAAA;YACAO,QAAA;YAAA;YACAC,KAAA;UACA;QACA;MACA;;MAEA;MACAzB,MAAA;QACA0B,OAAA;UACAV,IAAA;QACA;QACAW,SAAA;QACAC,MAAA,GACA;UACAd,IAAA;UACAe,MAAA;UAAA;UACAC,IAAA;UAAA;UACAC,UAAA;UAAA;UACAhB,KAAA;YACAC,IAAA;YACAC,QAAA;YACAC,SAAA;UACA;UACAc,UAAA;UAAA;UACAC,cAAA;UACAC,KAAA;YACAC,SAAA;YAAA;YACAC,UAAA;UACA;UACAvD,IAAA,EAAA2B,KAAA;UACAW,KAAA,EAAAA,KAAA;UACAkB,UAAA,GACA;YAAAzD,IAAA;UAAA,GACA;YAAAA,IAAA;UAAA,GACA;YAAAA,IAAA;UAAA,GACA;YAAAA,IAAA;UAAA,EACA;UACA0D,QAAA;YACAC,KAAA;UACA;UACAC,SAAA;YACAf,KAAA;YACAgB,KAAA;YACAC,SAAA;UACA;QACA;MAEA;MAEA,KAAA3D,OAAA,CAAA4D,SAAA,CAAA3C,MAAA;IACA;EACA;EACA4C,QAAA;IACA,KAAAxD,iBAAA;IACA,KAAAN,KAAA,GAAA+D,WAAA;MACA,KAAA9C,gBAAA;IACA;EACA;EACA+C,cAAA;IACAC,aAAA,MAAAjE,KAAA;IACA,KAAAA,KAAA;EACA;AACA","ignoreList":[]}]}